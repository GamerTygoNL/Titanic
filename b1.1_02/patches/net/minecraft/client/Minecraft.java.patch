--- net/minecraft/client/Minecraft.java
+++ net/minecraft/client/Minecraft.java
@@ -83,7 +83,17 @@
 import org.lwjgl.opengl.GL11;
 import org.lwjgl.util.glu.GLU;
 
-public abstract class Minecraft implements Runnable {
+import cc.noxiuam.titanic.Ref;
+import cc.noxiuam.titanic.Titanic;
+import cc.noxiuam.titanic.bridge.type.MinecraftBridge;
+import cc.noxiuam.titanic.event.impl.gui.DebugDrawEvent;
+import cc.noxiuam.titanic.event.impl.keyboard.KeyboardEvent;
+import cc.noxiuam.titanic.event.impl.mouse.ClickEvent;
+import cc.noxiuam.titanic.event.impl.mouse.ScrollEvent;
+import cc.noxiuam.titanic.event.impl.world.TickEvent;
+import cc.noxiuam.titanic.event.impl.world.player.PlayerWorldChangeEvent;
+
+public abstract class Minecraft implements Runnable, MinecraftBridge {
     public PlayerController playerController;
     private boolean a = false;
     public int displayWidth;
@@ -131,7 +141,7 @@
     private static File minecraftDir = null;
     public volatile boolean running = true;
     public String debug = "";
-    boolean isTakingScreenshot = false;
+    public boolean isTakingScreenshot = false;
     long prevFrameTime = -1L;
     public boolean field_6289_L = false;
     private int field_6302_aa = 0;
@@ -139,7 +149,10 @@
     long systemTime = System.currentTimeMillis();
     private int field_6300_ab = 0;
 
+    public static Minecraft theMinecraft;
+
     public Minecraft(Component var1, Canvas var2, MinecraftApplet var3, int var4, int var5, boolean var6) {
+        theMinecraft = this;
         this.field_9235_U = var5;
         this.a = var6;
         this.mcApplet = var3;
@@ -213,7 +226,7 @@
         } catch (Exception var4) {
             var4.printStackTrace();
         }
-
+        new Titanic(this);
         this.checkGLError("Pre startup");
         GL11.glEnable(GL11.GL_TEXTURE_2D);
         GL11.glShadeModel(GL11.GL_SMOOTH);
@@ -315,6 +328,10 @@
         return minecraftDir;
     }
 
+    public static Minecraft getMinecraft() {
+        return theMinecraft;
+    }
+
     public static File getAppDir(String var0) {
         String var1 = System.getProperty("user.home", ".");
         File var2;
@@ -502,7 +519,10 @@
                         Thread.sleep(10L);
                     }
 
-                    if(Keyboard.isKeyDown(Keyboard.KEY_F3)) {
+                    DebugDrawEvent debugDrawEvent = new DebugDrawEvent();
+                    Ref.getEventManager().handleEvent(debugDrawEvent);
+
+                    if(Keyboard.isKeyDown(Keyboard.KEY_F3) || debugDrawEvent.isCancelled()) {
                         this.displayDebugInfo(var20);
                     } else {
                         this.prevFrameTime = System.nanoTime();
@@ -643,13 +663,11 @@
     }
 
     public void func_6259_e() {
-        if(Display.isActive()) {
-            if(!this.field_6289_L) {
-                this.field_6289_L = true;
-                this.mouseHelper.func_774_a();
-                this.displayGuiScreen((GuiScreen)null);
-                this.field_6302_aa = this.ticksRan + 10000;
-            }
+        if(Display.isActive() && !this.field_6289_L) {
+            this.field_6289_L = true;
+            this.mouseHelper.func_774_a();
+            this.displayGuiScreen((GuiScreen)null);
+            this.field_6302_aa = this.ticksRan + 10000;
         }
     }
 
@@ -671,19 +689,17 @@
     }
 
     private void func_6254_a(int var1, boolean var2) {
-        if(!this.playerController.field_1064_b) {
-            if(var1 != 0 || this.field_6282_S <= 0) {
-                if(var2 && this.objectMouseOver != null && this.objectMouseOver.typeOfHit == 0 && var1 == 0) {
-                    int var3 = this.objectMouseOver.blockX;
-                    int var4 = this.objectMouseOver.blockY;
-                    int var5 = this.objectMouseOver.blockZ;
-                    this.playerController.sendBlockRemoving(var3, var4, var5, this.objectMouseOver.sideHit);
-                    this.effectRenderer.func_1191_a(var3, var4, var5, this.objectMouseOver.sideHit);
-                } else {
-                    this.playerController.func_6468_a();
-                }
-
+        if(!this.playerController.field_1064_b && (var1 != 0 || this.field_6282_S <= 0)) {
+            if(var2 && this.objectMouseOver != null && this.objectMouseOver.typeOfHit == 0 && var1 == 0) {
+                int var3 = this.objectMouseOver.blockX;
+                int var4 = this.objectMouseOver.blockY;
+                int var5 = this.objectMouseOver.blockZ;
+                this.playerController.sendBlockRemoving(var3, var4, var5, this.objectMouseOver.sideHit);
+                this.effectRenderer.func_1191_a(var3, var4, var5, this.objectMouseOver.sideHit);
+            } else {
+                this.playerController.func_6468_a();
             }
+
         }
     }
 
@@ -862,6 +878,9 @@
             this.displayGuiScreen((GuiScreen)null);
         }
 
+        TickEvent tickEvent = new TickEvent();
+        Ref.getEventManager().handleEvent(tickEvent);
+
         if(this.currentScreen != null) {
             this.field_6302_aa = this.ticksRan + 10000;
         }
@@ -922,7 +941,10 @@
                                                     this.forceReload();
                                                 }
 
-                                                if(Keyboard.getEventKey() == Keyboard.KEY_F5) {
+                                                KeyboardEvent event = new KeyboardEvent(Keyboard.getEventKey());
+                                                Ref.getEventManager().handleEvent(event);
+
+                                                if(Keyboard.getEventKey() == Keyboard.KEY_F5 && !Ref.getModuleManager().getPerspectiveModule().enabled()) {
                                                     this.gameSettings.thirdPersonView = !this.gameSettings.thirdPersonView;
                                                 }
 
@@ -935,7 +957,7 @@
                                                 }
 
                                                 if(this.isMultiplayerWorld() && Keyboard.getEventKey() == this.gameSettings.keyBindChat.keyCode) {
-                                                    this.displayGuiScreen(new GuiChat());
+                                                    this.displayGuiScreen(new GuiChat(false));
                                                 }
                                             }
 
@@ -957,8 +979,14 @@
                         } while(var1 > 200L);
 
                         int var3 = Mouse.getEventDWheel();
+
                         if(var3 != 0) {
-                            this.thePlayer.inventory.changeCurrentItem(var3);
+                            ScrollEvent event = new ScrollEvent(var3);
+                            Ref.getEventManager().handleEvent(event);
+
+                            if (!event.isCancelled()) {
+                                this.thePlayer.inventory.changeCurrentItem(var3);
+                            }
                         }
 
                         if(this.currentScreen == null) {
@@ -979,6 +1007,11 @@
                                     this.clickMiddleMouseButton();
                                 }
                             }
+
+                            if (Mouse.getEventButtonState()) {
+                                ClickEvent clickEvent = new ClickEvent(Mouse.getEventButton());
+                                Ref.getEventManager().handleEvent(clickEvent);
+                            }
                         } else if(this.currentScreen != null) {
                             this.currentScreen.handleMouseInput();
                         }
@@ -1096,6 +1129,9 @@
     }
 
     public void changeWorld(World var1, String var2, EntityPlayer var3) {
+        PlayerWorldChangeEvent worldChangeEvent = new PlayerWorldChangeEvent(theWorld, var1);
+        Ref.getEventManager().handleEvent(worldChangeEvent);
+
         this.loadingScreen.printText(var2);
         this.loadingScreen.displayLoadingString("");
         this.sndManager.func_331_a((String)null, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F);
