--- net/minecraft/client/MinecraftApplet.java
+++ net/minecraft/client/MinecraftApplet.java
@@ -1,107 +1,107 @@
 package net.minecraft.client;
 
-import java.applet.Applet;
-import java.awt.BorderLayout;
-import java.awt.Canvas;
 import net.minecraft.src.CanvasMinecraftApplet;
 import net.minecraft.src.MinecraftAppletImpl;
 import net.minecraft.src.Session;
 
+import java.applet.Applet;
+import java.awt.*;
+
 public class MinecraftApplet extends Applet {
+
     private Canvas mcCanvas;
     private Minecraft mc;
-    private Thread mcThread = null;
+    private Thread mcThread;
+
+    public MinecraftApplet() {
+        mcThread = null;
+    }
 
     public void init() {
-        this.mcCanvas = new CanvasMinecraftApplet(this);
-        boolean var1 = false;
-        if(this.getParameter("fullscreen") != null) {
-            var1 = this.getParameter("fullscreen").equalsIgnoreCase("true");
-        }
-
-        this.mc = new MinecraftAppletImpl(this, this, this.mcCanvas, this, this.getWidth(), this.getHeight(), var1);
-        this.mc.minecraftUri = this.getDocumentBase().getHost();
-        if(this.getDocumentBase().getPort() > 0) {
-            this.mc.minecraftUri = this.mc.minecraftUri + ":" + this.getDocumentBase().getPort();
-        }
-
-        if(this.getParameter("username") != null && this.getParameter("sessionid") != null) {
-            this.mc.session = new Session(this.getParameter("username"), this.getParameter("sessionid"));
-            System.out.println("Setting user: " + this.mc.session.playerName + ", " + this.mc.session.field_6543_c);
-            if(this.getParameter("mppass") != null) {
-                this.mc.session.field_6542_d = this.getParameter("mppass");
+        mcCanvas = new CanvasMinecraftApplet(this);
+        boolean flag = false;
+        if (getParameter("fullscreen") != null) {
+            flag = getParameter("fullscreen").equalsIgnoreCase("true");
+        }
+        mc = new MinecraftAppletImpl(this, this, mcCanvas, this, getWidth(), getHeight(), flag);
+        mc.minecraftUri = getDocumentBase().getHost();
+        if (getDocumentBase().getPort() > 0) {
+            mc.minecraftUri += ":" + getDocumentBase().getPort();
+        }
+        if (getParameter("username") != null && getParameter("sessionid") != null) {
+            mc.session = new Session(getParameter("username"), getParameter("sessionid"));
+            System.out.println((new StringBuilder()).append("Setting user: ").append(mc.session.playerName).append(", ").append(mc.session.field_6543_c).toString());
+            if (getParameter("mppass") != null) {
+                mc.session.field_6542_d = getParameter("mppass");
             }
         } else {
-            this.mc.session = new Session("Player", "");
-        }
-
-        if(this.getParameter("loadmap_user") != null && this.getParameter("loadmap_id") != null) {
-            this.mc.field_6310_s = this.getParameter("loadmap_user");
-            this.mc.field_6309_t = Integer.parseInt(this.getParameter("loadmap_id"));
-        } else if(this.getParameter("server") != null && this.getParameter("port") != null) {
-            this.mc.setServer(this.getParameter("server"), Integer.parseInt(this.getParameter("port")));
-        }
-
-        this.mc.field_6317_l = true;
-        this.setLayout(new BorderLayout());
-        this.add(this.mcCanvas, "Center");
-        this.mcCanvas.setFocusable(true);
-        this.validate();
+            mc.session = new Session("Player", "");
+        }
+        if (getParameter("loadmap_user") != null && getParameter("loadmap_id") != null) {
+            mc.field_6310_s = getParameter("loadmap_user");
+            mc.field_6309_t = Integer.parseInt(getParameter("loadmap_id"));
+        } else if (getParameter("server") != null && getParameter("port") != null) {
+            mc.setServer(getParameter("server"), Integer.parseInt(getParameter("port")));
+        }
+        mc.field_6317_l = true;
+        setLayout(new BorderLayout());
+        add(mcCanvas, "Center");
+        mcCanvas.setFocusable(true);
+        validate();
+        return;
     }
 
     public void func_6233_a() {
-        if(this.mcThread == null) {
-            this.mcThread = new Thread(this.mc, "Minecraft main thread");
-            this.mcThread.start();
+        if (mcThread != null) {
+            return;
+        } else {
+            mcThread = new Thread(mc, "Minecraft main thread");
+            mcThread.start();
+            return;
         }
     }
 
     public void start() {
-        if(this.mc != null) {
-            this.mc.isWorldLoaded = false;
+        if (mc != null) {
+            mc.isWorldLoaded = false;
         }
-
     }
 
     public void stop() {
-        if(this.mc != null) {
-            this.mc.isWorldLoaded = true;
+        if (mc != null) {
+            mc.isWorldLoaded = true;
         }
-
     }
 
     public void destroy() {
-        this.shutdown();
+        shutdown();
     }
 
     public void shutdown() {
-        if(this.mcThread != null) {
-            this.mc.shutdown();
-
+        if (mcThread == null) {
+            return;
+        }
+        mc.shutdown();
+        try {
+            mcThread.join(10000L);
+        } catch (InterruptedException interruptedexception) {
             try {
-                this.mcThread.join(10000L);
-            } catch (InterruptedException var4) {
-                try {
-                    this.mc.shutdownMinecraftApplet();
-                } catch (Exception var3) {
-                    var3.printStackTrace();
-                }
+                mc.shutdownMinecraftApplet();
+            } catch (Exception exception) {
+                exception.printStackTrace();
             }
-
-            this.mcThread = null;
         }
+        mcThread = null;
     }
 
     public void clearApplet() {
-        this.mcCanvas = null;
-        this.mc = null;
-        this.mcThread = null;
-
+        mcCanvas = null;
+        mc = null;
+        mcThread = null;
         try {
-            this.removeAll();
-            this.validate();
-        } catch (Exception var2) {
+            removeAll();
+            validate();
+        } catch (Exception exception) {
         }
-
     }
 }
