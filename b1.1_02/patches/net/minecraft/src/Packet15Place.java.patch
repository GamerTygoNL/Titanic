--- net/minecraft/src/Packet15Place.java
+++ net/minecraft/src/Packet15Place.java
@@ -5,6 +5,7 @@
 import java.io.IOException;
 
 public class Packet15Place extends Packet {
+
     public int id;
     public int xPosition;
     public int yPosition;
@@ -14,47 +15,45 @@
     public Packet15Place() {
     }
 
-    public Packet15Place(int var1, int var2, int var3, int var4, ItemStack var5) {
-        this.id = var1;
-        this.xPosition = var2;
-        this.yPosition = var3;
-        this.zPosition = var4;
-        this.direction = var5;
-    }
-
-    public void readPacketData(DataInputStream var1) throws IOException {
-        this.id = var1.readInt();
-        this.xPosition = var1.read();
-        this.yPosition = var1.readInt();
-        this.zPosition = var1.read();
-        short var2 = var1.readShort();
-        if(var2 >= 0) {
-            byte var3 = var1.readByte();
-            byte var4 = var1.readByte();
-            this.direction = new ItemStack(var2, var3, var4);
-        } else {
-            this.direction = null;
-        }
-
-    }
-
-    public void writePacketData(DataOutputStream var1) throws IOException {
-        var1.writeInt(this.id);
-        var1.write(this.xPosition);
-        var1.writeInt(this.yPosition);
-        var1.write(this.zPosition);
-        if(this.direction == null) {
-            var1.writeShort(-1);
-        } else {
-            var1.writeShort(this.direction.itemID);
-            var1.writeByte(this.direction.stackSize);
-            var1.writeByte(this.direction.itemDamage);
-        }
-
-    }
-
-    public void processPacket(NetHandler var1) {
-        var1.handlePlace(this);
+    public Packet15Place(int i, int j, int k, int l, ItemStack itemstack) {
+        id = i;
+        xPosition = j;
+        yPosition = k;
+        zPosition = l;
+        direction = itemstack;
+    }
+
+    public void readPacketData(DataInputStream datainputstream) throws IOException {
+        id = datainputstream.readInt();
+        xPosition = datainputstream.read();
+        yPosition = datainputstream.readInt();
+        zPosition = datainputstream.read();
+        short word0 = datainputstream.readShort();
+        if (word0 >= 0) {
+            byte byte0 = datainputstream.readByte();
+            byte byte1 = datainputstream.readByte();
+            direction = new ItemStack(word0, byte0, byte1);
+        } else {
+            direction = null;
+        }
+    }
+
+    public void writePacketData(DataOutputStream dataoutputstream) throws IOException {
+        dataoutputstream.writeInt(id);
+        dataoutputstream.write(xPosition);
+        dataoutputstream.writeInt(yPosition);
+        dataoutputstream.write(zPosition);
+        if (direction == null) {
+            dataoutputstream.writeShort(-1);
+        } else {
+            dataoutputstream.writeShort(direction.itemID);
+            dataoutputstream.writeByte(direction.stackSize);
+            dataoutputstream.writeByte(direction.itemDamage);
+        }
+    }
+
+    public void processPacket(NetHandler nethandler) {
+        nethandler.handlePlace(this);
     }
 
     public int getPacketSize() {
