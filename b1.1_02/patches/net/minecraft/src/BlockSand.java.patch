--- net/minecraft/src/BlockSand.java
+++ net/minecraft/src/BlockSand.java
@@ -3,51 +3,58 @@
 import java.util.Random;
 
 public class BlockSand extends Block {
+
     public static boolean fallInstantly = false;
 
-    public BlockSand(int var1, int var2) {
-        super(var1, var2, Material.sand);
-    }
-
-    public void onBlockAdded(World var1, int var2, int var3, int var4) {
-        var1.scheduleBlockUpdate(var2, var3, var4, this.blockID);
-    }
-
-    public void onNeighborBlockChange(World var1, int var2, int var3, int var4, int var5) {
-        var1.scheduleBlockUpdate(var2, var3, var4, this.blockID);
-    }
-
-    public void updateTick(World var1, int var2, int var3, int var4, Random var5) {
-        this.tryToFall(var1, var2, var3, var4);
-    }
-
-    private void tryToFall(World var1, int var2, int var3, int var4) {
-        if(canFallBelow(var1, var2, var3 - 1, var4) && var3 >= 0) {
-            EntityFallingSand var8 = new EntityFallingSand(var1, (double)((float)var2 + 0.5F), (double)((float)var3 + 0.5F), (double)((float)var4 + 0.5F), this.blockID);
-            if(fallInstantly) {
-                while(!var8.isDead) {
-                    var8.onUpdate();
+    public BlockSand(int i, int j) {
+        super(i, j, Material.sand);
+    }
+
+    public static boolean canFallBelow(World world, int i, int j, int k) {
+        int l = world.getBlockId(i, j, k);
+        if (l == 0) {
+            return true;
+        }
+        if (l == Block.fire.blockID) {
+            return true;
+        }
+        Material material = Block.blocksList[l].blockMaterial;
+        if (material == Material.water) {
+            return true;
+        }
+        return material == Material.lava;
+    }
+
+    public void onBlockAdded(World world, int i, int j, int k) {
+        world.scheduleBlockUpdate(i, j, k, blockID);
+    }
+
+    public void onNeighborBlockChange(World world, int i, int j, int k, int l) {
+        world.scheduleBlockUpdate(i, j, k, blockID);
+    }
+
+    public void updateTick(World world, int i, int j, int k, Random random) {
+        tryToFall(world, i, j, k);
+    }
+
+    private void tryToFall(World world, int i, int j, int k) {
+        int l = i;
+        int i1 = j;
+        int j1 = k;
+        if (canFallBelow(world, l, i1 - 1, j1) && i1 >= 0) {
+            EntityFallingSand entityfallingsand = new EntityFallingSand(world, (float) i + 0.5F, (float) j + 0.5F, (float) k + 0.5F, blockID);
+            if (fallInstantly) {
+                while (!entityfallingsand.isDead) {
+                    entityfallingsand.onUpdate();
                 }
             } else {
-                var1.entityJoinedWorld(var8);
+                world.entityJoinedWorld(entityfallingsand);
             }
         }
-
     }
 
     public int tickRate() {
         return 3;
     }
 
-    public static boolean canFallBelow(World var0, int var1, int var2, int var3) {
-        int var4 = var0.getBlockId(var1, var2, var3);
-        if(var4 == 0) {
-            return true;
-        } else if(var4 == Block.fire.blockID) {
-            return true;
-        } else {
-            Material var5 = Block.blocksList[var4].blockMaterial;
-            return var5 == Material.water ? true : var5 == Material.lava;
-        }
-    }
 }
