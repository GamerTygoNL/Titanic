--- net/minecraft/src/BlockReed.java
+++ net/minecraft/src/BlockReed.java
@@ -3,59 +3,72 @@
 import java.util.Random;
 
 public class BlockReed extends Block {
-    protected BlockReed(int var1, int var2) {
-        super(var1, Material.plants);
-        this.blockIndexInTexture = var2;
-        float var3 = 6.0F / 16.0F;
-        this.setBlockBounds(0.5F - var3, 0.0F, 0.5F - var3, 0.5F + var3, 1.0F, 0.5F + var3);
-        this.setTickOnLoad(true);
+
+    protected BlockReed(int i, int j) {
+        super(i, Material.plants);
+        blockIndexInTexture = j;
+        float f = 0.375F;
+        setBlockBounds(0.5F - f, 0.0F, 0.5F - f, 0.5F + f, 1.0F, 0.5F + f);
+        setTickOnLoad(true);
     }
 
-    public void updateTick(World var1, int var2, int var3, int var4, Random var5) {
-        if(var1.func_20084_d(var2, var3 + 1, var4)) {
-            int var6;
-            for(var6 = 1; var1.getBlockId(var2, var3 - var6, var4) == this.blockID; ++var6) {
+    public void updateTick(World world, int i, int j, int k, Random random) {
+        if (world.func_20084_d(i, j + 1, k)) {
+            int l;
+            for (l = 1; world.getBlockId(i, j - l, k) == blockID; l++) {
             }
-
-            if(var6 < 3) {
-                int var7 = var1.getBlockMetadata(var2, var3, var4);
-                if(var7 == 15) {
-                    var1.setBlockWithNotify(var2, var3 + 1, var4, this.blockID);
-                    var1.setBlockMetadataWithNotify(var2, var3, var4, 0);
+            if (l < 3) {
+                int i1 = world.getBlockMetadata(i, j, k);
+                if (i1 == 15) {
+                    world.setBlockWithNotify(i, j + 1, k, blockID);
+                    world.setBlockMetadataWithNotify(i, j, k, 0);
                 } else {
-                    var1.setBlockMetadataWithNotify(var2, var3, var4, var7 + 1);
+                    world.setBlockMetadataWithNotify(i, j, k, i1 + 1);
                 }
             }
         }
-
-    }
-
-    public boolean canPlaceBlockAt(World var1, int var2, int var3, int var4) {
-        int var5 = var1.getBlockId(var2, var3 - 1, var4);
-        return var5 == this.blockID ? true : (var5 != Block.grass.blockID && var5 != Block.dirt.blockID ? false : (var1.getBlockMaterial(var2 - 1, var3 - 1, var4) == Material.water ? true : (var1.getBlockMaterial(var2 + 1, var3 - 1, var4) == Material.water ? true : (var1.getBlockMaterial(var2, var3 - 1, var4 - 1) == Material.water ? true : var1.getBlockMaterial(var2, var3 - 1, var4 + 1) == Material.water))));
-    }
-
-    public void onNeighborBlockChange(World var1, int var2, int var3, int var4, int var5) {
-        this.checkBlockCoordValid(var1, var2, var3, var4);
-    }
-
-    protected final void checkBlockCoordValid(World var1, int var2, int var3, int var4) {
-        if(!this.canBlockStay(var1, var2, var3, var4)) {
-            this.dropBlockAsItem(var1, var2, var3, var4, var1.getBlockMetadata(var2, var3, var4));
-            var1.setBlockWithNotify(var2, var3, var4, 0);
-        }
-
-    }
-
-    public boolean canBlockStay(World var1, int var2, int var3, int var4) {
-        return this.canPlaceBlockAt(var1, var2, var3, var4);
-    }
-
-    public AxisAlignedBB getCollisionBoundingBoxFromPool(World var1, int var2, int var3, int var4) {
+    }
+
+    public boolean canPlaceBlockAt(World world, int i, int j, int k) {
+        int l = world.getBlockId(i, j - 1, k);
+        if (l == blockID) {
+            return true;
+        }
+        if (l != Block.grass.blockID && l != Block.dirt.blockID) {
+            return false;
+        }
+        if (world.getBlockMaterial(i - 1, j - 1, k) == Material.water) {
+            return true;
+        }
+        if (world.getBlockMaterial(i + 1, j - 1, k) == Material.water) {
+            return true;
+        }
+        if (world.getBlockMaterial(i, j - 1, k - 1) == Material.water) {
+            return true;
+        }
+        return world.getBlockMaterial(i, j - 1, k + 1) == Material.water;
+    }
+
+    public void onNeighborBlockChange(World world, int i, int j, int k, int l) {
+        checkBlockCoordValid(world, i, j, k);
+    }
+
+    protected final void checkBlockCoordValid(World world, int i, int j, int k) {
+        if (!canBlockStay(world, i, j, k)) {
+            dropBlockAsItem(world, i, j, k, world.getBlockMetadata(i, j, k));
+            world.setBlockWithNotify(i, j, k, 0);
+        }
+    }
+
+    public boolean canBlockStay(World world, int i, int j, int k) {
+        return canPlaceBlockAt(world, i, j, k);
+    }
+
+    public AxisAlignedBB getCollisionBoundingBoxFromPool(World world, int i, int j, int k) {
         return null;
     }
 
-    public int idDropped(int var1, Random var2) {
+    public int idDropped(int i, Random random) {
         return Item.reed.shiftedIndex;
     }
 
