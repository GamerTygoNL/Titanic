--- net/minecraft/src/EntitySpider.java
+++ net/minecraft/src/EntitySpider.java
@@ -1,22 +1,23 @@
 package net.minecraft.src;
 
 public class EntitySpider extends EntityMobs {
-    public EntitySpider(World var1) {
-        super(var1);
-        this.texture = "/mob/spider.png";
-        this.setSize(1.4F, 0.9F);
-        this.moveSpeed = 0.8F;
+
+    public EntitySpider(World world) {
+        super(world);
+        texture = "/mob/spider.png";
+        setSize(1.4F, 0.9F);
+        moveSpeed = 0.8F;
     }
 
     public double getMountedYOffset() {
-        return (double)this.height * 0.75D - 0.5D;
+        return (double) height * 0.75D - 0.5D;
     }
 
     protected Entity findPlayerToAttack() {
-        float var1 = this.getEntityBrightness(1.0F);
-        if(var1 < 0.5F) {
-            double var2 = 16.0D;
-            return this.worldObj.getClosestPlayerToEntity(this, var2);
+        float f = getEntityBrightness(1.0F);
+        if (f < 0.5F) {
+            double d = 16D;
+            return worldObj.getClosestPlayerToEntity(this, d);
         } else {
             return null;
         }
@@ -34,33 +35,32 @@
         return "mob.spiderdeath";
     }
 
-    protected void attackEntity(Entity var1, float var2) {
-        float var3 = this.getEntityBrightness(1.0F);
-        if(var3 > 0.5F && this.rand.nextInt(100) == 0) {
-            this.playerToAttack = null;
-        } else {
-            if(var2 > 2.0F && var2 < 6.0F && this.rand.nextInt(10) == 0) {
-                if(this.onGround) {
-                    double var4 = var1.posX - this.posX;
-                    double var6 = var1.posZ - this.posZ;
-                    float var8 = MathHelper.sqrt_double(var4 * var4 + var6 * var6);
-                    this.motionX = var4 / (double)var8 * 0.5D * (double)0.8F + this.motionX * (double)0.2F;
-                    this.motionZ = var6 / (double)var8 * 0.5D * (double)0.8F + this.motionZ * (double)0.2F;
-                    this.motionY = (double)0.4F;
-                }
-            } else {
-                super.attackEntity(var1, var2);
+    protected void attackEntity(Entity entity, float f) {
+        float f1 = getEntityBrightness(1.0F);
+        if (f1 > 0.5F && rand.nextInt(100) == 0) {
+            playerToAttack = null;
+            return;
+        }
+        if (f > 2.0F && f < 6F && rand.nextInt(10) == 0) {
+            if (onGround) {
+                double d = entity.posX - posX;
+                double d1 = entity.posZ - posZ;
+                float f2 = MathHelper.sqrt_double(d * d + d1 * d1);
+                motionX = (d / (double) f2) * 0.5D * 0.80000001192092896D + motionX * 0.20000000298023224D;
+                motionZ = (d1 / (double) f2) * 0.5D * 0.80000001192092896D + motionZ * 0.20000000298023224D;
+                motionY = 0.40000000596046448D;
             }
-
+        } else {
+            super.attackEntity(entity, f);
         }
     }
 
-    public void writeEntityToNBT(NBTTagCompound var1) {
-        super.writeEntityToNBT(var1);
+    public void writeEntityToNBT(NBTTagCompound nbttagcompound) {
+        super.writeEntityToNBT(nbttagcompound);
     }
 
-    public void readEntityFromNBT(NBTTagCompound var1) {
-        super.readEntityFromNBT(var1);
+    public void readEntityFromNBT(NBTTagCompound nbttagcompound) {
+        super.readEntityFromNBT(nbttagcompound);
     }
 
     protected int getDropItemId() {
