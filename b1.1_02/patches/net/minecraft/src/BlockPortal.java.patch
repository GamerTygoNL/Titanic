--- net/minecraft/src/BlockPortal.java
+++ net/minecraft/src/BlockPortal.java
@@ -1,29 +1,30 @@
 package net.minecraft.src;
 
+import cc.noxiuam.titanic.Ref;
+import cc.noxiuam.titanic.event.impl.world.player.PlayerBlockCollideEvent;
+
 import java.util.Random;
 
 public class BlockPortal extends BlockBreakable {
-    public BlockPortal(int var1, int var2) {
-        super(var1, var2, Material.portal, false);
+
+    public BlockPortal(int i, int j) {
+        super(i, j, Material.portal, false);
     }
 
-    public AxisAlignedBB getCollisionBoundingBoxFromPool(World var1, int var2, int var3, int var4) {
+    public AxisAlignedBB getCollisionBoundingBoxFromPool(World world, int i, int j, int k) {
         return null;
     }
 
-    public void setBlockBoundsBasedOnState(IBlockAccess var1, int var2, int var3, int var4) {
-        float var5;
-        float var6;
-        if(var1.getBlockId(var2 - 1, var3, var4) != this.blockID && var1.getBlockId(var2 + 1, var3, var4) != this.blockID) {
-            var5 = 2.0F / 16.0F;
-            var6 = 0.5F;
-            this.setBlockBounds(0.5F - var5, 0.0F, 0.5F - var6, 0.5F + var5, 1.0F, 0.5F + var6);
+    public void setBlockBoundsBasedOnState(IBlockAccess iblockaccess, int i, int j, int k) {
+        if (iblockaccess.getBlockId(i - 1, j, k) == blockID || iblockaccess.getBlockId(i + 1, j, k) == blockID) {
+            float f = 0.5F;
+            float f2 = 0.125F;
+            setBlockBounds(0.5F - f, 0.0F, 0.5F - f2, 0.5F + f, 1.0F, 0.5F + f2);
         } else {
-            var5 = 0.5F;
-            var6 = 2.0F / 16.0F;
-            this.setBlockBounds(0.5F - var5, 0.0F, 0.5F - var6, 0.5F + var5, 1.0F, 0.5F + var6);
+            float f1 = 0.125F;
+            float f3 = 0.5F;
+            setBlockBounds(0.5F - f1, 0.0F, 0.5F - f3, 0.5F + f1, 1.0F, 0.5F + f3);
         }
-
     }
 
     public boolean isOpaqueCube() {
@@ -34,95 +35,93 @@
         return false;
     }
 
-    public boolean tryToCreatePortal(World var1, int var2, int var3, int var4) {
-        byte var5 = 0;
-        byte var6 = 0;
-        if(var1.getBlockId(var2 - 1, var3, var4) == Block.obsidian.blockID || var1.getBlockId(var2 + 1, var3, var4) == Block.obsidian.blockID) {
-            var5 = 1;
-        }
-
-        if(var1.getBlockId(var2, var3, var4 - 1) == Block.obsidian.blockID || var1.getBlockId(var2, var3, var4 + 1) == Block.obsidian.blockID) {
-            var6 = 1;
-        }
-
-        System.out.println(var5 + ", " + var6);
-        if(var5 == var6) {
+    public boolean tryToCreatePortal(World world, int i, int j, int k) {
+        int l = 0;
+        int i1 = 0;
+        if (world.getBlockId(i - 1, j, k) == Block.obsidian.blockID || world.getBlockId(i + 1, j, k) == Block.obsidian.blockID) {
+            l = 1;
+        }
+        if (world.getBlockId(i, j, k - 1) == Block.obsidian.blockID || world.getBlockId(i, j, k + 1) == Block.obsidian.blockID) {
+            i1 = 1;
+        }
+        System.out.println(l + ", " + i1);
+        if (l == i1) {
             return false;
-        } else {
-            if(var1.getBlockId(var2 - var5, var3, var4 - var6) == 0) {
-                var2 -= var5;
-                var4 -= var6;
-            }
-
-            int var7;
-            int var8;
-            for(var7 = -1; var7 <= 2; ++var7) {
-                for(var8 = -1; var8 <= 3; ++var8) {
-                    boolean var9 = var7 == -1 || var7 == 2 || var8 == -1 || var8 == 3;
-                    if(var7 != -1 && var7 != 2 || var8 != -1 && var8 != 3) {
-                        int var10 = var1.getBlockId(var2 + var5 * var7, var3 + var8, var4 + var6 * var7);
-                        if(var9) {
-                            if(var10 != Block.obsidian.blockID) {
-                                return false;
-                            }
-                        } else if(var10 != 0 && var10 != Block.fire.blockID) {
-                            return false;
-                        }
+        }
+        if (world.getBlockId(i - l, j, k - i1) == 0) {
+            i -= l;
+            k -= i1;
+        }
+        for (int j1 = -1; j1 <= 2; j1++) {
+            for (int l1 = -1; l1 <= 3; l1++) {
+                boolean flag = j1 == -1 || j1 == 2 || l1 == -1 || l1 == 3;
+                if ((j1 == -1 || j1 == 2) && (l1 == -1 || l1 == 3)) {
+                    continue;
+                }
+                int j2 = world.getBlockId(i + l * j1, j + l1, k + i1 * j1);
+                if (flag) {
+                    if (j2 != Block.obsidian.blockID) {
+                        return false;
                     }
-                }
-            }
-
-            var1.field_1043_h = true;
-
-            for(var7 = 0; var7 < 2; ++var7) {
-                for(var8 = 0; var8 < 3; ++var8) {
-                    var1.setBlockWithNotify(var2 + var5 * var7, var3 + var8, var4 + var6 * var7, Block.portal.blockID);
-                }
-            }
-
-            var1.field_1043_h = false;
-            return true;
-        }
+                    continue;
+                }
+                if (j2 != 0 && j2 != Block.fire.blockID) {
+                    return false;
+                }
+            }
+
+        }
+
+        world.field_1043_h = true;
+        for (int k1 = 0; k1 < 2; k1++) {
+            for (int i2 = 0; i2 < 3; i2++) {
+                world.setBlockWithNotify(i + l * k1, j + i2, k + i1 * k1, Block.portal.blockID);
+            }
+
+        }
+
+        world.field_1043_h = false;
+        return true;
     }
 
-    public void onNeighborBlockChange(World var1, int var2, int var3, int var4, int var5) {
-        byte var6 = 0;
-        byte var7 = 1;
-        if(var1.getBlockId(var2 - 1, var3, var4) == this.blockID || var1.getBlockId(var2 + 1, var3, var4) == this.blockID) {
-            var6 = 1;
-            var7 = 0;
-        }
-
-        int var8;
-        for(var8 = var3; var1.getBlockId(var2, var8 - 1, var4) == this.blockID; --var8) {
-        }
-
-        if(var1.getBlockId(var2, var8 - 1, var4) != Block.obsidian.blockID) {
-            var1.setBlockWithNotify(var2, var3, var4, 0);
+    public void onNeighborBlockChange(World world, int i, int j, int k, int l) {
+        int i1 = 0;
+        int j1 = 1;
+        if (world.getBlockId(i - 1, j, k) == blockID || world.getBlockId(i + 1, j, k) == blockID) {
+            i1 = 1;
+            j1 = 0;
+        }
+        int k1;
+        for (k1 = j; world.getBlockId(i, k1 - 1, k) == blockID; k1--) {
+        }
+        if (world.getBlockId(i, k1 - 1, k) != Block.obsidian.blockID) {
+            world.setBlockWithNotify(i, j, k, 0);
+            return;
+        }
+        int l1;
+        for (l1 = 1; l1 < 4 && world.getBlockId(i, k1 + l1, k) == blockID; l1++) {
+        }
+        if (l1 != 3 || world.getBlockId(i, k1 + l1, k) != Block.obsidian.blockID) {
+            world.setBlockWithNotify(i, j, k, 0);
+            return;
+        }
+        boolean flag = world.getBlockId(i - 1, j, k) == blockID || world.getBlockId(i + 1, j, k) == blockID;
+        boolean flag1 = world.getBlockId(i, j, k - 1) == blockID || world.getBlockId(i, j, k + 1) == blockID;
+        if (flag && flag1) {
+            world.setBlockWithNotify(i, j, k, 0);
+            return;
+        }
+        if ((world.getBlockId(i + i1, j, k + j1) != Block.obsidian.blockID || world.getBlockId(i - i1, j, k - j1) != blockID) && (world.getBlockId(i - i1, j, k - j1) != Block.obsidian.blockID || world.getBlockId(i + i1, j, k + j1) != blockID)) {
+            world.setBlockWithNotify(i, j, k, 0);
         } else {
-            int var9;
-            for(var9 = 1; var9 < 4 && var1.getBlockId(var2, var8 + var9, var4) == this.blockID; ++var9) {
-            }
-
-            if(var9 == 3 && var1.getBlockId(var2, var8 + var9, var4) == Block.obsidian.blockID) {
-                boolean var10 = var1.getBlockId(var2 - 1, var3, var4) == this.blockID || var1.getBlockId(var2 + 1, var3, var4) == this.blockID;
-                boolean var11 = var1.getBlockId(var2, var3, var4 - 1) == this.blockID || var1.getBlockId(var2, var3, var4 + 1) == this.blockID;
-                if(var10 && var11) {
-                    var1.setBlockWithNotify(var2, var3, var4, 0);
-                } else if((var1.getBlockId(var2 + var6, var3, var4 + var7) != Block.obsidian.blockID || var1.getBlockId(var2 - var6, var3, var4 - var7) != this.blockID) && (var1.getBlockId(var2 - var6, var3, var4 - var7) != Block.obsidian.blockID || var1.getBlockId(var2 + var6, var3, var4 + var7) != this.blockID)) {
-                    var1.setBlockWithNotify(var2, var3, var4, 0);
-                }
-            } else {
-                var1.setBlockWithNotify(var2, var3, var4, 0);
-            }
         }
     }
 
-    public boolean shouldSideBeRendered(IBlockAccess var1, int var2, int var3, int var4, int var5) {
+    public boolean shouldSideBeRendered(IBlockAccess iblockaccess, int i, int j, int k, int l) {
         return true;
     }
 
-    public int quantityDropped(Random var1) {
+    public int quantityDropped(Random random) {
         return 0;
     }
 
@@ -130,37 +129,39 @@
         return 1;
     }
 
-    public void onEntityCollidedWithBlock(World var1, int var2, int var3, int var4, Entity var5) {
-        if(!var1.multiplayerWorld) {
-            var5.setInPortal();
+    public void onEntityCollidedWithBlock(World world, int i, int j, int k, Entity entity) {
+        PlayerBlockCollideEvent event = new PlayerBlockCollideEvent(entity, this);
+        Ref.getEventManager().handleEvent(event);
+
+        if (world.multiplayerWorld) {
+        } else {
+            entity.setInPortal();
         }
     }
 
-    public void randomDisplayTick(World var1, int var2, int var3, int var4, Random var5) {
-        if(var5.nextInt(100) == 0) {
-            var1.playSoundEffect((double)var2 + 0.5D, (double)var3 + 0.5D, (double)var4 + 0.5D, "portal.portal", 1.0F, var5.nextFloat() * 0.4F + 0.8F);
+    public void randomDisplayTick(World world, int i, int j, int k, Random random) {
+        if (random.nextInt(100) == 0) {
+            world.playSoundEffect((double) i + 0.5D, (double) j + 0.5D, (double) k + 0.5D, "portal.portal", 1.0F, random.nextFloat() * 0.4F + 0.8F);
         }
-
-        for(int var6 = 0; var6 < 4; ++var6) {
-            double var7 = (double)((float)var2 + var5.nextFloat());
-            double var9 = (double)((float)var3 + var5.nextFloat());
-            double var11 = (double)((float)var4 + var5.nextFloat());
-            double var13 = 0.0D;
-            double var15 = 0.0D;
-            double var17 = 0.0D;
-            int var19 = var5.nextInt(2) * 2 - 1;
-            var13 = ((double)var5.nextFloat() - 0.5D) * 0.5D;
-            var15 = ((double)var5.nextFloat() - 0.5D) * 0.5D;
-            var17 = ((double)var5.nextFloat() - 0.5D) * 0.5D;
-            if(var1.getBlockId(var2 - 1, var3, var4) != this.blockID && var1.getBlockId(var2 + 1, var3, var4) != this.blockID) {
-                var7 = (double)var2 + 0.5D + 0.25D * (double)var19;
-                var13 = (double)(var5.nextFloat() * 2.0F * (float)var19);
+        for (int l = 0; l < 4; l++) {
+            double d = (float) i + random.nextFloat();
+            double d1 = (float) j + random.nextFloat();
+            double d2 = (float) k + random.nextFloat();
+            double d3 = 0.0D;
+            double d4 = 0.0D;
+            double d5 = 0.0D;
+            int i1 = random.nextInt(2) * 2 - 1;
+            d3 = ((double) random.nextFloat() - 0.5D) * 0.5D;
+            d4 = ((double) random.nextFloat() - 0.5D) * 0.5D;
+            d5 = ((double) random.nextFloat() - 0.5D) * 0.5D;
+            if (world.getBlockId(i - 1, j, k) == blockID || world.getBlockId(i + 1, j, k) == blockID) {
+                d2 = (double) k + 0.5D + 0.25D * (double) i1;
+                d5 = random.nextFloat() * 2.0F * (float) i1;
             } else {
-                var11 = (double)var4 + 0.5D + 0.25D * (double)var19;
-                var17 = (double)(var5.nextFloat() * 2.0F * (float)var19);
+                d = (double) i + 0.5D + 0.25D * (double) i1;
+                d3 = random.nextFloat() * 2.0F * (float) i1;
             }
-
-            var1.spawnParticle("portal", var7, var9, var11, var13, var15, var17);
+            world.spawnParticle("portal", d, d1, d2, d3, d4, d5);
         }
 
     }
