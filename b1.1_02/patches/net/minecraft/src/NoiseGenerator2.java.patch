--- net/minecraft/src/NoiseGenerator2.java
+++ net/minecraft/src/NoiseGenerator2.java
@@ -3,112 +3,132 @@
 import java.util.Random;
 
 public class NoiseGenerator2 {
-    private static int[][] field_4296_d = new int[][]{{1, 1, 0}, {-1, 1, 0}, {1, -1, 0}, {-1, -1, 0}, {1, 0, 1}, {-1, 0, 1}, {1, 0, -1}, {-1, 0, -1}, {0, 1, 1}, {0, -1, 1}, {0, 1, -1}, {0, -1, -1}};
-    private int[] field_4295_e;
+
+    private static final double field_4294_f = 0.5D * (Math.sqrt(3D) - 1.0D);
+    private static final double field_4293_g = (3D - Math.sqrt(3D)) / 6D;
+    private static int field_4296_d[][] = {
+            {
+                    1, 1, 0
+            }, {
+            -1, 1, 0
+    }, {
+            1, -1, 0
+    }, {
+            -1, -1, 0
+    }, {
+            1, 0, 1
+    }, {
+            -1, 0, 1
+    }, {
+            1, 0, -1
+    }, {
+            -1, 0, -1
+    }, {
+            0, 1, 1
+    }, {
+            0, -1, 1
+    }, {
+            0, 1, -1
+    }, {
+            0, -1, -1
+    }
+    };
     public double field_4292_a;
     public double field_4291_b;
     public double field_4297_c;
-    private static final double field_4294_f = 0.5D * (Math.sqrt(3.0D) - 1.0D);
-    private static final double field_4293_g = (3.0D - Math.sqrt(3.0D)) / 6.0D;
-
+    private int field_4295_e[];
     public NoiseGenerator2() {
         this(new Random());
     }
-
-    public NoiseGenerator2(Random var1) {
-        this.field_4295_e = new int[512];
-        this.field_4292_a = var1.nextDouble() * 256.0D;
-        this.field_4291_b = var1.nextDouble() * 256.0D;
-        this.field_4297_c = var1.nextDouble() * 256.0D;
-
-        int var2;
-        for(var2 = 0; var2 < 256; this.field_4295_e[var2] = var2++) {
-        }
-
-        for(var2 = 0; var2 < 256; ++var2) {
-            int var3 = var1.nextInt(256 - var2) + var2;
-            int var4 = this.field_4295_e[var2];
-            this.field_4295_e[var2] = this.field_4295_e[var3];
-            this.field_4295_e[var3] = var4;
-            this.field_4295_e[var2 + 256] = this.field_4295_e[var2];
-        }
-
-    }
-
-    private static int func_4155_a(double var0) {
-        return var0 > 0.0D ? (int)var0 : (int)var0 - 1;
-    }
-
-    private static double func_4156_a(int[] var0, double var1, double var3) {
-        return (double)var0[0] * var1 + (double)var0[1] * var3;
-    }
-
-    public void func_4157_a(double[] var1, double var2, double var4, int var6, int var7, double var8, double var10, double var12) {
-        int var14 = 0;
-
-        for(int var15 = 0; var15 < var6; ++var15) {
-            double var16 = (var2 + (double)var15) * var8 + this.field_4292_a;
-
-            for(int var18 = 0; var18 < var7; ++var18) {
-                double var19 = (var4 + (double)var18) * var10 + this.field_4291_b;
-                double var27 = (var16 + var19) * field_4294_f;
-                int var29 = func_4155_a(var16 + var27);
-                int var30 = func_4155_a(var19 + var27);
-                double var31 = (double)(var29 + var30) * field_4293_g;
-                double var33 = (double)var29 - var31;
-                double var35 = (double)var30 - var31;
-                double var37 = var16 - var33;
-                double var39 = var19 - var35;
-                byte var41;
-                byte var42;
-                if(var37 > var39) {
-                    var41 = 1;
-                    var42 = 0;
-                } else {
-                    var41 = 0;
-                    var42 = 1;
-                }
-
-                double var43 = var37 - (double)var41 + field_4293_g;
-                double var45 = var39 - (double)var42 + field_4293_g;
-                double var47 = var37 - 1.0D + 2.0D * field_4293_g;
-                double var49 = var39 - 1.0D + 2.0D * field_4293_g;
-                int var51 = var29 & 255;
-                int var52 = var30 & 255;
-                int var53 = this.field_4295_e[var51 + this.field_4295_e[var52]] % 12;
-                int var54 = this.field_4295_e[var51 + var41 + this.field_4295_e[var52 + var42]] % 12;
-                int var55 = this.field_4295_e[var51 + 1 + this.field_4295_e[var52 + 1]] % 12;
-                double var56 = 0.5D - var37 * var37 - var39 * var39;
-                double var21;
-                if(var56 < 0.0D) {
-                    var21 = 0.0D;
-                } else {
-                    var56 *= var56;
-                    var21 = var56 * var56 * func_4156_a(field_4296_d[var53], var37, var39);
-                }
-
-                double var58 = 0.5D - var43 * var43 - var45 * var45;
-                double var23;
-                if(var58 < 0.0D) {
-                    var23 = 0.0D;
-                } else {
-                    var58 *= var58;
-                    var23 = var58 * var58 * func_4156_a(field_4296_d[var54], var43, var45);
-                }
-
-                double var60 = 0.5D - var47 * var47 - var49 * var49;
-                double var25;
-                if(var60 < 0.0D) {
-                    var25 = 0.0D;
-                } else {
-                    var60 *= var60;
-                    var25 = var60 * var60 * func_4156_a(field_4296_d[var55], var47, var49);
-                }
-
-                int var10001 = var14++;
-                var1[var10001] += 70.0D * (var21 + var23 + var25) * var12;
+    public NoiseGenerator2(Random random) {
+        field_4295_e = new int[512];
+        field_4292_a = random.nextDouble() * 256D;
+        field_4291_b = random.nextDouble() * 256D;
+        field_4297_c = random.nextDouble() * 256D;
+        for (int i = 0; i < 256; i++) {
+            field_4295_e[i] = i;
+        }
+
+        for (int j = 0; j < 256; j++) {
+            int k = random.nextInt(256 - j) + j;
+            int l = field_4295_e[j];
+            field_4295_e[j] = field_4295_e[k];
+            field_4295_e[k] = l;
+            field_4295_e[j + 256] = field_4295_e[j];
+        }
+
+    }
+
+    private static int func_4155_a(double d) {
+        return d <= 0.0D ? (int) d - 1 : (int) d;
+    }
+
+    private static double func_4156_a(int ai[], double d, double d1) {
+        return (double) ai[0] * d + (double) ai[1] * d1;
+    }
+
+    public void func_4157_a(double ad[], double d, double d1, int i, int j,
+                            double d2, double d3, double d4) {
+        int k = 0;
+        for (int l = 0; l < i; l++) {
+            double d5 = (d + (double) l) * d2 + field_4292_a;
+            for (int i1 = 0; i1 < j; i1++) {
+                double d6 = (d1 + (double) i1) * d3 + field_4291_b;
+                double d10 = (d5 + d6) * field_4294_f;
+                int j1 = func_4155_a(d5 + d10);
+                int k1 = func_4155_a(d6 + d10);
+                double d11 = (double) (j1 + k1) * field_4293_g;
+                double d12 = (double) j1 - d11;
+                double d13 = (double) k1 - d11;
+                double d14 = d5 - d12;
+                double d15 = d6 - d13;
+                int l1;
+                int i2;
+                if (d14 > d15) {
+                    l1 = 1;
+                    i2 = 0;
+                } else {
+                    l1 = 0;
+                    i2 = 1;
+                }
+                double d16 = (d14 - (double) l1) + field_4293_g;
+                double d17 = (d15 - (double) i2) + field_4293_g;
+                double d18 = (d14 - 1.0D) + 2D * field_4293_g;
+                double d19 = (d15 - 1.0D) + 2D * field_4293_g;
+                int j2 = j1 & 0xff;
+                int k2 = k1 & 0xff;
+                int l2 = field_4295_e[j2 + field_4295_e[k2]] % 12;
+                int i3 = field_4295_e[j2 + l1 + field_4295_e[k2 + i2]] % 12;
+                int j3 = field_4295_e[j2 + 1 + field_4295_e[k2 + 1]] % 12;
+                double d20 = 0.5D - d14 * d14 - d15 * d15;
+                double d7;
+                if (d20 < 0.0D) {
+                    d7 = 0.0D;
+                } else {
+                    d20 *= d20;
+                    d7 = d20 * d20 * func_4156_a(field_4296_d[l2], d14, d15);
+                }
+                double d21 = 0.5D - d16 * d16 - d17 * d17;
+                double d8;
+                if (d21 < 0.0D) {
+                    d8 = 0.0D;
+                } else {
+                    d21 *= d21;
+                    d8 = d21 * d21 * func_4156_a(field_4296_d[i3], d16, d17);
+                }
+                double d22 = 0.5D - d18 * d18 - d19 * d19;
+                double d9;
+                if (d22 < 0.0D) {
+                    d9 = 0.0D;
+                } else {
+                    d22 *= d22;
+                    d9 = d22 * d22 * func_4156_a(field_4296_d[j3], d18, d19);
+                }
+                ad[k++] += 70D * (d7 + d8 + d9) * d4;
             }
+
         }
 
     }
+
 }
