--- net/minecraft/src/CraftingInventoryCB.java
+++ net/minecraft/src/CraftingInventoryCB.java
@@ -6,139 +6,138 @@
 import java.util.Set;
 
 public abstract class CraftingInventoryCB {
-    public List field_20123_d = new ArrayList();
-    public List field_20122_e = new ArrayList();
-    public int unusedList = 0;
-    private short craftMatrix = 0;
-    protected List field_20121_g = new ArrayList();
-    private Set craftResult = new HashSet();
-
-    protected void func_20117_a(Slot var1) {
-        var1.field_20007_a = this.field_20122_e.size();
-        this.field_20122_e.add(var1);
-        this.field_20123_d.add((Object)null);
+
+    public List field_20123_d;
+    public List field_20122_e;
+    public int unusedList;
+    protected List field_20121_g;
+    private short craftMatrix;
+    private Set craftResult;
+
+    public CraftingInventoryCB() {
+        field_20123_d = new ArrayList();
+        field_20122_e = new ArrayList();
+        unusedList = 0;
+        craftMatrix = 0;
+        field_20121_g = new ArrayList();
+        craftResult = new HashSet();
+    }
+
+    protected void func_20117_a(Slot slot) {
+        slot.field_20007_a = field_20122_e.size();
+        field_20122_e.add(slot);
+        field_20123_d.add(null);
     }
 
     public void func_20114_a() {
-        for(int var1 = 0; var1 < this.field_20122_e.size(); ++var1) {
-            ItemStack var2 = ((Slot)this.field_20122_e.get(var1)).getStack();
-            ItemStack var3 = (ItemStack)this.field_20123_d.get(var1);
-            if(!ItemStack.func_20107_a(var3, var2)) {
-                var3 = var2 == null ? null : var2.copy();
-                this.field_20123_d.set(var1, var3);
+        for (int i = 0; i < field_20122_e.size(); i++) {
+            ItemStack itemstack = ((Slot) field_20122_e.get(i)).getStack();
+            ItemStack itemstack1 = (ItemStack) field_20123_d.get(i);
+            if (ItemStack.func_20107_a(itemstack1, itemstack)) {
+                continue;
+            }
+            itemstack1 = itemstack != null ? itemstack.copy() : null;
+            field_20123_d.set(i, itemstack1);
+            for (int j = 0; j < field_20121_g.size(); j++) {
+                ((ICrafting) field_20121_g.get(j)).func_20159_a(this, i, itemstack1);
+            }
 
-                for(int var4 = 0; var4 < this.field_20121_g.size(); ++var4) {
-                    ((ICrafting)this.field_20121_g.get(var4)).func_20159_a(this, var1, var3);
-                }
-            }
         }
 
     }
 
-    public Slot func_20118_a(int var1) {
-        return (Slot)this.field_20122_e.get(var1);
+    public Slot func_20118_a(int i) {
+        return (Slot) field_20122_e.get(i);
     }
 
-    public ItemStack func_20116_a(int var1, int var2, EntityPlayer var3) {
-        ItemStack var4 = null;
-        if(var2 == 0 || var2 == 1) {
-            InventoryPlayer var5 = var3.inventory;
-            if(var1 == -999) {
-                if(var5.func_20075_i() != null && var1 == -999) {
-                    if(var2 == 0) {
-                        var3.dropPlayerItem(var5.func_20075_i());
-                        var5.func_20076_b((ItemStack)null);
+    public ItemStack func_20116_a(int i, int j, EntityPlayer entityplayer) {
+        ItemStack itemstack = null;
+        if (j == 0 || j == 1) {
+            InventoryPlayer inventoryplayer = entityplayer.inventory;
+            if (i == -999) {
+                if (inventoryplayer.func_20075_i() != null && i == -999) {
+                    if (j == 0) {
+                        entityplayer.dropPlayerItem(inventoryplayer.func_20075_i());
+                        inventoryplayer.func_20076_b(null);
                     }
-
-                    if(var2 == 1) {
-                        var3.dropPlayerItem(var5.func_20075_i().splitStack(1));
-                        if(var5.func_20075_i().stackSize == 0) {
-                            var5.func_20076_b((ItemStack)null);
+                    if (j == 1) {
+                        entityplayer.dropPlayerItem(inventoryplayer.func_20075_i().splitStack(1));
+                        if (inventoryplayer.func_20075_i().stackSize == 0) {
+                            inventoryplayer.func_20076_b(null);
                         }
                     }
                 }
             } else {
-                Slot var6 = (Slot)this.field_20122_e.get(var1);
-                if(var6 != null) {
-                    var6.onSlotChanged();
-                    ItemStack var7 = var6.getStack();
-                    if(var7 != null) {
-                        var4 = var7.copy();
+                Slot slot = (Slot) field_20122_e.get(i);
+                if (slot != null) {
+                    slot.onSlotChanged();
+                    ItemStack itemstack1 = slot.getStack();
+                    if (itemstack1 != null) {
+                        itemstack = itemstack1.copy();
                     }
-
-                    if(var7 != null || var5.func_20075_i() != null) {
-                        int var8;
-                        if(var7 != null && var5.func_20075_i() == null) {
-                            var8 = var2 == 0 ? var7.stackSize : (var7.stackSize + 1) / 2;
-                            var5.func_20076_b(var6.func_20004_a(var8));
-                            if(var7.stackSize == 0) {
-                                var6.putStack((ItemStack)null);
-                            }
-
-                            var6.onPickupFromSlot();
-                        } else if(var7 == null && var5.func_20075_i() != null && var6.isItemValid(var5.func_20075_i())) {
-                            var8 = var2 == 0 ? var5.func_20075_i().stackSize : 1;
-                            if(var8 > var6.getSlotStackLimit()) {
-                                var8 = var6.getSlotStackLimit();
-                            }
-
-                            var6.putStack(var5.func_20075_i().splitStack(var8));
-                            if(var5.func_20075_i().stackSize == 0) {
-                                var5.func_20076_b((ItemStack)null);
-                            }
-                        } else if(var7 != null && var5.func_20075_i() != null) {
-                            if(var6.isItemValid(var5.func_20075_i())) {
-                                if(var7.itemID != var5.func_20075_i().itemID) {
-                                    if(var5.func_20075_i().stackSize <= var6.getSlotStackLimit()) {
-                                        var6.putStack(var5.func_20075_i());
-                                        var5.func_20076_b(var7);
+                    if (itemstack1 != null || inventoryplayer.func_20075_i() != null) {
+                        if (itemstack1 != null && inventoryplayer.func_20075_i() == null) {
+                            int k = j != 0 ? (itemstack1.stackSize + 1) / 2 : itemstack1.stackSize;
+                            inventoryplayer.func_20076_b(slot.func_20004_a(k));
+                            if (itemstack1.stackSize == 0) {
+                                slot.putStack(null);
+                            }
+                            slot.onPickupFromSlot();
+                        } else if (itemstack1 == null && inventoryplayer.func_20075_i() != null && slot.isItemValid(inventoryplayer.func_20075_i())) {
+                            int l = j != 0 ? 1 : inventoryplayer.func_20075_i().stackSize;
+                            if (l > slot.getSlotStackLimit()) {
+                                l = slot.getSlotStackLimit();
+                            }
+                            slot.putStack(inventoryplayer.func_20075_i().splitStack(l));
+                            if (inventoryplayer.func_20075_i().stackSize == 0) {
+                                inventoryplayer.func_20076_b(null);
+                            }
+                        } else if (itemstack1 != null && inventoryplayer.func_20075_i() != null) {
+                            if (slot.isItemValid(inventoryplayer.func_20075_i())) {
+                                if (itemstack1.itemID != inventoryplayer.func_20075_i().itemID) {
+                                    if (inventoryplayer.func_20075_i().stackSize <= slot.getSlotStackLimit()) {
+                                        ItemStack itemstack2 = itemstack1;
+                                        slot.putStack(inventoryplayer.func_20075_i());
+                                        inventoryplayer.func_20076_b(itemstack2);
                                     }
-                                } else if(var7.itemID == var5.func_20075_i().itemID) {
-                                    if(var2 == 0) {
-                                        var8 = var5.func_20075_i().stackSize;
-                                        if(var8 > var6.getSlotStackLimit() - var7.stackSize) {
-                                            var8 = var6.getSlotStackLimit() - var7.stackSize;
-                                        }
-
-                                        if(var8 > var5.func_20075_i().getMaxStackSize() - var7.stackSize) {
-                                            var8 = var5.func_20075_i().getMaxStackSize() - var7.stackSize;
-                                        }
-
-                                        var5.func_20075_i().splitStack(var8);
-                                        if(var5.func_20075_i().stackSize == 0) {
-                                            var5.func_20076_b((ItemStack)null);
-                                        }
-
-                                        var7.stackSize += var8;
-                                    } else if(var2 == 1) {
-                                        var8 = 1;
-                                        if(var8 > var6.getSlotStackLimit() - var7.stackSize) {
-                                            var8 = var6.getSlotStackLimit() - var7.stackSize;
-                                        }
-
-                                        if(var8 > var5.func_20075_i().getMaxStackSize() - var7.stackSize) {
-                                            var8 = var5.func_20075_i().getMaxStackSize() - var7.stackSize;
-                                        }
-
-                                        var5.func_20075_i().splitStack(var8);
-                                        if(var5.func_20075_i().stackSize == 0) {
-                                            var5.func_20076_b((ItemStack)null);
-                                        }
-
-                                        var7.stackSize += var8;
+                                } else if (itemstack1.itemID == inventoryplayer.func_20075_i().itemID) {
+                                    if (j == 0) {
+                                        int i1 = inventoryplayer.func_20075_i().stackSize;
+                                        if (i1 > slot.getSlotStackLimit() - itemstack1.stackSize) {
+                                            i1 = slot.getSlotStackLimit() - itemstack1.stackSize;
+                                        }
+                                        if (i1 > inventoryplayer.func_20075_i().getMaxStackSize() - itemstack1.stackSize) {
+                                            i1 = inventoryplayer.func_20075_i().getMaxStackSize() - itemstack1.stackSize;
+                                        }
+                                        inventoryplayer.func_20075_i().splitStack(i1);
+                                        if (inventoryplayer.func_20075_i().stackSize == 0) {
+                                            inventoryplayer.func_20076_b(null);
+                                        }
+                                        itemstack1.stackSize += i1;
+                                    } else if (j == 1) {
+                                        int j1 = 1;
+                                        if (j1 > slot.getSlotStackLimit() - itemstack1.stackSize) {
+                                            j1 = slot.getSlotStackLimit() - itemstack1.stackSize;
+                                        }
+                                        if (j1 > inventoryplayer.func_20075_i().getMaxStackSize() - itemstack1.stackSize) {
+                                            j1 = inventoryplayer.func_20075_i().getMaxStackSize() - itemstack1.stackSize;
+                                        }
+                                        inventoryplayer.func_20075_i().splitStack(j1);
+                                        if (inventoryplayer.func_20075_i().stackSize == 0) {
+                                            inventoryplayer.func_20076_b(null);
+                                        }
+                                        itemstack1.stackSize += j1;
                                     }
                                 }
-                            } else if(var7.itemID == var5.func_20075_i().itemID && var5.func_20075_i().getMaxStackSize() > 1) {
-                                var8 = var7.stackSize;
-                                if(var8 > 0 && var8 + var5.func_20075_i().stackSize <= var5.func_20075_i().getMaxStackSize()) {
-                                    ItemStack var10000 = var5.func_20075_i();
-                                    var10000.stackSize += var8;
-                                    var7.splitStack(var8);
-                                    if(var7.stackSize == 0) {
-                                        var6.putStack((ItemStack)null);
+                            } else if (itemstack1.itemID == inventoryplayer.func_20075_i().itemID && inventoryplayer.func_20075_i().getMaxStackSize() > 1) {
+                                int k1 = itemstack1.stackSize;
+                                if (k1 > 0 && k1 + inventoryplayer.func_20075_i().stackSize <= inventoryplayer.func_20075_i().getMaxStackSize()) {
+                                    inventoryplayer.func_20075_i().stackSize += k1;
+                                    itemstack1.splitStack(k1);
+                                    if (itemstack1.stackSize == 0) {
+                                        slot.putStack(null);
                                     }
-
-                                    var6.onPickupFromSlot();
+                                    slot.onPickupFromSlot();
                                 }
                             }
                         }
@@ -146,47 +145,45 @@
                 }
             }
         }
-
-        return var4;
-    }
-
-    public void onCraftGuiClosed(EntityPlayer var1) {
-        InventoryPlayer var2 = var1.inventory;
-        if(var2.func_20075_i() != null) {
-            var1.dropPlayerItem(var2.func_20075_i());
-            var2.func_20076_b((ItemStack)null);
-        }
-
-    }
-
-    public void onCraftMatrixChanged(IInventory var1) {
-        this.func_20114_a();
-    }
-
-    public void func_20119_a(int var1, ItemStack var2) {
-        this.func_20118_a(var1).putStack(var2);
-    }
-
-    public void func_20115_a(ItemStack[] var1) {
-        for(int var2 = 0; var2 < var1.length; ++var2) {
-            this.func_20118_a(var2).putStack(var1[var2]);
-        }
-
-    }
-
-    public void func_20112_a(int var1, int var2) {
-    }
-
-    public short func_20111_a(InventoryPlayer var1) {
-        ++this.craftMatrix;
-        return this.craftMatrix;
-    }
-
-    public void func_20113_a(short var1) {
-    }
-
-    public void func_20110_b(short var1) {
-    }
-
-    public abstract boolean func_20120_b(EntityPlayer var1);
+        return itemstack;
+    }
+
+    public void onCraftGuiClosed(EntityPlayer entityplayer) {
+        InventoryPlayer inventoryplayer = entityplayer.inventory;
+        if (inventoryplayer.func_20075_i() != null) {
+            entityplayer.dropPlayerItem(inventoryplayer.func_20075_i());
+            inventoryplayer.func_20076_b(null);
+        }
+    }
+
+    public void onCraftMatrixChanged(IInventory iinventory) {
+        func_20114_a();
+    }
+
+    public void func_20119_a(int i, ItemStack itemstack) {
+        func_20118_a(i).putStack(itemstack);
+    }
+
+    public void func_20115_a(ItemStack aitemstack[]) {
+        for (int i = 0; i < aitemstack.length; i++) {
+            func_20118_a(i).putStack(aitemstack[i]);
+        }
+
+    }
+
+    public void func_20112_a(int i, int j) {
+    }
+
+    public short func_20111_a(InventoryPlayer inventoryplayer) {
+        craftMatrix++;
+        return craftMatrix;
+    }
+
+    public void func_20113_a(short word0) {
+    }
+
+    public void func_20110_b(short word0) {
+    }
+
+    public abstract boolean func_20120_b(EntityPlayer entityplayer);
 }
