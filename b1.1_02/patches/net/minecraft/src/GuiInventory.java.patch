--- net/minecraft/src/GuiInventory.java
+++ net/minecraft/src/GuiInventory.java
@@ -1,60 +1,60 @@
 package net.minecraft.src;
 
 import org.lwjgl.opengl.GL11;
-import org.lwjgl.opengl.GL12;
 
 public class GuiInventory extends GuiContainer {
+
     private float xSize_lo;
     private float ySize_lo;
 
-    public GuiInventory(EntityPlayer var1) {
-        super(var1.field_20069_g);
-        this.field_948_f = true;
+    public GuiInventory(EntityPlayer entityplayer) {
+        super(entityplayer.field_20069_g);
+        field_948_f = true;
     }
 
     protected void drawGuiContainerForegroundLayer() {
-        this.fontRenderer.drawString("Crafting", 86, 16, 4210752);
-    }
-
-    public void drawScreen(int var1, int var2, float var3) {
-        super.drawScreen(var1, var2, var3);
-        this.xSize_lo = (float)var1;
-        this.ySize_lo = (float)var2;
-    }
-
-    protected void drawGuiContainerBackgroundLayer(float var1) {
-        int var2 = this.mc.renderEngine.getTexture("/gui/inventory.png");
+        fontRenderer.drawString("Crafting", 86, 16, 0x404040);
+    }
+
+    public void drawScreen(int i, int j, float f) {
+        super.drawScreen(i, j, f);
+        xSize_lo = i;
+        ySize_lo = j;
+    }
+
+    protected void drawGuiContainerBackgroundLayer(float f) {
+        int i = mc.renderEngine.getTexture("/gui/inventory.png");
         GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
-        this.mc.renderEngine.bindTexture(var2);
-        int var3 = (this.width - this.xSize) / 2;
-        int var4 = (this.height - this.ySize) / 2;
-        this.drawTexturedModalRect(var3, var4, 0, 0, this.xSize, this.ySize);
-        GL11.glEnable(GL12.GL_RESCALE_NORMAL);
-        GL11.glEnable(GL11.GL_COLOR_MATERIAL);
+        mc.renderEngine.bindTexture(i);
+        int j = (width - xSize) / 2;
+        int k = (height - ySize) / 2;
+        drawTexturedModalRect(j, k, 0, 0, xSize, ySize);
+        GL11.glEnable(32826 /*GL_RESCALE_NORMAL_EXT*/);
+        GL11.glEnable(2903 /*GL_COLOR_MATERIAL*/);
         GL11.glPushMatrix();
-        GL11.glTranslatef((float)(var3 + 51), (float)(var4 + 75), 50.0F);
-        float var5 = 30.0F;
-        GL11.glScalef(-var5, var5, var5);
-        GL11.glRotatef(180.0F, 0.0F, 0.0F, 1.0F);
-        float var6 = this.mc.thePlayer.renderYawOffset;
-        float var7 = this.mc.thePlayer.rotationYaw;
-        float var8 = this.mc.thePlayer.rotationPitch;
-        float var9 = (float)(var3 + 51) - this.xSize_lo;
-        float var10 = (float)(var4 + 75 - 50) - this.ySize_lo;
-        GL11.glRotatef(135.0F, 0.0F, 1.0F, 0.0F);
+        GL11.glTranslatef(j + 51, k + 75, 50F);
+        float f1 = 30F;
+        GL11.glScalef(-f1, f1, f1);
+        GL11.glRotatef(180F, 0.0F, 0.0F, 1.0F);
+        float f2 = mc.thePlayer.renderYawOffset;
+        float f3 = mc.thePlayer.rotationYaw;
+        float f4 = mc.thePlayer.rotationPitch;
+        float f5 = (float) (j + 51) - xSize_lo;
+        float f6 = (float) ((k + 75) - 50) - ySize_lo;
+        GL11.glRotatef(135F, 0.0F, 1.0F, 0.0F);
         RenderHelper.enableStandardItemLighting();
-        GL11.glRotatef(-135.0F, 0.0F, 1.0F, 0.0F);
-        GL11.glRotatef(-((float)Math.atan((double)(var10 / 40.0F))) * 20.0F, 1.0F, 0.0F, 0.0F);
-        this.mc.thePlayer.renderYawOffset = (float)Math.atan((double)(var9 / 40.0F)) * 20.0F;
-        this.mc.thePlayer.rotationYaw = (float)Math.atan((double)(var9 / 40.0F)) * 40.0F;
-        this.mc.thePlayer.rotationPitch = -((float)Math.atan((double)(var10 / 40.0F))) * 20.0F;
-        GL11.glTranslatef(0.0F, this.mc.thePlayer.yOffset, 0.0F);
-        RenderManager.instance.renderEntityWithPosYaw(this.mc.thePlayer, 0.0D, 0.0D, 0.0D, 0.0F, 1.0F);
-        this.mc.thePlayer.renderYawOffset = var6;
-        this.mc.thePlayer.rotationYaw = var7;
-        this.mc.thePlayer.rotationPitch = var8;
+        GL11.glRotatef(-135F, 0.0F, 1.0F, 0.0F);
+        GL11.glRotatef(-(float) Math.atan(f6 / 40F) * 20F, 1.0F, 0.0F, 0.0F);
+        mc.thePlayer.renderYawOffset = (float) Math.atan(f5 / 40F) * 20F;
+        mc.thePlayer.rotationYaw = (float) Math.atan(f5 / 40F) * 40F;
+        mc.thePlayer.rotationPitch = -(float) Math.atan(f6 / 40F) * 20F;
+        GL11.glTranslatef(0.0F, mc.thePlayer.yOffset, 0.0F);
+        RenderManager.instance.renderEntityWithPosYaw(mc.thePlayer, 0.0D, 0.0D, 0.0D, 0.0F, 1.0F);
+        mc.thePlayer.renderYawOffset = f2;
+        mc.thePlayer.rotationYaw = f3;
+        mc.thePlayer.rotationPitch = f4;
         GL11.glPopMatrix();
         RenderHelper.disableStandardItemLighting();
-        GL11.glDisable(GL12.GL_RESCALE_NORMAL);
+        GL11.glDisable(32826 /*GL_RESCALE_NORMAL_EXT*/);
     }
 }
