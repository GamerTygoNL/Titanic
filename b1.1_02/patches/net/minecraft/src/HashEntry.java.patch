--- net/minecraft/src/HashEntry.java
+++ net/minecraft/src/HashEntry.java
@@ -1,50 +1,49 @@
 package net.minecraft.src;
 
 class HashEntry {
+
     final int hashEntry;
+    final int slotHash;
     Object valueEntry;
     HashEntry nextEntry;
-    final int slotHash;
 
-    HashEntry(int var1, int var2, Object var3, HashEntry var4) {
-        this.valueEntry = var3;
-        this.nextEntry = var4;
-        this.hashEntry = var2;
-        this.slotHash = var1;
+    HashEntry(int i, int j, Object obj, HashEntry hashentry) {
+        valueEntry = obj;
+        nextEntry = hashentry;
+        hashEntry = j;
+        slotHash = i;
     }
 
     public final int getHash() {
-        return this.hashEntry;
+        return hashEntry;
     }
 
     public final Object getValue() {
-        return this.valueEntry;
+        return valueEntry;
     }
 
-    public final boolean equals(Object var1) {
-        if(!(var1 instanceof HashEntry)) {
+    public final boolean equals(Object obj) {
+        if (!(obj instanceof HashEntry)) {
             return false;
-        } else {
-            HashEntry var2 = (HashEntry)var1;
-            Integer var3 = Integer.valueOf(this.getHash());
-            Integer var4 = Integer.valueOf(var2.getHash());
-            if(var3 == var4 || var3 != null && var3.equals(var4)) {
-                Object var5 = this.getValue();
-                Object var6 = var2.getValue();
-                if(var5 == var6 || var5 != null && var5.equals(var6)) {
-                    return true;
-                }
+        }
+        HashEntry hashentry = (HashEntry) obj;
+        Integer integer = Integer.valueOf(getHash());
+        Integer integer1 = Integer.valueOf(hashentry.getHash());
+        if (integer == integer1 || integer != null && integer.equals(integer1)) {
+            Object obj1 = getValue();
+            Object obj2 = hashentry.getValue();
+            if (obj1 == obj2 || obj1 != null && obj1.equals(obj2)) {
+                return true;
             }
-
-            return false;
         }
+        return false;
     }
 
     public final int hashCode() {
-        return MCHashTable.getHash(this.hashEntry);
+        return MCHashTable.getHash(hashEntry);
     }
 
     public final String toString() {
-        return this.getHash() + "=" + this.getValue();
+        return (new StringBuilder()).append(getHash()).append("=").append(getValue()).toString();
     }
 }
