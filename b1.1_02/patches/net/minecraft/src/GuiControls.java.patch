--- net/minecraft/src/GuiControls.java
+++ net/minecraft/src/GuiControls.java
@@ -1,66 +1,65 @@
 package net.minecraft.src;
 
 public class GuiControls extends GuiScreen {
+
+    protected String screenTitle;
     private GuiScreen parentScreen;
-    protected String screenTitle = "Controls";
     private GameSettings options;
-    private int buttonId = -1;
+    private int buttonId;
 
-    public GuiControls(GuiScreen var1, GameSettings var2) {
-        this.parentScreen = var1;
-        this.options = var2;
+    public GuiControls(GuiScreen guiscreen, GameSettings gamesettings) {
+        screenTitle = "Controls";
+        buttonId = -1;
+        parentScreen = guiscreen;
+        options = gamesettings;
     }
 
     private int func_20080_j() {
-        return this.width / 2 - 155;
+        return width / 2 - 155;
     }
 
     public void initGui() {
-        StringTranslate var1 = StringTranslate.func_20162_a();
-        int var2 = this.func_20080_j();
-
-        for(int var3 = 0; var3 < this.options.keyBindings.length; ++var3) {
-            this.controlList.add(new GuiSmallButton(var3, var2 + var3 % 2 * 160, this.height / 6 + 24 * (var3 >> 1), 70, 20, this.options.getOptionDisplayString(var3)));
-        }
-
-        this.controlList.add(new GuiButton(200, this.width / 2 - 100, this.height / 6 + 168, var1.func_20163_a("gui.done")));
-        this.screenTitle = var1.func_20163_a("controls.title");
-    }
-
-    protected void actionPerformed(GuiButton var1) {
-        for(int var2 = 0; var2 < this.options.keyBindings.length; ++var2) {
-            ((GuiButton)this.controlList.get(var2)).displayString = this.options.getOptionDisplayString(var2);
-        }
-
-        if(var1.id == 200) {
-            this.mc.displayGuiScreen(this.parentScreen);
-        } else {
-            this.buttonId = var1.id;
-            var1.displayString = "> " + this.options.getOptionDisplayString(var1.id) + " <";
-        }
-
-    }
-
-    protected void keyTyped(char var1, int var2) {
-        if(this.buttonId >= 0) {
-            this.options.setKeyBinding(this.buttonId, var2);
-            ((GuiButton)this.controlList.get(this.buttonId)).displayString = this.options.getOptionDisplayString(this.buttonId);
-            this.buttonId = -1;
-        } else {
-            super.keyTyped(var1, var2);
-        }
-
-    }
-
-    public void drawScreen(int var1, int var2, float var3) {
-        this.drawDefaultBackground();
-        this.drawCenteredString(this.fontRenderer, this.screenTitle, this.width / 2, 20, 16777215);
-        int var4 = this.func_20080_j();
-
-        for(int var5 = 0; var5 < this.options.keyBindings.length; ++var5) {
-            this.drawString(this.fontRenderer, this.options.func_20102_a(var5), var4 + var5 % 2 * 160 + 70 + 6, this.height / 6 + 24 * (var5 >> 1) + 7, -1);
-        }
-
-        super.drawScreen(var1, var2, var3);
+        StringTranslate stringtranslate = StringTranslate.func_20162_a();
+        int i = func_20080_j();
+        for (int j = 0; j < options.keyBindings.length; j++) {
+            controlList.add(new GuiSmallButton(j, i + (j % 2) * 160, height / 6 + 24 * (j >> 1), 70, 20, options.getOptionDisplayString(j)));
+        }
+
+        controlList.add(new GuiButton(200, width / 2 - 100, height / 6 + 168, stringtranslate.func_20163_a("gui.done")));
+        screenTitle = stringtranslate.func_20163_a("controls.title");
+    }
+
+    protected void actionPerformed(GuiButton guibutton) {
+        for (int i = 0; i < options.keyBindings.length; i++) {
+            ((GuiButton) controlList.get(i)).displayString = options.getOptionDisplayString(i);
+        }
+
+        if (guibutton.id == 200) {
+            mc.displayGuiScreen(parentScreen);
+        } else {
+            buttonId = guibutton.id;
+            guibutton.displayString = (new StringBuilder()).append("> ").append(options.getOptionDisplayString(guibutton.id)).append(" <").toString();
+        }
+    }
+
+    protected void keyTyped(char c, int i) {
+        if (buttonId >= 0) {
+            options.setKeyBinding(buttonId, i);
+            ((GuiButton) controlList.get(buttonId)).displayString = options.getOptionDisplayString(buttonId);
+            buttonId = -1;
+        } else {
+            super.keyTyped(c, i);
+        }
+    }
+
+    public void drawScreen(int i, int j, float f) {
+        drawDefaultBackground();
+        drawCenteredString(fontRenderer, screenTitle, width / 2, 20, 0xffffff);
+        int k = func_20080_j();
+        for (int l = 0; l < options.keyBindings.length; l++) {
+            drawString(fontRenderer, options.func_20102_a(l), k + (l % 2) * 160 + 70 + 6, height / 6 + 24 * (l >> 1) + 7, -1);
+        }
+
+        super.drawScreen(i, j, f);
     }
 }
