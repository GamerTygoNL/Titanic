--- net/minecraft/src/NextTickListEntry.java
+++ net/minecraft/src/NextTickListEntry.java
@@ -1,44 +1,56 @@
 package net.minecraft.src;
 
-public class NextTickListEntry implements Comparable {
+public class NextTickListEntry
+        implements Comparable {
+
     private static long nextTickEntryID = 0L;
     public int xCoord;
     public int yCoord;
     public int zCoord;
     public int blockID;
     public long scheduledTime;
-    private long tickEntryID = nextTickEntryID++;
-
-    public NextTickListEntry(int var1, int var2, int var3, int var4) {
-        this.xCoord = var1;
-        this.yCoord = var2;
-        this.zCoord = var3;
-        this.blockID = var4;
+    private long tickEntryID;
+    public NextTickListEntry(int i, int j, int k, int l) {
+        tickEntryID = nextTickEntryID++;
+        xCoord = i;
+        yCoord = j;
+        zCoord = k;
+        blockID = l;
     }
 
-    public boolean equals(Object var1) {
-        if(!(var1 instanceof NextTickListEntry)) {
-            return false;
+    public boolean equals(Object obj) {
+        if (obj instanceof NextTickListEntry) {
+            NextTickListEntry nextticklistentry = (NextTickListEntry) obj;
+            return xCoord == nextticklistentry.xCoord && yCoord == nextticklistentry.yCoord && zCoord == nextticklistentry.zCoord && blockID == nextticklistentry.blockID;
         } else {
-            NextTickListEntry var2 = (NextTickListEntry)var1;
-            return this.xCoord == var2.xCoord && this.yCoord == var2.yCoord && this.zCoord == var2.zCoord && this.blockID == var2.blockID;
+            return false;
         }
     }
 
     public int hashCode() {
-        return (this.xCoord * 128 * 1024 + this.zCoord * 128 + this.yCoord) * 256 + this.blockID;
+        return (xCoord * 128 * 1024 + zCoord * 128 + yCoord) * 256 + blockID;
     }
 
-    public NextTickListEntry setScheduledTime(long var1) {
-        this.scheduledTime = var1;
+    public NextTickListEntry setScheduledTime(long l) {
+        scheduledTime = l;
         return this;
     }
 
-    public int a(NextTickListEntry var1) {
-        return this.scheduledTime < var1.scheduledTime ? -1 : (this.scheduledTime > var1.scheduledTime ? 1 : (this.tickEntryID < var1.tickEntryID ? -1 : (this.tickEntryID > var1.tickEntryID ? 1 : 0)));
-    }
-
-    public int compareTo(Object var1) {
-        return this.a((NextTickListEntry)var1);
-    }
+    public int comparer(NextTickListEntry nextticklistentry) {
+        if (scheduledTime < nextticklistentry.scheduledTime) {
+            return -1;
+        }
+        if (scheduledTime > nextticklistentry.scheduledTime) {
+            return 1;
+        }
+        if (tickEntryID < nextticklistentry.tickEntryID) {
+            return -1;
+        }
+        return tickEntryID <= nextticklistentry.tickEntryID ? 0 : 1;
+    }
+
+    public int compareTo(Object obj) {
+        return comparer((NextTickListEntry) obj);
+    }
+
 }
