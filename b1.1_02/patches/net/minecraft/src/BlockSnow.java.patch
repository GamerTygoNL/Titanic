--- net/minecraft/src/BlockSnow.java
+++ net/minecraft/src/BlockSnow.java
@@ -3,13 +3,14 @@
 import java.util.Random;
 
 public class BlockSnow extends Block {
-    protected BlockSnow(int var1, int var2) {
-        super(var1, var2, Material.snow);
-        this.setBlockBounds(0.0F, 0.0F, 0.0F, 1.0F, 2.0F / 16.0F, 1.0F);
-        this.setTickOnLoad(true);
+
+    protected BlockSnow(int i, int j) {
+        super(i, j, Material.snow);
+        setBlockBounds(0.0F, 0.0F, 0.0F, 1.0F, 0.125F, 1.0F);
+        setTickOnLoad(true);
     }
 
-    public AxisAlignedBB getCollisionBoundingBoxFromPool(World var1, int var2, int var3, int var4) {
+    public AxisAlignedBB getCollisionBoundingBoxFromPool(World world, int i, int j, int k) {
         return null;
     }
 
@@ -21,55 +22,65 @@
         return false;
     }
 
-    public boolean canPlaceBlockAt(World var1, int var2, int var3, int var4) {
-        int var5 = var1.getBlockId(var2, var3 - 1, var4);
-        return var5 != 0 && Block.blocksList[var5].isOpaqueCube() ? var1.getBlockMaterial(var2, var3 - 1, var4).getIsSolid() : false;
-    }
-
-    public void onNeighborBlockChange(World var1, int var2, int var3, int var4, int var5) {
-        this.func_314_h(var1, var2, var3, var4);
-    }
-
-    private boolean func_314_h(World var1, int var2, int var3, int var4) {
-        if(!this.canPlaceBlockAt(var1, var2, var3, var4)) {
-            this.dropBlockAsItem(var1, var2, var3, var4, var1.getBlockMetadata(var2, var3, var4));
-            var1.setBlockWithNotify(var2, var3, var4, 0);
+    public boolean canPlaceBlockAt(World world, int i, int j, int k) {
+        int l = world.getBlockId(i, j - 1, k);
+        if (l == 0 || !Block.blocksList[l].isOpaqueCube()) {
+            return false;
+        } else {
+            return world.getBlockMaterial(i, j - 1, k).getIsSolid();
+        }
+    }
+
+    public void onNeighborBlockChange(World world, int i, int j, int k, int l) {
+        func_314_h(world, i, j, k);
+    }
+
+    private boolean func_314_h(World world, int i, int j, int k) {
+        if (!canPlaceBlockAt(world, i, j, k)) {
+            dropBlockAsItem(world, i, j, k, world.getBlockMetadata(i, j, k));
+            world.setBlockWithNotify(i, j, k, 0);
             return false;
         } else {
             return true;
         }
     }
 
-    public void harvestBlock(World var1, int var2, int var3, int var4, int var5) {
-        int var6 = Item.snowball.shiftedIndex;
-        float var7 = 0.7F;
-        double var8 = (double)(var1.rand.nextFloat() * var7) + (double)(1.0F - var7) * 0.5D;
-        double var10 = (double)(var1.rand.nextFloat() * var7) + (double)(1.0F - var7) * 0.5D;
-        double var12 = (double)(var1.rand.nextFloat() * var7) + (double)(1.0F - var7) * 0.5D;
-        EntityItem var14 = new EntityItem(var1, (double)var2 + var8, (double)var3 + var10, (double)var4 + var12, new ItemStack(var6));
-        var14.delayBeforeCanPickup = 10;
-        var1.entityJoinedWorld(var14);
-        var1.setBlockWithNotify(var2, var3, var4, 0);
+    public void harvestBlock(World world, int i, int j, int k, int l) {
+        int i1 = Item.snowball.shiftedIndex;
+        float f = 0.7F;
+        double d = (double) (world.rand.nextFloat() * f) + (double) (1.0F - f) * 0.5D;
+        double d1 = (double) (world.rand.nextFloat() * f) + (double) (1.0F - f) * 0.5D;
+        double d2 = (double) (world.rand.nextFloat() * f) + (double) (1.0F - f) * 0.5D;
+        EntityItem entityitem = new EntityItem(world, (double) i + d, (double) j + d1, (double) k + d2, new ItemStack(i1));
+        entityitem.delayBeforeCanPickup = 10;
+        world.entityJoinedWorld(entityitem);
+        world.setBlockWithNotify(i, j, k, 0);
     }
 
-    public int idDropped(int var1, Random var2) {
+    public int idDropped(int i, Random random) {
         return Item.snowball.shiftedIndex;
     }
 
-    public int quantityDropped(Random var1) {
+    public int quantityDropped(Random random) {
         return 0;
     }
 
-    public void updateTick(World var1, int var2, int var3, int var4, Random var5) {
-        if(var1.getSavedLightValue(EnumSkyBlock.Block, var2, var3, var4) > 11) {
-            this.dropBlockAsItem(var1, var2, var3, var4, var1.getBlockMetadata(var2, var3, var4));
-            var1.setBlockWithNotify(var2, var3, var4, 0);
+    public void updateTick(World world, int i, int j, int k, Random random) {
+        if (world.getSavedLightValue(EnumSkyBlock.Block, i, j, k) > 11) {
+            dropBlockAsItem(world, i, j, k, world.getBlockMetadata(i, j, k));
+            world.setBlockWithNotify(i, j, k, 0);
         }
-
     }
 
-    public boolean shouldSideBeRendered(IBlockAccess var1, int var2, int var3, int var4, int var5) {
-        Material var6 = var1.getBlockMaterial(var2, var3, var4);
-        return var5 == 1 ? true : (var6 == this.blockMaterial ? false : super.shouldSideBeRendered(var1, var2, var3, var4, var5));
+    public boolean shouldSideBeRendered(IBlockAccess iblockaccess, int i, int j, int k, int l) {
+        Material material = iblockaccess.getBlockMaterial(i, j, k);
+        if (l == 1) {
+            return true;
+        }
+        if (material == blockMaterial) {
+            return false;
+        } else {
+            return super.shouldSideBeRendered(iblockaccess, i, j, k, l);
+        }
     }
 }
