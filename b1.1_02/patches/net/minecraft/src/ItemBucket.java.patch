--- net/minecraft/src/ItemBucket.java
+++ net/minecraft/src/ItemBucket.java
@@ -1,101 +1,91 @@
 package net.minecraft.src;
 
 public class ItemBucket extends Item {
+
     private int isFull;
 
-    public ItemBucket(int var1, int var2) {
-        super(var1);
-        this.maxStackSize = 1;
-        this.maxDamage = 64;
-        this.isFull = var2;
+    public ItemBucket(int i, int j) {
+        super(i);
+        maxStackSize = 1;
+        maxDamage = 64;
+        isFull = j;
     }
 
-    public ItemStack onItemRightClick(ItemStack var1, World var2, EntityPlayer var3) {
-        float var4 = 1.0F;
-        float var5 = var3.prevRotationPitch + (var3.rotationPitch - var3.prevRotationPitch) * var4;
-        float var6 = var3.prevRotationYaw + (var3.rotationYaw - var3.prevRotationYaw) * var4;
-        double var7 = var3.prevPosX + (var3.posX - var3.prevPosX) * (double)var4;
-        double var9 = var3.prevPosY + (var3.posY - var3.prevPosY) * (double)var4 + 1.62D - (double)var3.yOffset;
-        double var11 = var3.prevPosZ + (var3.posZ - var3.prevPosZ) * (double)var4;
-        Vec3D var13 = Vec3D.createVector(var7, var9, var11);
-        float var14 = MathHelper.cos(-var6 * ((float)Math.PI / 180.0F) - (float)Math.PI);
-        float var15 = MathHelper.sin(-var6 * ((float)Math.PI / 180.0F) - (float)Math.PI);
-        float var16 = -MathHelper.cos(-var5 * ((float)Math.PI / 180.0F));
-        float var17 = MathHelper.sin(-var5 * ((float)Math.PI / 180.0F));
-        float var18 = var15 * var16;
-        float var20 = var14 * var16;
-        double var21 = 5.0D;
-        Vec3D var23 = var13.addVector((double)var18 * var21, (double)var17 * var21, (double)var20 * var21);
-        MovingObjectPosition var24 = var2.rayTraceBlocks_do(var13, var23, this.isFull == 0);
-        if(var24 == null) {
-            return var1;
-        } else {
-            if(var24.typeOfHit == 0) {
-                int var25 = var24.blockX;
-                int var26 = var24.blockY;
-                int var27 = var24.blockZ;
-                if(!var2.func_6466_a(var3, var25, var26, var27)) {
-                    return var1;
-                }
-
-                if(this.isFull == 0) {
-                    if(var2.getBlockMaterial(var25, var26, var27) == Material.water && var2.getBlockMetadata(var25, var26, var27) == 0) {
-                        var2.setBlockWithNotify(var25, var26, var27, 0);
-                        return new ItemStack(Item.bucketWater);
-                    }
-
-                    if(var2.getBlockMaterial(var25, var26, var27) == Material.lava && var2.getBlockMetadata(var25, var26, var27) == 0) {
-                        var2.setBlockWithNotify(var25, var26, var27, 0);
-                        return new ItemStack(Item.bucketLava);
-                    }
-                } else {
-                    if(this.isFull < 0) {
-                        return new ItemStack(Item.bucketEmpty);
-                    }
-
-                    if(var24.sideHit == 0) {
-                        --var26;
-                    }
-
-                    if(var24.sideHit == 1) {
-                        ++var26;
-                    }
-
-                    if(var24.sideHit == 2) {
-                        --var27;
-                    }
-
-                    if(var24.sideHit == 3) {
-                        ++var27;
-                    }
-
-                    if(var24.sideHit == 4) {
-                        --var25;
-                    }
-
-                    if(var24.sideHit == 5) {
-                        ++var25;
-                    }
-
-                    if(var2.func_20084_d(var25, var26, var27) || !var2.getBlockMaterial(var25, var26, var27).func_878_a()) {
-                        if(var2.worldProvider.field_6479_d && this.isFull == Block.waterStill.blockID) {
-                            var2.playSoundEffect(var7 + 0.5D, var9 + 0.5D, var11 + 0.5D, "random.fizz", 0.5F, 2.6F + (var2.rand.nextFloat() - var2.rand.nextFloat()) * 0.8F);
-
-                            for(int var28 = 0; var28 < 8; ++var28) {
-                                var2.spawnParticle("largesmoke", (double)var25 + Math.random(), (double)var26 + Math.random(), (double)var27 + Math.random(), 0.0D, 0.0D, 0.0D);
-                            }
-                        } else {
-                            var2.setBlockAndMetadataWithNotify(var25, var26, var27, this.isFull, 0);
+    public ItemStack onItemRightClick(ItemStack itemstack, World world, EntityPlayer entityplayer) {
+        float f = 1.0F;
+        float f1 = entityplayer.prevRotationPitch + (entityplayer.rotationPitch - entityplayer.prevRotationPitch) * f;
+        float f2 = entityplayer.prevRotationYaw + (entityplayer.rotationYaw - entityplayer.prevRotationYaw) * f;
+        double d = entityplayer.prevPosX + (entityplayer.posX - entityplayer.prevPosX) * (double) f;
+        double d1 = (entityplayer.prevPosY + (entityplayer.posY - entityplayer.prevPosY) * (double) f + 1.6200000000000001D) - (double) entityplayer.yOffset;
+        double d2 = entityplayer.prevPosZ + (entityplayer.posZ - entityplayer.prevPosZ) * (double) f;
+        Vec3D vec3d = Vec3D.createVector(d, d1, d2);
+        float f3 = MathHelper.cos(-f2 * 0.01745329F - 3.141593F);
+        float f4 = MathHelper.sin(-f2 * 0.01745329F - 3.141593F);
+        float f5 = -MathHelper.cos(-f1 * 0.01745329F);
+        float f6 = MathHelper.sin(-f1 * 0.01745329F);
+        float f7 = f4 * f5;
+        float f8 = f6;
+        float f9 = f3 * f5;
+        double d3 = 5D;
+        Vec3D vec3d1 = vec3d.addVector((double) f7 * d3, (double) f8 * d3, (double) f9 * d3);
+        MovingObjectPosition movingobjectposition = world.rayTraceBlocks_do(vec3d, vec3d1, isFull == 0);
+        if (movingobjectposition == null) {
+            return itemstack;
+        }
+        if (movingobjectposition.typeOfHit == 0) {
+            int i = movingobjectposition.blockX;
+            int j = movingobjectposition.blockY;
+            int k = movingobjectposition.blockZ;
+            if (!world.func_6466_a(entityplayer, i, j, k)) {
+                return itemstack;
+            }
+            if (isFull == 0) {
+                if (world.getBlockMaterial(i, j, k) == Material.water && world.getBlockMetadata(i, j, k) == 0) {
+                    world.setBlockWithNotify(i, j, k, 0);
+                    return new ItemStack(Item.bucketWater);
+                }
+                if (world.getBlockMaterial(i, j, k) == Material.lava && world.getBlockMetadata(i, j, k) == 0) {
+                    world.setBlockWithNotify(i, j, k, 0);
+                    return new ItemStack(Item.bucketLava);
+                }
+            } else {
+                if (isFull < 0) {
+                    return new ItemStack(Item.bucketEmpty);
+                }
+                if (movingobjectposition.sideHit == 0) {
+                    j--;
+                }
+                if (movingobjectposition.sideHit == 1) {
+                    j++;
+                }
+                if (movingobjectposition.sideHit == 2) {
+                    k--;
+                }
+                if (movingobjectposition.sideHit == 3) {
+                    k++;
+                }
+                if (movingobjectposition.sideHit == 4) {
+                    i--;
+                }
+                if (movingobjectposition.sideHit == 5) {
+                    i++;
+                }
+                if (world.func_20084_d(i, j, k) || !world.getBlockMaterial(i, j, k).func_878_a()) {
+                    if (world.worldProvider.field_6479_d && isFull == Block.waterStill.blockID) {
+                        world.playSoundEffect(d + 0.5D, d1 + 0.5D, d2 + 0.5D, "random.fizz", 0.5F, 2.6F + (world.rand.nextFloat() - world.rand.nextFloat()) * 0.8F);
+                        for (int l = 0; l < 8; l++) {
+                            world.spawnParticle("largesmoke", (double) i + Math.random(), (double) j + Math.random(), (double) k + Math.random(), 0.0D, 0.0D, 0.0D);
                         }
 
-                        return new ItemStack(Item.bucketEmpty);
+                    } else {
+                        world.setBlockAndMetadataWithNotify(i, j, k, isFull, 0);
                     }
+                    return new ItemStack(Item.bucketEmpty);
                 }
-            } else if(this.isFull == 0 && var24.entityHit instanceof EntityCow) {
-                return new ItemStack(Item.bucketMilk);
             }
-
-            return var1;
+        } else if (isFull == 0 && (movingobjectposition.entityHit instanceof EntityCow)) {
+            return new ItemStack(Item.bucketMilk);
         }
+        return itemstack;
     }
 }
