--- net/minecraft/src/TextureLavaFlowFX.java
+++ net/minecraft/src/TextureLavaFlowFX.java
@@ -1,84 +1,78 @@
 package net.minecraft.src;
 
 public class TextureLavaFlowFX extends TextureFX {
-    protected float[] field_1143_g = new float[256];
-    protected float[] field_1142_h = new float[256];
-    protected float[] field_1141_i = new float[256];
-    protected float[] field_1140_j = new float[256];
-    int field_1139_k = 0;
 
+    protected float field_1143_g[];
+    protected float field_1142_h[];
+    protected float field_1141_i[];
+    protected float field_1140_j[];
+    int field_1139_k;
     public TextureLavaFlowFX() {
         super(Block.lavaStill.blockIndexInTexture + 1);
-        this.field_1129_e = 2;
+        field_1143_g = new float[256];
+        field_1142_h = new float[256];
+        field_1141_i = new float[256];
+        field_1140_j = new float[256];
+        field_1139_k = 0;
+        field_1129_e = 2;
     }
 
     public void func_783_a() {
-        ++this.field_1139_k;
-
-        int var2;
-        float var3;
-        int var5;
-        int var6;
-        int var7;
-        int var8;
-        int var9;
-        for(int var1 = 0; var1 < 16; ++var1) {
-            for(var2 = 0; var2 < 16; ++var2) {
-                var3 = 0.0F;
-                int var4 = (int)(MathHelper.sin((float)var2 * (float)Math.PI * 2.0F / 16.0F) * 1.2F);
-                var5 = (int)(MathHelper.sin((float)var1 * (float)Math.PI * 2.0F / 16.0F) * 1.2F);
-
-                for(var6 = var1 - 1; var6 <= var1 + 1; ++var6) {
-                    for(var7 = var2 - 1; var7 <= var2 + 1; ++var7) {
-                        var8 = var6 + var4 & 15;
-                        var9 = var7 + var5 & 15;
-                        var3 += this.field_1143_g[var8 + var9 * 16];
+        field_1139_k++;
+        for (int i = 0; i < 16; i++) {
+            for (int j = 0; j < 16; j++) {
+                float f = 0.0F;
+                int l = (int) (MathHelper.sin(((float) j * 3.141593F * 2.0F) / 16F) * 1.2F);
+                int i1 = (int) (MathHelper.sin(((float) i * 3.141593F * 2.0F) / 16F) * 1.2F);
+                for (int k1 = i - 1; k1 <= i + 1; k1++) {
+                    for (int i2 = j - 1; i2 <= j + 1; i2++) {
+                        int k2 = k1 + l & 0xf;
+                        int i3 = i2 + i1 & 0xf;
+                        f += field_1143_g[k2 + i3 * 16];
                     }
-                }
-
-                this.field_1142_h[var1 + var2 * 16] = var3 / 10.0F + (this.field_1141_i[(var1 + 0 & 15) + (var2 + 0 & 15) * 16] + this.field_1141_i[(var1 + 1 & 15) + (var2 + 0 & 15) * 16] + this.field_1141_i[(var1 + 1 & 15) + (var2 + 1 & 15) * 16] + this.field_1141_i[(var1 + 0 & 15) + (var2 + 1 & 15) * 16]) / 4.0F * 0.8F;
-                this.field_1141_i[var1 + var2 * 16] += this.field_1140_j[var1 + var2 * 16] * 0.01F;
-                if(this.field_1141_i[var1 + var2 * 16] < 0.0F) {
-                    this.field_1141_i[var1 + var2 * 16] = 0.0F;
-                }
-
-                this.field_1140_j[var1 + var2 * 16] -= 0.06F;
-                if(Math.random() < 0.005D) {
-                    this.field_1140_j[var1 + var2 * 16] = 1.5F;
+
+                }
+
+                field_1142_h[i + j * 16] = f / 10F + ((field_1141_i[(i + 0 & 0xf) + (j + 0 & 0xf) * 16] + field_1141_i[(i + 1 & 0xf) + (j + 0 & 0xf) * 16] + field_1141_i[(i + 1 & 0xf) + (j + 1 & 0xf) * 16] + field_1141_i[(i + 0 & 0xf) + (j + 1 & 0xf) * 16]) / 4F) * 0.8F;
+                field_1141_i[i + j * 16] += field_1140_j[i + j * 16] * 0.01F;
+                if (field_1141_i[i + j * 16] < 0.0F) {
+                    field_1141_i[i + j * 16] = 0.0F;
+                }
+                field_1140_j[i + j * 16] -= 0.06F;
+                if (Math.random() < 0.0050000000000000001D) {
+                    field_1140_j[i + j * 16] = 1.5F;
                 }
             }
+
         }
 
-        float[] var11 = this.field_1142_h;
-        this.field_1142_h = this.field_1143_g;
-        this.field_1143_g = var11;
-
-        for(var2 = 0; var2 < 256; ++var2) {
-            var3 = this.field_1143_g[var2 - this.field_1139_k / 3 * 16 & 255] * 2.0F;
-            if(var3 > 1.0F) {
-                var3 = 1.0F;
-            }
-
-            if(var3 < 0.0F) {
-                var3 = 0.0F;
-            }
-
-            var5 = (int)(var3 * 100.0F + 155.0F);
-            var6 = (int)(var3 * var3 * 255.0F);
-            var7 = (int)(var3 * var3 * var3 * var3 * 128.0F);
-            if(this.field_1131_c) {
-                var8 = (var5 * 30 + var6 * 59 + var7 * 11) / 100;
-                var9 = (var5 * 30 + var6 * 70) / 100;
-                int var10 = (var5 * 30 + var7 * 70) / 100;
-                var5 = var8;
-                var6 = var9;
-                var7 = var10;
-            }
-
-            this.field_1127_a[var2 * 4 + 0] = (byte)var5;
-            this.field_1127_a[var2 * 4 + 1] = (byte)var6;
-            this.field_1127_a[var2 * 4 + 2] = (byte)var7;
-            this.field_1127_a[var2 * 4 + 3] = -1;
+        float af[] = field_1142_h;
+        field_1142_h = field_1143_g;
+        field_1143_g = af;
+        for (int k = 0; k < 256; k++) {
+            float f1 = field_1143_g[k - (field_1139_k / 3) * 16 & 0xff] * 2.0F;
+            if (f1 > 1.0F) {
+                f1 = 1.0F;
+            }
+            if (f1 < 0.0F) {
+                f1 = 0.0F;
+            }
+            float f2 = f1;
+            int j1 = (int) (f2 * 100F + 155F);
+            int l1 = (int) (f2 * f2 * 255F);
+            int j2 = (int) (f2 * f2 * f2 * f2 * 128F);
+            if (field_1131_c) {
+                int l2 = (j1 * 30 + l1 * 59 + j2 * 11) / 100;
+                int j3 = (j1 * 30 + l1 * 70) / 100;
+                int k3 = (j1 * 30 + j2 * 70) / 100;
+                j1 = l2;
+                l1 = j3;
+                j2 = k3;
+            }
+            field_1127_a[k * 4 + 0] = (byte) j1;
+            field_1127_a[k * 4 + 1] = (byte) l1;
+            field_1127_a[k * 4 + 2] = (byte) j2;
+            field_1127_a[k * 4 + 3] = -1;
         }
 
     }
