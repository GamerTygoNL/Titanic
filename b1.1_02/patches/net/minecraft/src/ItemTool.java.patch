--- net/minecraft/src/ItemTool.java
+++ net/minecraft/src/ItemTool.java
@@ -1,45 +1,46 @@
 package net.minecraft.src;
 
 public class ItemTool extends Item {
-    private Block[] blocksEffectiveAgainst;
-    private float efficiencyOnProperMaterial = 4.0F;
-    private int damageVsEntity;
+
     protected int ingredientQuality;
+    private Block blocksEffectiveAgainst[];
+    private float efficiencyOnProperMaterial;
+    private int damageVsEntity;
 
-    public ItemTool(int var1, int var2, int var3, Block[] var4) {
-        super(var1);
-        this.ingredientQuality = var3;
-        this.blocksEffectiveAgainst = var4;
-        this.maxStackSize = 1;
-        this.maxDamage = 32 << var3;
-        if(var3 == 3) {
-            this.maxDamage *= 4;
+    public ItemTool(int i, int j, int k, Block ablock[]) {
+        super(i);
+        efficiencyOnProperMaterial = 4F;
+        ingredientQuality = k;
+        blocksEffectiveAgainst = ablock;
+        maxStackSize = 1;
+        maxDamage = 32 << k;
+        if (k == 3) {
+            maxDamage *= 4;
         }
-
-        this.efficiencyOnProperMaterial = (float)((var3 + 1) * 2);
-        this.damageVsEntity = var2 + var3;
+        efficiencyOnProperMaterial = (k + 1) * 2;
+        damageVsEntity = j + k;
     }
 
-    public float getStrVsBlock(ItemStack var1, Block var2) {
-        for(int var3 = 0; var3 < this.blocksEffectiveAgainst.length; ++var3) {
-            if(this.blocksEffectiveAgainst[var3] == var2) {
-                return this.efficiencyOnProperMaterial;
+    public float getStrVsBlock(ItemStack itemstack, Block block) {
+        for (int i = 0; i < blocksEffectiveAgainst.length; i++) {
+            if (blocksEffectiveAgainst[i] == block) {
+                return efficiencyOnProperMaterial;
             }
         }
 
         return 1.0F;
     }
 
-    public void hitEntity(ItemStack var1, EntityLiving var2) {
-        var1.damageItem(2);
-    }
-
-    public void hitBlock(ItemStack var1, int var2, int var3, int var4, int var5) {
-        var1.damageItem(1);
-    }
-
-    public int getDamageVsEntity(Entity var1) {
-        return this.damageVsEntity;
+    public void hitEntity(ItemStack itemstack, EntityLiving entityliving) {
+        itemstack.damageItem(2);
+    }
+
+    public void hitBlock(ItemStack itemstack, int i, int j, int k, int l) {
+        itemstack.damageItem(1);
+    }
+
+    public int getDamageVsEntity(Entity entity) {
+        return damageVsEntity;
     }
 
     public boolean isFull3D() {
