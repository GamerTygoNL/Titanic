--- net/minecraft/src/BlockLadder.java
+++ net/minecraft/src/BlockLadder.java
@@ -3,52 +3,45 @@
 import java.util.Random;
 
 public class BlockLadder extends Block {
-    protected BlockLadder(int var1, int var2) {
-        super(var1, var2, Material.circuits);
-    }
-
-    public AxisAlignedBB getCollisionBoundingBoxFromPool(World var1, int var2, int var3, int var4) {
-        int var5 = var1.getBlockMetadata(var2, var3, var4);
-        float var6 = 2.0F / 16.0F;
-        if(var5 == 2) {
-            this.setBlockBounds(0.0F, 0.0F, 1.0F - var6, 1.0F, 1.0F, 1.0F);
-        }
-
-        if(var5 == 3) {
-            this.setBlockBounds(0.0F, 0.0F, 0.0F, 1.0F, 1.0F, var6);
-        }
-
-        if(var5 == 4) {
-            this.setBlockBounds(1.0F - var6, 0.0F, 0.0F, 1.0F, 1.0F, 1.0F);
-        }
-
-        if(var5 == 5) {
-            this.setBlockBounds(0.0F, 0.0F, 0.0F, var6, 1.0F, 1.0F);
-        }
-
-        return super.getCollisionBoundingBoxFromPool(var1, var2, var3, var4);
-    }
-
-    public AxisAlignedBB getSelectedBoundingBoxFromPool(World var1, int var2, int var3, int var4) {
-        int var5 = var1.getBlockMetadata(var2, var3, var4);
-        float var6 = 2.0F / 16.0F;
-        if(var5 == 2) {
-            this.setBlockBounds(0.0F, 0.0F, 1.0F - var6, 1.0F, 1.0F, 1.0F);
-        }
-
-        if(var5 == 3) {
-            this.setBlockBounds(0.0F, 0.0F, 0.0F, 1.0F, 1.0F, var6);
-        }
-
-        if(var5 == 4) {
-            this.setBlockBounds(1.0F - var6, 0.0F, 0.0F, 1.0F, 1.0F, 1.0F);
-        }
-
-        if(var5 == 5) {
-            this.setBlockBounds(0.0F, 0.0F, 0.0F, var6, 1.0F, 1.0F);
-        }
-
-        return super.getSelectedBoundingBoxFromPool(var1, var2, var3, var4);
+
+    protected BlockLadder(int i, int j) {
+        super(i, j, Material.circuits);
+    }
+
+    public AxisAlignedBB getCollisionBoundingBoxFromPool(World world, int i, int j, int k) {
+        int l = world.getBlockMetadata(i, j, k);
+        float f = 0.125F;
+        if (l == 2) {
+            setBlockBounds(0.0F, 0.0F, 1.0F - f, 1.0F, 1.0F, 1.0F);
+        }
+        if (l == 3) {
+            setBlockBounds(0.0F, 0.0F, 0.0F, 1.0F, 1.0F, f);
+        }
+        if (l == 4) {
+            setBlockBounds(1.0F - f, 0.0F, 0.0F, 1.0F, 1.0F, 1.0F);
+        }
+        if (l == 5) {
+            setBlockBounds(0.0F, 0.0F, 0.0F, f, 1.0F, 1.0F);
+        }
+        return super.getCollisionBoundingBoxFromPool(world, i, j, k);
+    }
+
+    public AxisAlignedBB getSelectedBoundingBoxFromPool(World world, int i, int j, int k) {
+        int l = world.getBlockMetadata(i, j, k);
+        float f = 0.125F;
+        if (l == 2) {
+            setBlockBounds(0.0F, 0.0F, 1.0F - f, 1.0F, 1.0F, 1.0F);
+        }
+        if (l == 3) {
+            setBlockBounds(0.0F, 0.0F, 0.0F, 1.0F, 1.0F, f);
+        }
+        if (l == 4) {
+            setBlockBounds(1.0F - f, 0.0F, 0.0F, 1.0F, 1.0F, 1.0F);
+        }
+        if (l == 5) {
+            setBlockBounds(0.0F, 0.0F, 0.0F, f, 1.0F, 1.0F);
+        }
+        return super.getSelectedBoundingBoxFromPool(world, i, j, k);
     }
 
     public boolean isOpaqueCube() {
@@ -63,59 +56,56 @@
         return 8;
     }
 
-    public boolean canPlaceBlockAt(World var1, int var2, int var3, int var4) {
-        return var1.isBlockOpaqueCube(var2 - 1, var3, var4) ? true : (var1.isBlockOpaqueCube(var2 + 1, var3, var4) ? true : (var1.isBlockOpaqueCube(var2, var3, var4 - 1) ? true : var1.isBlockOpaqueCube(var2, var3, var4 + 1)));
-    }
-
-    public void onBlockPlaced(World var1, int var2, int var3, int var4, int var5) {
-        int var6 = var1.getBlockMetadata(var2, var3, var4);
-        if((var6 == 0 || var5 == 2) && var1.isBlockOpaqueCube(var2, var3, var4 + 1)) {
-            var6 = 2;
-        }
-
-        if((var6 == 0 || var5 == 3) && var1.isBlockOpaqueCube(var2, var3, var4 - 1)) {
-            var6 = 3;
-        }
-
-        if((var6 == 0 || var5 == 4) && var1.isBlockOpaqueCube(var2 + 1, var3, var4)) {
-            var6 = 4;
-        }
-
-        if((var6 == 0 || var5 == 5) && var1.isBlockOpaqueCube(var2 - 1, var3, var4)) {
-            var6 = 5;
-        }
-
-        var1.setBlockMetadataWithNotify(var2, var3, var4, var6);
-    }
-
-    public void onNeighborBlockChange(World var1, int var2, int var3, int var4, int var5) {
-        int var6 = var1.getBlockMetadata(var2, var3, var4);
-        boolean var7 = false;
-        if(var6 == 2 && var1.isBlockOpaqueCube(var2, var3, var4 + 1)) {
-            var7 = true;
-        }
-
-        if(var6 == 3 && var1.isBlockOpaqueCube(var2, var3, var4 - 1)) {
-            var7 = true;
-        }
-
-        if(var6 == 4 && var1.isBlockOpaqueCube(var2 + 1, var3, var4)) {
-            var7 = true;
-        }
-
-        if(var6 == 5 && var1.isBlockOpaqueCube(var2 - 1, var3, var4)) {
-            var7 = true;
-        }
-
-        if(!var7) {
-            this.dropBlockAsItem(var1, var2, var3, var4, var6);
-            var1.setBlockWithNotify(var2, var3, var4, 0);
-        }
-
-        super.onNeighborBlockChange(var1, var2, var3, var4, var5);
-    }
-
-    public int quantityDropped(Random var1) {
+    public boolean canPlaceBlockAt(World world, int i, int j, int k) {
+        if (world.isBlockOpaqueCube(i - 1, j, k)) {
+            return true;
+        }
+        if (world.isBlockOpaqueCube(i + 1, j, k)) {
+            return true;
+        }
+        if (world.isBlockOpaqueCube(i, j, k - 1)) {
+            return true;
+        }
+        return world.isBlockOpaqueCube(i, j, k + 1);
+    }
+
+    public void onBlockPlaced(World world, int i, int j, int k, int l) {
+        int i1 = world.getBlockMetadata(i, j, k);
+        if ((i1 == 0 || l == 2) && world.isBlockOpaqueCube(i, j, k + 1)) {
+            i1 = 2;
+        }
+        if ((i1 == 0 || l == 3) && world.isBlockOpaqueCube(i, j, k - 1)) {
+            i1 = 3;
+        }
+        if ((i1 == 0 || l == 4) && world.isBlockOpaqueCube(i + 1, j, k)) {
+            i1 = 4;
+        }
+        if ((i1 == 0 || l == 5) && world.isBlockOpaqueCube(i - 1, j, k)) {
+            i1 = 5;
+        }
+        world.setBlockMetadataWithNotify(i, j, k, i1);
+    }
+
+    public void onNeighborBlockChange(World world, int i, int j, int k, int l) {
+        int i1 = world.getBlockMetadata(i, j, k);
+        boolean flag = i1 == 2 && world.isBlockOpaqueCube(i, j, k + 1);
+        if (i1 == 3 && world.isBlockOpaqueCube(i, j, k - 1)) {
+            flag = true;
+        }
+        if (i1 == 4 && world.isBlockOpaqueCube(i + 1, j, k)) {
+            flag = true;
+        }
+        if (i1 == 5 && world.isBlockOpaqueCube(i - 1, j, k)) {
+            flag = true;
+        }
+        if (!flag) {
+            dropBlockAsItem(world, i, j, k, i1);
+            world.setBlockWithNotify(i, j, k, 0);
+        }
+        super.onNeighborBlockChange(world, i, j, k, l);
+    }
+
+    public int quantityDropped(Random random) {
         return 1;
     }
 }
