--- net/minecraft/src/ClippingHelper.java
+++ net/minecraft/src/ClippingHelper.java
@@ -1,14 +1,21 @@
 package net.minecraft.src;
 
 public class ClippingHelper {
-    public float[][] frustum = new float[16][16];
-    public float[] projectionMatrix = new float[16];
-    public float[] modelviewMatrix = new float[16];
-    public float[] clippingMatrix = new float[16];
-
-    public boolean isBoxInFrustum(double var1, double var3, double var5, double var7, double var9, double var11) {
-        for(int var13 = 0; var13 < 6; ++var13) {
-            if((double)this.frustum[var13][0] * var1 + (double)this.frustum[var13][1] * var3 + (double)this.frustum[var13][2] * var5 + (double)this.frustum[var13][3] <= 0.0D && (double)this.frustum[var13][0] * var7 + (double)this.frustum[var13][1] * var3 + (double)this.frustum[var13][2] * var5 + (double)this.frustum[var13][3] <= 0.0D && (double)this.frustum[var13][0] * var1 + (double)this.frustum[var13][1] * var9 + (double)this.frustum[var13][2] * var5 + (double)this.frustum[var13][3] <= 0.0D && (double)this.frustum[var13][0] * var7 + (double)this.frustum[var13][1] * var9 + (double)this.frustum[var13][2] * var5 + (double)this.frustum[var13][3] <= 0.0D && (double)this.frustum[var13][0] * var1 + (double)this.frustum[var13][1] * var3 + (double)this.frustum[var13][2] * var11 + (double)this.frustum[var13][3] <= 0.0D && (double)this.frustum[var13][0] * var7 + (double)this.frustum[var13][1] * var3 + (double)this.frustum[var13][2] * var11 + (double)this.frustum[var13][3] <= 0.0D && (double)this.frustum[var13][0] * var1 + (double)this.frustum[var13][1] * var9 + (double)this.frustum[var13][2] * var11 + (double)this.frustum[var13][3] <= 0.0D && (double)this.frustum[var13][0] * var7 + (double)this.frustum[var13][1] * var9 + (double)this.frustum[var13][2] * var11 + (double)this.frustum[var13][3] <= 0.0D) {
+
+    public float frustum[][];
+    public float projectionMatrix[];
+    public float modelviewMatrix[];
+    public float clippingMatrix[];
+    public ClippingHelper() {
+        frustum = new float[16][16];
+        projectionMatrix = new float[16];
+        modelviewMatrix = new float[16];
+        clippingMatrix = new float[16];
+    }
+
+    public boolean isBoxInFrustum(double d, double d1, double d2, double d3, double d4, double d5) {
+        for (int i = 0; i < 6; i++) {
+            if ((double) frustum[i][0] * d + (double) frustum[i][1] * d1 + (double) frustum[i][2] * d2 + (double) frustum[i][3] <= 0.0D && (double) frustum[i][0] * d3 + (double) frustum[i][1] * d1 + (double) frustum[i][2] * d2 + (double) frustum[i][3] <= 0.0D && (double) frustum[i][0] * d + (double) frustum[i][1] * d4 + (double) frustum[i][2] * d2 + (double) frustum[i][3] <= 0.0D && (double) frustum[i][0] * d3 + (double) frustum[i][1] * d4 + (double) frustum[i][2] * d2 + (double) frustum[i][3] <= 0.0D && (double) frustum[i][0] * d + (double) frustum[i][1] * d1 + (double) frustum[i][2] * d5 + (double) frustum[i][3] <= 0.0D && (double) frustum[i][0] * d3 + (double) frustum[i][1] * d1 + (double) frustum[i][2] * d5 + (double) frustum[i][3] <= 0.0D && (double) frustum[i][0] * d + (double) frustum[i][1] * d4 + (double) frustum[i][2] * d5 + (double) frustum[i][3] <= 0.0D && (double) frustum[i][0] * d3 + (double) frustum[i][1] * d4 + (double) frustum[i][2] * d5 + (double) frustum[i][3] <= 0.0D) {
                 return false;
             }
         }
