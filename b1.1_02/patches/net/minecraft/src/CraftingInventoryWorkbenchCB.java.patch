--- net/minecraft/src/CraftingInventoryWorkbenchCB.java
+++ net/minecraft/src/CraftingInventoryWorkbenchCB.java
@@ -1,72 +1,75 @@
 package net.minecraft.src;
 
 public class CraftingInventoryWorkbenchCB extends CraftingInventoryCB {
-    public InventoryCrafting a = new InventoryCrafting(this, 3, 3);
-    public IInventory b = new InventoryCraftResult();
-    private World field_20133_c;
-    private int field_20132_h;
-    private int field_20131_i;
-    private int field_20130_j;
-
-    public CraftingInventoryWorkbenchCB(InventoryPlayer var1, World var2, int var3, int var4, int var5) {
-        this.field_20133_c = var2;
-        this.field_20132_h = var3;
-        this.field_20131_i = var4;
-        this.field_20130_j = var5;
-        this.func_20117_a(new SlotCrafting(this.a, this.b, 0, 124, 35));
-
-        int var6;
-        int var7;
-        for(var6 = 0; var6 < 3; ++var6) {
-            for(var7 = 0; var7 < 3; ++var7) {
-                this.func_20117_a(new Slot(this.a, var7 + var6 * 3, 30 + var7 * 18, 17 + var6 * 18));
-            }
-        }
-
-        for(var6 = 0; var6 < 3; ++var6) {
-            for(var7 = 0; var7 < 9; ++var7) {
-                this.func_20117_a(new Slot(var1, var7 + var6 * 9 + 9, 8 + var7 * 18, 84 + var6 * 18));
-            }
-        }
-
-        for(var6 = 0; var6 < 9; ++var6) {
-            this.func_20117_a(new Slot(var1, var6, 8 + var6 * 18, 142));
-        }
-
-        this.onCraftMatrixChanged(this.a);
+
+    private final World field_20133_c;
+    private final int field_20132_h;
+    private final int field_20131_i;
+    private final int field_20130_j;
+    public InventoryCrafting craftMatrix;
+    public IInventory craftResult;
+    public CraftingInventoryWorkbenchCB(InventoryPlayer inventoryplayer, World world, int i, int j, int k) {
+        craftMatrix = new InventoryCrafting(this, 3, 3);
+        craftResult = new InventoryCraftResult();
+        field_20133_c = world;
+        field_20132_h = i;
+        field_20131_i = j;
+        field_20130_j = k;
+        func_20117_a(new SlotCrafting(craftMatrix, craftResult, 0, 124, 35));
+        for (int l = 0; l < 3; l++) {
+            for (int k1 = 0; k1 < 3; k1++) {
+                func_20117_a(new Slot(craftMatrix, k1 + l * 3, 30 + k1 * 18, 17 + l * 18));
+            }
+
+        }
+
+        for (int i1 = 0; i1 < 3; i1++) {
+            for (int l1 = 0; l1 < 9; l1++) {
+                func_20117_a(new Slot(inventoryplayer, l1 + i1 * 9 + 9, 8 + l1 * 18, 84 + i1 * 18));
+            }
+
+        }
+
+        for (int j1 = 0; j1 < 9; j1++) {
+            func_20117_a(new Slot(inventoryplayer, j1, 8 + j1 * 18, 142));
+        }
+
+        onCraftMatrixChanged(craftMatrix);
     }
 
-    public void onCraftMatrixChanged(IInventory var1) {
-        int[] var2 = new int[9];
-
-        for(int var3 = 0; var3 < 3; ++var3) {
-            for(int var4 = 0; var4 < 3; ++var4) {
-                int var5 = var3 + var4 * 3;
-                ItemStack var6 = this.a.getStackInSlot(var5);
-                if(var6 == null) {
-                    var2[var5] = -1;
+    public void onCraftMatrixChanged(IInventory iinventory) {
+        int[] ai = new int[9];
+        for (int i = 0; i < 3; i++) {
+            for (int j = 0; j < 3; j++) {
+                int k = i + j * 3;
+                ItemStack itemstack = craftMatrix.getStackInSlot(k);
+                if (itemstack == null) {
+                    ai[k] = -1;
                 } else {
-                    var2[var5] = var6.itemID;
+                    ai[k] = itemstack.itemID;
                 }
             }
+
         }
 
-        this.b.setInventorySlotContents(0, CraftingManager.getInstance().craft(var2));
+        craftResult.setInventorySlotContents(0, CraftingManager.getInstance().craft(ai));
     }
 
-    public void onCraftGuiClosed(EntityPlayer var1) {
-        super.onCraftGuiClosed(var1);
-
-        for(int var2 = 0; var2 < 9; ++var2) {
-            ItemStack var3 = this.a.getStackInSlot(var2);
-            if(var3 != null) {
-                var1.dropPlayerItem(var3);
+    public void onCraftGuiClosed(EntityPlayer entityplayer) {
+        super.onCraftGuiClosed(entityplayer);
+        for (int i = 0; i < 9; i++) {
+            ItemStack itemstack = craftMatrix.getStackInSlot(i);
+            if (itemstack != null) {
+                entityplayer.dropPlayerItem(itemstack);
             }
         }
 
     }
 
-    public boolean func_20120_b(EntityPlayer var1) {
-        return this.field_20133_c.getBlockId(this.field_20132_h, this.field_20131_i, this.field_20130_j) != Block.workbench.blockID ? false : var1.getDistanceSq((double)this.field_20132_h + 0.5D, (double)this.field_20131_i + 0.5D, (double)this.field_20130_j + 0.5D) <= 64.0D;
+    public boolean func_20120_b(EntityPlayer entityplayer) {
+        if (field_20133_c.getBlockId(field_20132_h, field_20131_i, field_20130_j) != Block.workbench.blockID) {
+            return false;
+        }
+        return entityplayer.getDistanceSq((double) field_20132_h + 0.5D, (double) field_20131_i + 0.5D, (double) field_20130_j + 0.5D) <= 64D;
     }
 }
