--- net/minecraft/src/ThreadDownloadImage.java
+++ net/minecraft/src/ThreadDownloadImage.java
@@ -1,44 +1,41 @@
 package net.minecraft.src;
 
+import javax.imageio.ImageIO;
 import java.net.HttpURLConnection;
 import java.net.URL;
-import javax.imageio.ImageIO;
 
 class ThreadDownloadImage extends Thread {
-    final String location;
-    final ImageBuffer buffer;
-    final ThreadDownloadImageData imageData;
 
-    ThreadDownloadImage(ThreadDownloadImageData var1, String var2, ImageBuffer var3) {
-        this.imageData = var1;
-        this.location = var2;
-        this.buffer = var3;
+    final String location; /* synthetic field */
+    final ImageBuffer buffer; /* synthetic field */
+    final ThreadDownloadImageData imageData; /* synthetic field */
+    ThreadDownloadImage(ThreadDownloadImageData threaddownloadimagedata, String s, ImageBuffer imagebuffer) {
+        imageData = threaddownloadimagedata;
+        location = s;
+        buffer = imagebuffer;
     }
 
     public void run() {
-        HttpURLConnection var1 = null;
-
+        HttpURLConnection httpurlconnection = null;
         try {
-            URL var2 = new URL(this.location);
-            var1 = (HttpURLConnection)var2.openConnection();
-            var1.setDoInput(true);
-            var1.setDoOutput(false);
-            var1.connect();
-            if(var1.getResponseCode() != 404) {
-                if(this.buffer == null) {
-                    this.imageData.image = ImageIO.read(var1.getInputStream());
-                } else {
-                    this.imageData.image = this.buffer.parseUserSkin(ImageIO.read(var1.getInputStream()));
-                }
-
+            URL url = new URL(location);
+            httpurlconnection = (HttpURLConnection) url.openConnection();
+            httpurlconnection.setDoInput(true);
+            httpurlconnection.setDoOutput(false);
+            httpurlconnection.addRequestProperty("User-Agent", "Mozilla/4.0");
+            httpurlconnection.connect();
+            if (httpurlconnection.getResponseCode() == 404) {
                 return;
             }
-        } catch (Exception var6) {
-            var6.printStackTrace();
-            return;
+            if (buffer == null) {
+                imageData.image = ImageIO.read(httpurlconnection.getInputStream());
+            } else {
+                imageData.image = buffer.parseUserSkin(ImageIO.read(httpurlconnection.getInputStream()));
+            }
+        } catch (Exception exception) {
+            exception.printStackTrace();
         } finally {
-            var1.disconnect();
+            httpurlconnection.disconnect();
         }
-
     }
 }
