--- net/minecraft/src/CompressedStreamTools.java
+++ net/minecraft/src/CompressedStreamTools.java
@@ -1,50 +1,43 @@
 package net.minecraft.src;
 
-import java.io.DataInput;
-import java.io.DataInputStream;
-import java.io.DataOutput;
-import java.io.DataOutputStream;
-import java.io.IOException;
-import java.io.InputStream;
-import java.io.OutputStream;
+import java.io.*;
 import java.util.zip.GZIPInputStream;
 import java.util.zip.GZIPOutputStream;
 
 public class CompressedStreamTools {
-    public static NBTTagCompound func_1138_a(InputStream var0) throws IOException {
-        DataInputStream var1 = new DataInputStream(new GZIPInputStream(var0));
-
-        NBTTagCompound var2;
-        try {
-            var2 = func_1141_a(var1);
-        } finally {
-            var1.close();
-        }
-
-        return var2;
-    }
-
-    public static void writeGzippedCompoundToOutputStream(NBTTagCompound var0, OutputStream var1) throws IOException {
-        DataOutputStream var2 = new DataOutputStream(new GZIPOutputStream(var1));
-
-        try {
-            func_1139_a(var0, var2);
-        } finally {
-            var2.close();
-        }
-
-    }
-
-    public static NBTTagCompound func_1141_a(DataInput var0) throws IOException {
-        NBTBase var1 = NBTBase.readTag(var0);
-        if(var1 instanceof NBTTagCompound) {
-            return (NBTTagCompound)var1;
+
+    public CompressedStreamTools() {
+    }
+
+    public static NBTTagCompound func_1138_a(InputStream inputstream) throws IOException {
+        DataInputStream datainputstream = new DataInputStream(new GZIPInputStream(inputstream));
+        try {
+            NBTTagCompound nbttagcompound = func_1141_a(datainputstream);
+            return nbttagcompound;
+        } finally {
+            datainputstream.close();
+        }
+    }
+
+    public static void writeGzippedCompoundToOutputStream(NBTTagCompound nbttagcompound, OutputStream outputstream) throws IOException {
+        DataOutputStream dataoutputstream = new DataOutputStream(new GZIPOutputStream(outputstream));
+        try {
+            func_1139_a(nbttagcompound, dataoutputstream);
+        } finally {
+            dataoutputstream.close();
+        }
+    }
+
+    public static NBTTagCompound func_1141_a(DataInput datainput) throws IOException {
+        NBTBase nbtbase = NBTBase.readTag(datainput);
+        if (nbtbase instanceof NBTTagCompound) {
+            return (NBTTagCompound) nbtbase;
         } else {
             throw new IOException("Root tag must be a named compound tag");
         }
     }
 
-    public static void func_1139_a(NBTTagCompound var0, DataOutput var1) throws IOException {
-        NBTBase.writeTag(var0, var1);
+    public static void func_1139_a(NBTTagCompound nbttagcompound, DataOutput dataoutput) throws IOException {
+        NBTBase.writeTag(nbttagcompound, dataoutput);
     }
 }
