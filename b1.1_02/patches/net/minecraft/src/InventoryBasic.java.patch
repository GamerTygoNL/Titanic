--- net/minecraft/src/InventoryBasic.java
+++ net/minecraft/src/InventoryBasic.java
@@ -2,59 +2,57 @@
 
 import java.util.List;
 
-public class InventoryBasic implements IInventory {
+public class InventoryBasic
+        implements IInventory {
+
     private String field_20072_a;
     private int field_20071_b;
-    private ItemStack[] field_20074_c;
+    private ItemStack field_20074_c[];
     private List field_20073_d;
 
-    public InventoryBasic(String var1, int var2) {
-        this.field_20072_a = var1;
-        this.field_20071_b = var2;
-        this.field_20074_c = new ItemStack[var2];
-    }
-
-    public ItemStack getStackInSlot(int var1) {
-        return this.field_20074_c[var1];
-    }
-
-    public ItemStack decrStackSize(int var1, int var2) {
-        if(this.field_20074_c[var1] != null) {
-            ItemStack var3;
-            if(this.field_20074_c[var1].stackSize <= var2) {
-                var3 = this.field_20074_c[var1];
-                this.field_20074_c[var1] = null;
-                this.onInventoryChanged();
-                return var3;
-            } else {
-                var3 = this.field_20074_c[var1].splitStack(var2);
-                if(this.field_20074_c[var1].stackSize == 0) {
-                    this.field_20074_c[var1] = null;
-                }
-
-                this.onInventoryChanged();
-                return var3;
-            }
+    public InventoryBasic(String s, int i) {
+        field_20072_a = s;
+        field_20071_b = i;
+        field_20074_c = new ItemStack[i];
+    }
+
+    public ItemStack getStackInSlot(int i) {
+        return field_20074_c[i];
+    }
+
+    public ItemStack decrStackSize(int i, int j) {
+        if (field_20074_c[i] != null) {
+            if (field_20074_c[i].stackSize <= j) {
+                ItemStack itemstack = field_20074_c[i];
+                field_20074_c[i] = null;
+                onInventoryChanged();
+                return itemstack;
+            }
+            ItemStack itemstack1 = field_20074_c[i].splitStack(j);
+            if (field_20074_c[i].stackSize == 0) {
+                field_20074_c[i] = null;
+            }
+            onInventoryChanged();
+            return itemstack1;
         } else {
             return null;
         }
     }
 
-    public void setInventorySlotContents(int var1, ItemStack var2) {
-        this.field_20074_c[var1] = var2;
-        if(var2 != null && var2.stackSize > this.getInventoryStackLimit()) {
-            var2.stackSize = this.getInventoryStackLimit();
+    public void setInventorySlotContents(int i, ItemStack itemstack) {
+        field_20074_c[i] = itemstack;
+        if (itemstack != null && itemstack.stackSize > getInventoryStackLimit()) {
+            itemstack.stackSize = getInventoryStackLimit();
         }
-
-        this.onInventoryChanged();
+        onInventoryChanged();
     }
 
     public int getSizeInventory() {
-        return this.field_20071_b;
+        return field_20071_b;
     }
 
     public String getInvName() {
-        return this.field_20072_a;
+        return field_20072_a;
     }
 
     public int getInventoryStackLimit() {
@@ -62,15 +60,15 @@
     }
 
     public void onInventoryChanged() {
-        if(this.field_20073_d != null) {
-            for(int var1 = 0; var1 < this.field_20073_d.size(); ++var1) {
-                ((IInvBasic)this.field_20073_d.get(var1)).func_20134_a(this);
+        if (field_20073_d != null) {
+            for (int i = 0; i < field_20073_d.size(); i++) {
+                ((IInvBasic) field_20073_d.get(i)).func_20134_a(this);
             }
+
         }
-
     }
 
-    public boolean func_20070_a_(EntityPlayer var1) {
+    public boolean func_20070_a_(EntityPlayer entityplayer) {
         return true;
     }
 }
