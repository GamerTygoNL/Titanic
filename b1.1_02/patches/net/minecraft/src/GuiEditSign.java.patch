--- net/minecraft/src/GuiEditSign.java
+++ net/minecraft/src/GuiEditSign.java
@@ -4,102 +4,100 @@
 import org.lwjgl.opengl.GL11;
 
 public class GuiEditSign extends GuiScreen {
-    protected String screenTitle = "Edit sign message:";
+
+    private static final String field_20083_l;
+
+    static {
+        field_20083_l = FontAllowedCharacters.field_20157_a;
+    }
+
+    protected String screenTitle;
     private TileEntitySign entitySign;
     private int updateCounter;
-    private int editLine = 0;
-    private static final String field_20083_l = FontAllowedCharacters.field_20157_a;
+    private int editLine;
 
-    public GuiEditSign(TileEntitySign var1) {
-        this.entitySign = var1;
+    public GuiEditSign(TileEntitySign tileentitysign) {
+        screenTitle = "Edit sign message:";
+        editLine = 0;
+        entitySign = tileentitysign;
     }
 
     public void initGui() {
-        this.controlList.clear();
+        controlList.clear();
         Keyboard.enableRepeatEvents(true);
-        this.controlList.add(new GuiButton(0, this.width / 2 - 100, this.height / 4 + 120, "Done"));
+        controlList.add(new GuiButton(0, width / 2 - 100, height / 4 + 120, "Done"));
     }
 
     public void onGuiClosed() {
         Keyboard.enableRepeatEvents(false);
-        if(this.mc.theWorld.multiplayerWorld) {
-            this.mc.func_20001_q().addToSendQueue(new Packet130(this.entitySign.xCoord, this.entitySign.yCoord, this.entitySign.zCoord, this.entitySign.signText));
+        if (mc.theWorld.multiplayerWorld) {
+            mc.func_20001_q().addToSendQueue(new Packet130(entitySign.xCoord, entitySign.yCoord, entitySign.zCoord, entitySign.signText));
         }
-
     }
 
     public void updateScreen() {
-        ++this.updateCounter;
-    }
-
-    protected void actionPerformed(GuiButton var1) {
-        if(var1.enabled) {
-            if(var1.id == 0) {
-                this.entitySign.onInventoryChanged();
-                this.mc.displayGuiScreen((GuiScreen)null);
-            }
-
-        }
-    }
-
-    protected void keyTyped(char var1, int var2) {
-        if(var2 == 200) {
-            this.editLine = this.editLine - 1 & 3;
-        }
-
-        if(var2 == 208 || var2 == 28) {
-            this.editLine = this.editLine + 1 & 3;
-        }
-
-        if(var2 == 14 && this.entitySign.signText[this.editLine].length() > 0) {
-            this.entitySign.signText[this.editLine] = this.entitySign.signText[this.editLine].substring(0, this.entitySign.signText[this.editLine].length() - 1);
-        }
-
-        if(field_20083_l.indexOf(var1) >= 0 && this.entitySign.signText[this.editLine].length() < 15) {
-            this.entitySign.signText[this.editLine] = this.entitySign.signText[this.editLine] + var1;
-        }
-
-    }
-
-    public void drawScreen(int var1, int var2, float var3) {
-        this.drawDefaultBackground();
-        this.drawCenteredString(this.fontRenderer, this.screenTitle, this.width / 2, 40, 16777215);
+        updateCounter++;
+    }
+
+    protected void actionPerformed(GuiButton guibutton) {
+        if (!guibutton.enabled) {
+            return;
+        }
+        if (guibutton.id == 0) {
+            entitySign.onInventoryChanged();
+            mc.displayGuiScreen(null);
+        }
+    }
+
+    protected void keyTyped(char c, int i) {
+        if (i == 200) {
+            editLine = editLine - 1 & 3;
+        }
+        if (i == 208 || i == 28) {
+            editLine = editLine + 1 & 3;
+        }
+        if (i == 14 && entitySign.signText[editLine].length() > 0) {
+            entitySign.signText[editLine] = entitySign.signText[editLine].substring(0, entitySign.signText[editLine].length() - 1);
+        }
+        if (field_20083_l.indexOf(c) >= 0 && entitySign.signText[editLine].length() < 15) {
+            entitySign.signText[editLine] += c;
+        }
+    }
+
+    public void drawScreen(int i, int j, float f) {
+        drawDefaultBackground();
+        drawCenteredString(fontRenderer, screenTitle, width / 2, 40, 0xffffff);
         GL11.glPushMatrix();
-        GL11.glTranslatef((float)(this.width / 2), (float)(this.height / 2), 50.0F);
-        float var4 = 93.75F;
-        GL11.glScalef(-var4, -var4, -var4);
-        GL11.glRotatef(180.0F, 0.0F, 1.0F, 0.0F);
-        Block var5 = this.entitySign.getBlockType();
-        if(var5 == Block.signPost) {
-            float var6 = (float)(this.entitySign.getBlockMetadata() * 360) / 16.0F;
-            GL11.glRotatef(var6, 0.0F, 1.0F, 0.0F);
-            GL11.glTranslatef(0.0F, 5.0F / 16.0F, 0.0F);
+        GL11.glTranslatef(width / 2, height / 2, 50F);
+        float f1 = 93.75F;
+        GL11.glScalef(-f1, -f1, -f1);
+        GL11.glRotatef(180F, 0.0F, 1.0F, 0.0F);
+        Block block = entitySign.getBlockType();
+        if (block == Block.signPost) {
+            float f2 = (float) (entitySign.getBlockMetadata() * 360) / 16F;
+            GL11.glRotatef(f2, 0.0F, 1.0F, 0.0F);
+            GL11.glTranslatef(0.0F, 0.3125F, 0.0F);
         } else {
-            int var8 = this.entitySign.getBlockMetadata();
-            float var7 = 0.0F;
-            if(var8 == 2) {
-                var7 = 180.0F;
-            }
-
-            if(var8 == 4) {
-                var7 = 90.0F;
-            }
-
-            if(var8 == 5) {
-                var7 = -90.0F;
-            }
-
-            GL11.glRotatef(var7, 0.0F, 1.0F, 0.0F);
-            GL11.glTranslatef(0.0F, 5.0F / 16.0F, 0.0F);
-        }
-
-        if(this.updateCounter / 6 % 2 == 0) {
-            this.entitySign.lineBeingEdited = this.editLine;
-        }
-
-        TileEntityRenderer.instance.renderTileEntityAt(this.entitySign, -0.5D, -0.75D, -0.5D, 0.0F);
-        this.entitySign.lineBeingEdited = -1;
+            int k = entitySign.getBlockMetadata();
+            float f3 = 0.0F;
+            if (k == 2) {
+                f3 = 180F;
+            }
+            if (k == 4) {
+                f3 = 90F;
+            }
+            if (k == 5) {
+                f3 = -90F;
+            }
+            GL11.glRotatef(f3, 0.0F, 1.0F, 0.0F);
+            GL11.glTranslatef(0.0F, 0.3125F, 0.0F);
+        }
+        if ((updateCounter / 6) % 2 == 0) {
+            entitySign.lineBeingEdited = editLine;
+        }
+        TileEntityRenderer.instance.renderTileEntityAt(entitySign, -0.5D, -0.75D, -0.5D, 0.0F);
+        entitySign.lineBeingEdited = -1;
         GL11.glPopMatrix();
-        super.drawScreen(var1, var2, var3);
+        super.drawScreen(i, j, f);
     }
 }
