--- net/minecraft/src/ImageBufferDownload.java
+++ net/minecraft/src/ImageBufferDownload.java
@@ -1,86 +1,93 @@
 package net.minecraft.src;
 
-import java.awt.Graphics;
+import java.awt.*;
 import java.awt.image.BufferedImage;
 import java.awt.image.DataBufferInt;
-import java.awt.image.ImageObserver;
-
-public class ImageBufferDownload implements ImageBuffer {
+
+public class ImageBufferDownload
+        implements ImageBuffer {
+
     private int[] imageData;
     private int imageWidth;
     private int imageHeight;
 
-    public BufferedImage parseUserSkin(BufferedImage var1) {
-        if(var1 == null) {
+    public ImageBufferDownload() {
+    }
+
+    public BufferedImage parseUserSkin(BufferedImage bufferedimage) {
+        if (bufferedimage == null) {
             return null;
-        } else {
-            this.imageWidth = 64;
-            this.imageHeight = 32;
-            BufferedImage var2 = new BufferedImage(this.imageWidth, this.imageHeight, 2);
-            Graphics var3 = var2.getGraphics();
-            var3.drawImage(var1, 0, 0, (ImageObserver)null);
-            var3.dispose();
-            this.imageData = ((DataBufferInt)var2.getRaster().getDataBuffer()).getData();
-            this.func_884_b(0, 0, 32, 16);
-            this.func_885_a(32, 0, 64, 32);
-            this.func_884_b(0, 16, 64, 32);
-            boolean var4 = false;
-
-            int var5;
-            int var6;
-            int var7;
-            for(var5 = 32; var5 < 64; ++var5) {
-                for(var6 = 0; var6 < 16; ++var6) {
-                    var7 = this.imageData[var5 + var6 * 64];
-                    if((var7 >> 24 & 255) < 128) {
-                        var4 = true;
-                    }
-                }
-            }
-
-            if(!var4) {
-                for(var5 = 32; var5 < 64; ++var5) {
-                    for(var6 = 0; var6 < 16; ++var6) {
-                        var7 = this.imageData[var5 + var6 * 64];
-                        if((var7 >> 24 & 255) < 128) {
-                            var4 = true;
-                        }
-                    }
-                }
-            }
-
-            return var2;
-        }
-    }
-
-    private void func_885_a(int var1, int var2, int var3, int var4) {
-        if(!this.func_886_c(var1, var2, var3, var4)) {
-            for(int var5 = var1; var5 < var3; ++var5) {
-                for(int var6 = var2; var6 < var4; ++var6) {
-                    this.imageData[var5 + var6 * this.imageWidth] &= 16777215;
-                }
-            }
-
-        }
-    }
-
-    private void func_884_b(int var1, int var2, int var3, int var4) {
-        for(int var5 = var1; var5 < var3; ++var5) {
-            for(int var6 = var2; var6 < var4; ++var6) {
-                this.imageData[var5 + var6 * this.imageWidth] |= -16777216;
-            }
-        }
-
-    }
-
-    private boolean func_886_c(int var1, int var2, int var3, int var4) {
-        for(int var5 = var1; var5 < var3; ++var5) {
-            for(int var6 = var2; var6 < var4; ++var6) {
-                int var7 = this.imageData[var5 + var6 * this.imageWidth];
-                if((var7 >> 24 & 255) < 128) {
+        }
+        imageWidth = 64;
+        imageHeight = 32;
+        BufferedImage bufferedimage1 = new BufferedImage(imageWidth, imageHeight, 2);
+        Graphics g = bufferedimage1.getGraphics();
+        g.drawImage(bufferedimage, 0, 0, null);
+        g.dispose();
+        imageData = ((DataBufferInt) bufferedimage1.getRaster().getDataBuffer()).getData();
+        func_884_b(0, 0, 32, 16);
+        func_885_a(32, 0, 64, 32);
+        func_884_b(0, 16, 64, 32);
+        boolean flag = false;
+        for (int i = 32; i < 64; i++) {
+            for (int k = 0; k < 16; k++) {
+                int i1 = imageData[i + k * 64];
+                if ((i1 >> 24 & 0xff) < 128) {
+                    flag = true;
+                    break;
+                }
+            }
+
+        }
+
+        if (!flag) {
+            for (int j = 32; j < 64; j++) {
+                for (int l = 0; l < 16; l++) {
+                    int j1 = imageData[j + l * 64];
+                    boolean flag1;
+                    if ((j1 >> 24 & 0xff) < 128) {
+                        flag1 = true;
+                    }
+                }
+
+            }
+
+        }
+        return bufferedimage1;
+    }
+
+    private void func_885_a(int i, int j, int k, int l) {
+        if (func_886_c(i, j, k, l)) {
+            return;
+        }
+        for (int i1 = i; i1 < k; i1++) {
+            for (int j1 = j; j1 < l; j1++) {
+                imageData[i1 + j1 * imageWidth] &= 0xffffff;
+            }
+
+        }
+
+    }
+
+    private void func_884_b(int i, int j, int k, int l) {
+        for (int i1 = i; i1 < k; i1++) {
+            for (int j1 = j; j1 < l; j1++) {
+                imageData[i1 + j1 * imageWidth] |= 0xff000000;
+            }
+
+        }
+
+    }
+
+    private boolean func_886_c(int i, int j, int k, int l) {
+        for (int i1 = i; i1 < k; i1++) {
+            for (int j1 = j; j1 < l; j1++) {
+                int k1 = imageData[i1 + j1 * imageWidth];
+                if ((k1 >> 24 & 0xff) < 128) {
                     return true;
                 }
             }
+
         }
 
         return false;
