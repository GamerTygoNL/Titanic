--- net/minecraft/src/NBTTagList.java
+++ net/minecraft/src/NBTTagList.java
@@ -7,56 +7,58 @@
 import java.util.List;
 
 public class NBTTagList extends NBTBase {
-    private List tagList = new ArrayList();
+
+    private List tagList;
     private byte tagType;
 
-    void writeTagContents(DataOutput var1) throws IOException {
-        if(this.tagList.size() > 0) {
-            this.tagType = ((NBTBase)this.tagList.get(0)).getType();
+    public NBTTagList() {
+        tagList = new ArrayList();
+    }
+
+    void writeTagContents(DataOutput dataoutput) throws IOException {
+        if (tagList.size() > 0) {
+            tagType = ((NBTBase) tagList.get(0)).getType();
         } else {
-            this.tagType = 1;
+            tagType = 1;
         }
-
-        var1.writeByte(this.tagType);
-        var1.writeInt(this.tagList.size());
-
-        for(int var2 = 0; var2 < this.tagList.size(); ++var2) {
-            ((NBTBase)this.tagList.get(var2)).writeTagContents(var1);
+        dataoutput.writeByte(tagType);
+        dataoutput.writeInt(tagList.size());
+        for (int i = 0; i < tagList.size(); i++) {
+            ((NBTBase) tagList.get(i)).writeTagContents(dataoutput);
         }
 
     }
 
-    void readTagContents(DataInput var1) throws IOException {
-        this.tagType = var1.readByte();
-        int var2 = var1.readInt();
-        this.tagList = new ArrayList();
-
-        for(int var3 = 0; var3 < var2; ++var3) {
-            NBTBase var4 = NBTBase.createTagOfType(this.tagType);
-            var4.readTagContents(var1);
-            this.tagList.add(var4);
+    void readTagContents(DataInput datainput) throws IOException {
+        tagType = datainput.readByte();
+        int i = datainput.readInt();
+        tagList = new ArrayList();
+        for (int j = 0; j < i; j++) {
+            NBTBase nbtbase = NBTBase.createTagOfType(tagType);
+            nbtbase.readTagContents(datainput);
+            tagList.add(nbtbase);
         }
 
     }
 
     public byte getType() {
-        return (byte)9;
+        return 9;
     }
 
     public String toString() {
-        return "" + this.tagList.size() + " entries of type " + NBTBase.getTagName(this.tagType);
-    }
-
-    public void setTag(NBTBase var1) {
-        this.tagType = var1.getType();
-        this.tagList.add(var1);
-    }
-
-    public NBTBase tagAt(int var1) {
-        return (NBTBase)this.tagList.get(var1);
+        return tagList.size() + " entries of type " + NBTBase.getTagName(tagType);
+    }
+
+    public void setTag(NBTBase nbtbase) {
+        tagType = nbtbase.getType();
+        tagList.add(nbtbase);
+    }
+
+    public NBTBase tagAt(int i) {
+        return (NBTBase) tagList.get(i);
     }
 
     public int tagCount() {
-        return this.tagList.size();
+        return tagList.size();
     }
 }
