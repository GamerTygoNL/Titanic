--- net/minecraft/src/SoundManager.java
+++ net/minecraft/src/SoundManager.java
@@ -1,196 +1,197 @@
 package net.minecraft.src;
 
-import java.io.File;
-import java.util.Random;
 import paulscode.sound.SoundSystem;
 import paulscode.sound.SoundSystemConfig;
-import paulscode.sound.codecs.CodecJOrbis;
-import paulscode.sound.codecs.CodecWav;
-import paulscode.sound.libraries.LibraryLWJGLOpenAL;
+
+import java.io.File;
+import java.util.Random;
 
 public class SoundManager {
+
     private static SoundSystem sndSystem;
-    private SoundPool soundPoolSounds = new SoundPool();
-    private SoundPool soundPoolStreaming = new SoundPool();
-    private SoundPool soundPoolMusic = new SoundPool();
-    private int field_587_e = 0;
-    private GameSettings options;
     private static boolean loaded = false;
-    private Random rand = new Random();
-    private int field_583_i = this.rand.nextInt(12000);
-
-    public void loadSoundSettings(GameSettings var1) {
-        this.soundPoolStreaming.field_1657_b = false;
-        this.options = var1;
-        if(!loaded && (var1 == null || var1.soundVolume != 0.0F || var1.musicVolume != 0.0F)) {
-            this.tryToSetLibraryAndCodecs();
+    private final SoundPool soundPoolSounds;
+    private final SoundPool soundPoolStreaming;
+    private final SoundPool soundPoolMusic;
+    private final Random rand;
+    private int field_587_e;
+    private GameSettings options;
+    private int field_583_i;
+
+    public SoundManager() {
+        soundPoolSounds = new SoundPool();
+        soundPoolStreaming = new SoundPool();
+        soundPoolMusic = new SoundPool();
+        field_587_e = 0;
+        rand = new Random();
+        field_583_i = rand.nextInt(12000);
+    }
+
+    public void loadSoundSettings(GameSettings gamesettings) {
+        soundPoolStreaming.field_1657_b = false;
+        options = gamesettings;
+        if (!loaded && (gamesettings == null || gamesettings.soundVolume != 0.0F || gamesettings.musicVolume != 0.0F)) {
+            tryToSetLibraryAndCodecs();
         }
-
     }
 
     private void tryToSetLibraryAndCodecs() {
         try {
-            float var1 = this.options.soundVolume;
-            float var2 = this.options.musicVolume;
-            this.options.soundVolume = 0.0F;
-            this.options.musicVolume = 0.0F;
-            this.options.saveOptions();
-            SoundSystemConfig.addLibrary(LibraryLWJGLOpenAL.class);
-            SoundSystemConfig.setCodec("ogg", CodecJOrbis.class);
+            float f = options.soundVolume;
+            float f1 = options.musicVolume;
+            options.soundVolume = 0.0F;
+            options.musicVolume = 0.0F;
+            options.saveOptions();
+            SoundSystemConfig.addLibrary(paulscode.sound.libraries.LibraryLWJGLOpenAL.class);
+            SoundSystemConfig.setCodec("ogg", paulscode.sound.codecs.CodecJOrbis.class);
             SoundSystemConfig.setCodec("mus", CodecMus.class);
-            SoundSystemConfig.setCodec("wav", CodecWav.class);
+            SoundSystemConfig.setCodec("wav", paulscode.sound.codecs.CodecWav.class);
             sndSystem = new SoundSystem();
-            this.options.soundVolume = var1;
-            this.options.musicVolume = var2;
-            this.options.saveOptions();
-        } catch (Throwable var3) {
-            var3.printStackTrace();
+            options.soundVolume = f;
+            options.musicVolume = f1;
+            options.saveOptions();
+        } catch (Throwable throwable) {
+            throwable.printStackTrace();
             System.err.println("error linking with the LibraryJavaSound plug-in");
         }
-
         loaded = true;
     }
 
     public void onSoundOptionsChanged() {
-        if(!loaded && (this.options.soundVolume != 0.0F || this.options.musicVolume != 0.0F)) {
-            this.tryToSetLibraryAndCodecs();
+        if (!loaded && (options.soundVolume != 0.0F || options.musicVolume != 0.0F)) {
+            tryToSetLibraryAndCodecs();
         }
-
-        if(loaded) {
-            if(this.options.musicVolume == 0.0F) {
+        if (loaded) {
+            if (options.musicVolume == 0.0F) {
                 sndSystem.stop("BgMusic");
             } else {
-                sndSystem.setVolume("BgMusic", this.options.musicVolume);
+                sndSystem.setVolume("BgMusic", options.musicVolume);
             }
         }
-
     }
 
     public void closeMinecraft() {
-        if(loaded) {
+        if (loaded) {
             sndSystem.cleanup();
         }
-
-    }
-
-    public void addSound(String var1, File var2) {
-        this.soundPoolSounds.addSound(var1, var2);
-    }
-
-    public void addStreaming(String var1, File var2) {
-        this.soundPoolStreaming.addSound(var1, var2);
-    }
-
-    public void addMusic(String var1, File var2) {
-        this.soundPoolMusic.addSound(var1, var2);
+    }
+
+    public void addSound(String s, File file) {
+        soundPoolSounds.addSound(s, file);
+    }
+
+    public void addStreaming(String s, File file) {
+        soundPoolStreaming.addSound(s, file);
+    }
+
+    public void addMusic(String s, File file) {
+        soundPoolMusic.addSound(s, file);
     }
 
     public void func_4033_c() {
-        if(loaded && this.options.musicVolume != 0.0F) {
-            if(!sndSystem.playing("BgMusic") && !sndSystem.playing("streaming")) {
-                if(this.field_583_i > 0) {
-                    --this.field_583_i;
-                    return;
-                }
-
-                SoundPoolEntry var1 = this.soundPoolMusic.getRandomSound();
-                if(var1 != null) {
-                    this.field_583_i = this.rand.nextInt(12000) + 12000;
-                    sndSystem.backgroundMusic("BgMusic", var1.soundUrl, var1.soundName, false);
-                    sndSystem.setVolume("BgMusic", this.options.musicVolume);
-                    sndSystem.play("BgMusic");
-                }
-            }
-
-        }
-    }
-
-    public void func_338_a(EntityLiving var1, float var2) {
-        if(loaded && this.options.soundVolume != 0.0F) {
-            if(var1 != null) {
-                float var3 = var1.prevRotationYaw + (var1.rotationYaw - var1.prevRotationYaw) * var2;
-                double var4 = var1.prevPosX + (var1.posX - var1.prevPosX) * (double)var2;
-                double var6 = var1.prevPosY + (var1.posY - var1.prevPosY) * (double)var2;
-                double var8 = var1.prevPosZ + (var1.posZ - var1.prevPosZ) * (double)var2;
-                float var10 = MathHelper.cos(-var3 * ((float)Math.PI / 180.0F) - (float)Math.PI);
-                float var11 = MathHelper.sin(-var3 * ((float)Math.PI / 180.0F) - (float)Math.PI);
-                float var12 = -var11;
-                float var13 = 0.0F;
-                float var14 = -var10;
-                float var15 = 0.0F;
-                float var16 = 1.0F;
-                float var17 = 0.0F;
-                sndSystem.setListenerPosition((float)var4, (float)var6, (float)var8);
-                sndSystem.setListenerOrientation(var12, var13, var14, var15, var16, var17);
-            }
-        }
-    }
-
-    public void func_331_a(String var1, float var2, float var3, float var4, float var5, float var6) {
-        if(loaded && this.options.soundVolume != 0.0F) {
-            String var7 = "streaming";
-            if(sndSystem.playing("streaming")) {
-                sndSystem.stop("streaming");
-            }
-
-            if(var1 != null) {
-                SoundPoolEntry var8 = this.soundPoolStreaming.getRandomSoundFromSoundPool(var1);
-                if(var8 != null && var5 > 0.0F) {
-                    if(sndSystem.playing("BgMusic")) {
-                        sndSystem.stop("BgMusic");
-                    }
-
-                    float var9 = 16.0F;
-                    sndSystem.newStreamingSource(true, var7, var8.soundUrl, var8.soundName, false, var2, var3, var4, 2, var9 * 4.0F);
-                    sndSystem.setVolume(var7, 0.5F * this.options.soundVolume);
-                    sndSystem.play(var7);
-                }
-
-            }
-        }
-    }
-
-    public void playSound(String var1, float var2, float var3, float var4, float var5, float var6) {
-        if(loaded && this.options.soundVolume != 0.0F) {
-            SoundPoolEntry var7 = this.soundPoolSounds.getRandomSoundFromSoundPool(var1);
-            if(var7 != null && var5 > 0.0F) {
-                this.field_587_e = (this.field_587_e + 1) % 256;
-                String var8 = "sound_" + this.field_587_e;
-                float var9 = 16.0F;
-                if(var5 > 1.0F) {
-                    var9 *= var5;
-                }
-
-                sndSystem.newSource(var5 > 1.0F, var8, var7.soundUrl, var7.soundName, false, var2, var3, var4, 2, var9);
-                sndSystem.setPitch(var8, var6);
-                if(var5 > 1.0F) {
-                    var5 = 1.0F;
-                }
-
-                sndSystem.setVolume(var8, var5 * this.options.soundVolume);
-                sndSystem.play(var8);
-            }
-
-        }
-    }
-
-    public void func_337_a(String var1, float var2, float var3) {
-        if(loaded && this.options.soundVolume != 0.0F) {
-            SoundPoolEntry var4 = this.soundPoolSounds.getRandomSoundFromSoundPool(var1);
-            if(var4 != null) {
-                this.field_587_e = (this.field_587_e + 1) % 256;
-                String var5 = "sound_" + this.field_587_e;
-                sndSystem.newSource(false, var5, var4.soundUrl, var4.soundName, false, 0.0F, 0.0F, 0.0F, 0, 0.0F);
-                if(var2 > 1.0F) {
-                    var2 = 1.0F;
-                }
-
-                var2 *= 0.25F;
-                sndSystem.setPitch(var5, var3);
-                sndSystem.setVolume(var5, var2 * this.options.soundVolume);
-                sndSystem.play(var5);
-            }
-
-        }
-    }
+        if (!loaded || options.musicVolume == 0.0F) {
+            return;
+        }
+        if (!sndSystem.playing("BgMusic") && !sndSystem.playing("streaming")) {
+            if (field_583_i > 0) {
+                field_583_i--;
+                return;
+            }
+            SoundPoolEntry soundpoolentry = soundPoolMusic.getRandomSound();
+            if (soundpoolentry != null) {
+                field_583_i = rand.nextInt(12000) + 12000;
+                sndSystem.backgroundMusic("BgMusic", soundpoolentry.soundUrl, soundpoolentry.soundName, false);
+                sndSystem.setVolume("BgMusic", options.musicVolume);
+                sndSystem.play("BgMusic");
+            }
+        }
+    }
+
+    public void func_338_a(EntityLiving entityliving, float f) {
+        if (!loaded || options.soundVolume == 0.0F) {
+            return;
+        }
+        if (entityliving == null) {
+        } else {
+            float f1 = entityliving.prevRotationYaw + (entityliving.rotationYaw - entityliving.prevRotationYaw) * f;
+            double d = entityliving.prevPosX + (entityliving.posX - entityliving.prevPosX) * (double) f;
+            double d1 = entityliving.prevPosY + (entityliving.posY - entityliving.prevPosY) * (double) f;
+            double d2 = entityliving.prevPosZ + (entityliving.posZ - entityliving.prevPosZ) * (double) f;
+            float f2 = MathHelper.cos(-f1 * 0.01745329F - 3.141593F);
+            float f3 = MathHelper.sin(-f1 * 0.01745329F - 3.141593F);
+            float f4 = -f3;
+            float f5 = 0.0F;
+            float f6 = -f2;
+            float f7 = 0.0F;
+            float f8 = 1.0F;
+            float f9 = 0.0F;
+            sndSystem.setListenerPosition((float) d, (float) d1, (float) d2);
+            sndSystem.setListenerOrientation(f4, f5, f6, f7, f8, f9);
+        }
+    }
+
+    public void func_331_a(String s, float f, float f1, float f2, float f3, float f4) {
+        if (!loaded || options.soundVolume == 0.0F) {
+            return;
+        }
+        String s1 = "streaming";
+        if (sndSystem.playing("streaming")) {
+            sndSystem.stop("streaming");
+        }
+        if (s == null) {
+            return;
+        }
+        SoundPoolEntry soundpoolentry = soundPoolStreaming.getRandomSoundFromSoundPool(s);
+        if (soundpoolentry != null && f3 > 0.0F) {
+            if (sndSystem.playing("BgMusic")) {
+                sndSystem.stop("BgMusic");
+            }
+            float f5 = 16F;
+            sndSystem.newStreamingSource(true, s1, soundpoolentry.soundUrl, soundpoolentry.soundName, false, f, f1, f2, 2, f5 * 4F);
+            sndSystem.setVolume(s1, 0.5F * options.soundVolume);
+            sndSystem.play(s1);
+        }
+    }
+
+    public void playSound(String s, float f, float f1, float f2, float f3, float f4) {
+        if (!loaded || options.soundVolume == 0.0F) {
+            return;
+        }
+        SoundPoolEntry soundpoolentry = soundPoolSounds.getRandomSoundFromSoundPool(s);
+        if (soundpoolentry != null && f3 > 0.0F) {
+            field_587_e = (field_587_e + 1) % 256;
+            String s1 = "sound_" + field_587_e;
+            float f5 = 16F;
+            if (f3 > 1.0F) {
+                f5 *= f3;
+            }
+            sndSystem.newSource(f3 > 1.0F, s1, soundpoolentry.soundUrl, soundpoolentry.soundName, false, f, f1, f2, 2, f5);
+            sndSystem.setPitch(s1, f4);
+            if (f3 > 1.0F) {
+                f3 = 1.0F;
+            }
+            sndSystem.setVolume(s1, f3 * options.soundVolume);
+            sndSystem.play(s1);
+        }
+    }
+
+    public void func_337_a(String s, float f, float f1) {
+        if (!loaded || options.soundVolume == 0.0F) {
+            return;
+        }
+        SoundPoolEntry soundpoolentry = soundPoolSounds.getRandomSoundFromSoundPool(s);
+        if (soundpoolentry != null) {
+            field_587_e = (field_587_e + 1) % 256;
+            String s1 = "sound_" + field_587_e;
+            sndSystem.newSource(false, s1, soundpoolentry.soundUrl, soundpoolentry.soundName, false, 0.0F, 0.0F, 0.0F, 0, 0.0F);
+            if (f > 1.0F) {
+                f = 1.0F;
+            }
+            f *= 0.25F;
+            sndSystem.setPitch(s1, f1);
+            sndSystem.setVolume(s1, f * options.soundVolume);
+            sndSystem.play(s1);
+        }
+    }
+
 }
