--- net/minecraft/src/GuiIngame.java
+++ net/minecraft/src/GuiIngame.java
@@ -9,6 +9,13 @@
 import org.lwjgl.opengl.GL11;
 import org.lwjgl.opengl.GL12;
 
+import cc.noxiuam.titanic.Ref;
+import cc.noxiuam.titanic.event.impl.gui.DebugDrawEvent;
+import cc.noxiuam.titanic.event.impl.gui.GuiDrawEvent;
+import cc.noxiuam.titanic.event.impl.gui.HotbarRenderEvent;
+import cc.noxiuam.titanic.event.impl.gui.chat.ChatBackgroundDrawEvent;
+import cc.noxiuam.titanic.event.impl.world.block.PortalOverlayEvent;
+
 public class GuiIngame extends Gui {
     private static RenderItem itemRenderer = new RenderItem();
     private List chatMessageList = new ArrayList();
@@ -42,114 +49,127 @@
         }
 
         float var10 = this.mc.thePlayer.prevTimeInPortal + (this.mc.thePlayer.timeInPortal - this.mc.thePlayer.prevTimeInPortal) * var1;
-        if(var10 > 0.0F) {
+        PortalOverlayEvent portalEvent = new PortalOverlayEvent();
+        Ref.getEventManager().handleEvent(portalEvent);
+        if(var10 > 0.0F || portalEvent.isCancelled()) {
             this.func_4065_b(var10, var6, var7);
         }
 
-        GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
-        GL11.glBindTexture(GL11.GL_TEXTURE_2D, this.mc.renderEngine.getTexture("/gui/gui.png"));
-        InventoryPlayer var11 = this.mc.thePlayer.inventory;
-        this.zLevel = -90.0F;
-        this.drawTexturedModalRect(var6 / 2 - 91, var7 - 22, 0, 0, 182, 22);
-        this.drawTexturedModalRect(var6 / 2 - 91 - 1 + var11.currentItem * 20, var7 - 22 - 1, 0, 22, 24, 22);
-        GL11.glBindTexture(GL11.GL_TEXTURE_2D, this.mc.renderEngine.getTexture("/gui/icons.png"));
-        GL11.glEnable(GL11.GL_BLEND);
-        GL11.glBlendFunc(GL11.GL_ONE_MINUS_DST_COLOR, GL11.GL_ONE_MINUS_SRC_COLOR);
-        this.drawTexturedModalRect(var6 / 2 - 7, var7 / 2 - 7, 0, 0, 16, 16);
-        GL11.glDisable(GL11.GL_BLEND);
-        boolean var12 = this.mc.thePlayer.field_9306_bj / 3 % 2 == 1;
-        if(this.mc.thePlayer.field_9306_bj < 10) {
-            var12 = false;
-        }
+        HotbarRenderEvent hotbarRenderEvent = new HotbarRenderEvent();
+        Ref.getEventManager().handleEvent(hotbarRenderEvent);
 
-        int var13 = this.mc.thePlayer.health;
-        int var14 = this.mc.thePlayer.prevHealth;
-        this.rand.setSeed((long)(this.updateCounter * 312871));
-        int var15;
         int var16;
         int var17;
-        if(this.mc.playerController.shouldDrawHUD()) {
-            var15 = this.mc.thePlayer.getPlayerArmorValue();
-
-            int var18;
-            for(var16 = 0; var16 < 10; ++var16) {
-                var17 = var7 - 32;
-                if(var15 > 0) {
-                    var18 = var6 / 2 + 91 - var16 * 8 - 9;
-                    if(var16 * 2 + 1 < var15) {
-                        this.drawTexturedModalRect(var18, var17, 34, 9, 9, 9);
-                    }
-
-                    if(var16 * 2 + 1 == var15) {
-                        this.drawTexturedModalRect(var18, var17, 25, 9, 9, 9);
-                    }
-
-                    if(var16 * 2 + 1 > var15) {
-                        this.drawTexturedModalRect(var18, var17, 16, 9, 9, 9);
-                    }
-                }
-
-                byte var27 = 0;
-                if(var12) {
-                    var27 = 1;
-                }
-
-                int var19 = var6 / 2 - 91 + var16 * 8;
-                if(var13 <= 4) {
-                    var17 += this.rand.nextInt(2);
-                }
-
-                this.drawTexturedModalRect(var19, var17, 16 + var27 * 9, 0, 9, 9);
-                if(var12) {
-                    if(var16 * 2 + 1 < var14) {
-                        this.drawTexturedModalRect(var19, var17, 70, 0, 9, 9);
-                    }
-
-                    if(var16 * 2 + 1 == var14) {
-                        this.drawTexturedModalRect(var19, var17, 79, 0, 9, 9);
-                    }
-                }
-
-                if(var16 * 2 + 1 < var13) {
-                    this.drawTexturedModalRect(var19, var17, 52, 0, 9, 9);
-                }
-
-                if(var16 * 2 + 1 == var13) {
-                    this.drawTexturedModalRect(var19, var17, 61, 0, 9, 9);
-                }
-            }
-
-            if(this.mc.thePlayer.isInsideOfMaterial(Material.water)) {
-                var16 = (int)Math.ceil((double)(this.mc.thePlayer.air - 2) * 10.0D / 300.0D);
-                var17 = (int)Math.ceil((double)this.mc.thePlayer.air * 10.0D / 300.0D) - var16;
-
-                for(var18 = 0; var18 < var16 + var17; ++var18) {
-                    if(var18 < var16) {
-                        this.drawTexturedModalRect(var6 / 2 - 91 + var18 * 8, var7 - 32 - 9, 16, 18, 9, 9);
-                    } else {
-                        this.drawTexturedModalRect(var6 / 2 - 91 + var18 * 8, var7 - 32 - 9, 25, 18, 9, 9);
-                    }
-                }
-            }
-        }
-
-        GL11.glDisable(GL11.GL_BLEND);
-        GL11.glEnable(GL12.GL_RESCALE_NORMAL);
-        GL11.glPushMatrix();
-        GL11.glRotatef(180.0F, 1.0F, 0.0F, 0.0F);
-        RenderHelper.enableStandardItemLighting();
-        GL11.glPopMatrix();
-
-        for(var15 = 0; var15 < 9; ++var15) {
-            var16 = var6 / 2 - 90 + var15 * 20 + 2;
-            var17 = var7 - 16 - 3;
-            this.func_554_a(var15, var16, var17, var1);
-        }
-
-        RenderHelper.disableStandardItemLighting();
-        GL11.glDisable(GL12.GL_RESCALE_NORMAL);
+
+        if (!hotbarRenderEvent.isCancelled()) {
+            GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
+            GL11.glBindTexture(GL11.GL_TEXTURE_2D, this.mc.renderEngine.getTexture("/gui/gui.png"));
+            InventoryPlayer var11 = this.mc.thePlayer.inventory;
+            this.zLevel = -90.0F;
+            this.drawTexturedModalRect(var6 / 2 - 91, var7 - 22, 0, 0, 182, 22);
+            this.drawTexturedModalRect(var6 / 2 - 91 - 1 + var11.currentItem * 20, var7 - 22 - 1, 0, 22, 24, 22);
+            GL11.glBindTexture(GL11.GL_TEXTURE_2D, this.mc.renderEngine.getTexture("/gui/icons.png"));
+            GL11.glEnable(GL11.GL_BLEND);
+            GL11.glBlendFunc(GL11.GL_ONE_MINUS_DST_COLOR, GL11.GL_ONE_MINUS_SRC_COLOR);
+            this.drawTexturedModalRect(var6 / 2 - 7, var7 / 2 - 7, 0, 0, 16, 16);
+            GL11.glDisable(GL11.GL_BLEND);
+            boolean var12 = this.mc.thePlayer.field_9306_bj / 3 % 2 == 1;
+            if(this.mc.thePlayer.field_9306_bj < 10) {
+                var12 = false;
+            }
+
+            int var13 = this.mc.thePlayer.health;
+            int var14 = this.mc.thePlayer.prevHealth;
+            this.rand.setSeed((long)(this.updateCounter * 312871));
+            int var15;
+            if(this.mc.playerController.shouldDrawHUD()) {
+                var15 = this.mc.thePlayer.getPlayerArmorValue();
+
+                int var18;
+                for(var16 = 0; var16 < 10; ++var16) {
+                    var17 = var7 - 32;
+                    if(var15 > 0) {
+                        var18 = var6 / 2 + 91 - var16 * 8 - 9;
+                        if(var16 * 2 + 1 < var15) {
+                            this.drawTexturedModalRect(var18, var17, 34, 9, 9, 9);
+                        }
+
+                        if(var16 * 2 + 1 == var15) {
+                            this.drawTexturedModalRect(var18, var17, 25, 9, 9, 9);
+                        }
+
+                        if(var16 * 2 + 1 > var15) {
+                            this.drawTexturedModalRect(var18, var17, 16, 9, 9, 9);
+                        }
+                    }
+
+                    byte var27 = 0;
+                    if(var12) {
+                        var27 = 1;
+                    }
+
+                    int var19 = var6 / 2 - 91 + var16 * 8;
+                    if(var13 <= 4) {
+                        var17 += this.rand.nextInt(2);
+                    }
+
+                    this.drawTexturedModalRect(var19, var17, 16 + var27 * 9, 0, 9, 9);
+                    if(var12) {
+                        if(var16 * 2 + 1 < var14) {
+                            this.drawTexturedModalRect(var19, var17, 70, 0, 9, 9);
+                        }
+
+                        if(var16 * 2 + 1 == var14) {
+                            this.drawTexturedModalRect(var19, var17, 79, 0, 9, 9);
+                        }
+                    }
+
+                    if(var16 * 2 + 1 < var13) {
+                        this.drawTexturedModalRect(var19, var17, 52, 0, 9, 9);
+                    }
+
+                    if(var16 * 2 + 1 == var13) {
+                        this.drawTexturedModalRect(var19, var17, 61, 0, 9, 9);
+                    }
+                }
+
+                if(this.mc.thePlayer.isInsideOfMaterial(Material.water)) {
+                    var16 = (int)Math.ceil((double)(this.mc.thePlayer.air - 2) * 10.0D / 300.0D);
+                    var17 = (int)Math.ceil((double)this.mc.thePlayer.air * 10.0D / 300.0D) - var16;
+
+                    for(var18 = 0; var18 < var16 + var17; ++var18) {
+                        if(var18 < var16) {
+                            this.drawTexturedModalRect(var6 / 2 - 91 + var18 * 8, var7 - 32 - 9, 16, 18, 9, 9);
+                        } else {
+                            this.drawTexturedModalRect(var6 / 2 - 91 + var18 * 8, var7 - 32 - 9, 25, 18, 9, 9);
+                        }
+                    }
+                }
+            }
+
+            GL11.glDisable(GL11.GL_BLEND);
+            GL11.glEnable(GL12.GL_RESCALE_NORMAL);
+            GL11.glPushMatrix();
+            GL11.glRotatef(180.0F, 1.0F, 0.0F, 0.0F);
+            RenderHelper.enableStandardItemLighting();
+            GL11.glPopMatrix();
+
+            for(var15 = 0; var15 < 9; ++var15) {
+                var16 = var6 / 2 - 90 + var15 * 20 + 2;
+                var17 = var7 - 16 - 3;
+                this.func_554_a(var15, var16, var17, var1);
+            }
+
+            RenderHelper.disableStandardItemLighting();
+            GL11.glDisable(GL12.GL_RESCALE_NORMAL);
+        }
+
         String var23;
-        if(Keyboard.isKeyDown(Keyboard.KEY_F3)) {
+
+        DebugDrawEvent debugDrawEvent = new DebugDrawEvent();
+        Ref.getEventManager().handleEvent(debugDrawEvent);
+
+        if(Keyboard.isKeyDown(Keyboard.KEY_F3) || debugDrawEvent.isCancelled()) {
             var8.drawStringWithShadow("Minecraft Beta 1.1_02 (" + this.mc.debug + ")", 2, 2, 16777215);
             var8.drawStringWithShadow(this.mc.func_6241_m(), 2, 12, 16777215);
             var8.drawStringWithShadow(this.mc.func_6262_n(), 2, 22, 16777215);
@@ -169,6 +189,9 @@
             var8.drawStringWithShadow("Minecraft Beta 1.1_02", 2, 2, 16777215);
         }
 
+        GuiDrawEvent guiDrawEvent = new GuiDrawEvent(var5);
+        Ref.getEventManager().handleEvent(guiDrawEvent);
+
         if(this.field_9419_j > 0) {
             float var25 = (float)this.field_9419_j - var1;
             var16 = (int)(var25 * 256.0F / 20.0F);
@@ -224,7 +247,14 @@
                     byte var32 = 2;
                     int var22 = -var17 * 9;
                     var23 = ((ChatLine)this.chatMessageList.get(var17)).message;
-                    this.drawRect(var32, var22 - 1, var32 + 320, var22 + 8, var20 / 2 << 24);
+
+                    ChatBackgroundDrawEvent chatBackgroundDrawEvent = new ChatBackgroundDrawEvent();
+                    Ref.getEventManager().handleEvent(chatBackgroundDrawEvent);
+
+                    if (!chatBackgroundDrawEvent.isCancelled()) {
+                        this.drawRect(var32, var22 - 1, var32 + 320, var22 + 8, var20 / 2 << 24);
+                    }
+
                     GL11.glEnable(GL11.GL_BLEND);
                     var8.drawStringWithShadow(var23, var32, var22, 16777215 + (var20 << 24));
                 }
