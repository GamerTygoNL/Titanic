--- net/minecraft/src/WorldGenLakes.java
+++ net/minecraft/src/WorldGenLakes.java
@@ -3,100 +3,104 @@
 import java.util.Random;
 
 public class WorldGenLakes extends WorldGenerator {
-    private int field_15235_a;
-
-    public WorldGenLakes(int var1) {
-        this.field_15235_a = var1;
+
+    private final int field_15235_a;
+
+    public WorldGenLakes(int i) {
+        field_15235_a = i;
     }
 
-    public boolean generate(World var1, Random var2, int var3, int var4, int var5) {
-        var3 -= 8;
-
-        for(var5 -= 8; var4 > 0 && var1.func_20084_d(var3, var4, var5); --var4) {
-        }
-
-        var4 -= 4;
-        boolean[] var6 = new boolean[2048];
-        int var7 = var2.nextInt(4) + 4;
-
-        int var8;
-        for(var8 = 0; var8 < var7; ++var8) {
-            double var9 = var2.nextDouble() * 6.0D + 3.0D;
-            double var11 = var2.nextDouble() * 4.0D + 2.0D;
-            double var13 = var2.nextDouble() * 6.0D + 3.0D;
-            double var15 = var2.nextDouble() * (16.0D - var9 - 2.0D) + 1.0D + var9 / 2.0D;
-            double var17 = var2.nextDouble() * (8.0D - var11 - 4.0D) + 2.0D + var11 / 2.0D;
-            double var19 = var2.nextDouble() * (16.0D - var13 - 2.0D) + 1.0D + var13 / 2.0D;
-
-            for(int var21 = 1; var21 < 15; ++var21) {
-                for(int var22 = 1; var22 < 15; ++var22) {
-                    for(int var23 = 1; var23 < 7; ++var23) {
-                        double var24 = ((double)var21 - var15) / (var9 / 2.0D);
-                        double var26 = ((double)var23 - var17) / (var11 / 2.0D);
-                        double var28 = ((double)var22 - var19) / (var13 / 2.0D);
-                        double var30 = var24 * var24 + var26 * var26 + var28 * var28;
-                        if(var30 < 1.0D) {
-                            var6[(var21 * 16 + var22) * 8 + var23] = true;
-                        }
-                    }
-                }
-            }
-        }
-
-        int var10;
-        int var32;
-        boolean var33;
-        for(var8 = 0; var8 < 16; ++var8) {
-            for(var32 = 0; var32 < 16; ++var32) {
-                for(var10 = 0; var10 < 8; ++var10) {
-                    var33 = !var6[(var8 * 16 + var32) * 8 + var10] && (var8 < 15 && var6[((var8 + 1) * 16 + var32) * 8 + var10] || var8 > 0 && var6[((var8 - 1) * 16 + var32) * 8 + var10] || var32 < 15 && var6[(var8 * 16 + var32 + 1) * 8 + var10] || var32 > 0 && var6[(var8 * 16 + (var32 - 1)) * 8 + var10] || var10 < 7 && var6[(var8 * 16 + var32) * 8 + var10 + 1] || var10 > 0 && var6[(var8 * 16 + var32) * 8 + (var10 - 1)]);
-                    if(var33) {
-                        Material var12 = var1.getBlockMaterial(var3 + var8, var4 + var10, var5 + var32);
-                        if(var10 >= 4 && var12.getIsLiquid()) {
-                            return false;
-                        }
-
-                        if(var10 < 4 && !var12.func_878_a() && var1.getBlockId(var3 + var8, var4 + var10, var5 + var32) != this.field_15235_a) {
-                            return false;
-                        }
-                    }
-                }
-            }
-        }
-
-        for(var8 = 0; var8 < 16; ++var8) {
-            for(var32 = 0; var32 < 16; ++var32) {
-                for(var10 = 0; var10 < 8; ++var10) {
-                    if(var6[(var8 * 16 + var32) * 8 + var10]) {
-                        var1.setBlockWithNotify(var3 + var8, var4 + var10, var5 + var32, var10 >= 4 ? 0 : this.field_15235_a);
-                    }
-                }
-            }
-        }
-
-        for(var8 = 0; var8 < 16; ++var8) {
-            for(var32 = 0; var32 < 16; ++var32) {
-                for(var10 = 4; var10 < 8; ++var10) {
-                    if(var6[(var8 * 16 + var32) * 8 + var10] && var1.getBlockId(var3 + var8, var4 + var10 - 1, var5 + var32) == Block.dirt.blockID && var1.getSavedLightValue(EnumSkyBlock.Sky, var3 + var8, var4 + var10, var5 + var32) > 0) {
-                        var1.setBlockWithNotify(var3 + var8, var4 + var10 - 1, var5 + var32, Block.grass.blockID);
-                    }
-                }
-            }
-        }
-
-        if(Block.blocksList[this.field_15235_a].blockMaterial == Material.lava) {
-            for(var8 = 0; var8 < 16; ++var8) {
-                for(var32 = 0; var32 < 16; ++var32) {
-                    for(var10 = 0; var10 < 8; ++var10) {
-                        var33 = !var6[(var8 * 16 + var32) * 8 + var10] && (var8 < 15 && var6[((var8 + 1) * 16 + var32) * 8 + var10] || var8 > 0 && var6[((var8 - 1) * 16 + var32) * 8 + var10] || var32 < 15 && var6[(var8 * 16 + var32 + 1) * 8 + var10] || var32 > 0 && var6[(var8 * 16 + (var32 - 1)) * 8 + var10] || var10 < 7 && var6[(var8 * 16 + var32) * 8 + var10 + 1] || var10 > 0 && var6[(var8 * 16 + var32) * 8 + (var10 - 1)]);
-                        if(var33 && (var10 < 4 || var2.nextInt(2) != 0) && var1.getBlockMaterial(var3 + var8, var4 + var10, var5 + var32).func_878_a()) {
-                            var1.setBlockWithNotify(var3 + var8, var4 + var10, var5 + var32, Block.stone.blockID);
-                        }
-                    }
-                }
-            }
-        }
-
+    public boolean generate(World world, Random random, int i, int j, int k) {
+        i -= 8;
+        for (k -= 8; j > 0 && world.func_20084_d(i, j, k); j--) {
+        }
+        j -= 4;
+        boolean[] aflag = new boolean[2048];
+        int l = random.nextInt(4) + 4;
+        for (int i1 = 0; i1 < l; i1++) {
+            double d = random.nextDouble() * 6D + 3D;
+            double d1 = random.nextDouble() * 4D + 2D;
+            double d2 = random.nextDouble() * 6D + 3D;
+            double d3 = random.nextDouble() * (16D - d - 2D) + 1.0D + d / 2D;
+            double d4 = random.nextDouble() * (8D - d1 - 4D) + 2D + d1 / 2D;
+            double d5 = random.nextDouble() * (16D - d2 - 2D) + 1.0D + d2 / 2D;
+            for (int j4 = 1; j4 < 15; j4++) {
+                for (int k4 = 1; k4 < 15; k4++) {
+                    for (int l4 = 1; l4 < 7; l4++) {
+                        double d6 = ((double) j4 - d3) / (d / 2D);
+                        double d7 = ((double) l4 - d4) / (d1 / 2D);
+                        double d8 = ((double) k4 - d5) / (d2 / 2D);
+                        double d9 = d6 * d6 + d7 * d7 + d8 * d8;
+                        if (d9 < 1.0D) {
+                            aflag[(j4 * 16 + k4) * 8 + l4] = true;
+                        }
+                    }
+
+                }
+
+            }
+
+        }
+
+        for (int j1 = 0; j1 < 16; j1++) {
+            for (int j2 = 0; j2 < 16; j2++) {
+                for (int j3 = 0; j3 < 8; j3++) {
+                    boolean flag = !aflag[(j1 * 16 + j2) * 8 + j3] && (j1 < 15 && aflag[((j1 + 1) * 16 + j2) * 8 + j3] || j1 > 0 && aflag[((j1 - 1) * 16 + j2) * 8 + j3] || j2 < 15 && aflag[(j1 * 16 + (j2 + 1)) * 8 + j3] || j2 > 0 && aflag[(j1 * 16 + (j2 - 1)) * 8 + j3] || j3 < 7 && aflag[(j1 * 16 + j2) * 8 + (j3 + 1)] || j3 > 0 && aflag[(j1 * 16 + j2) * 8 + (j3 - 1)]);
+                    if (!flag) {
+                        continue;
+                    }
+                    Material material = world.getBlockMaterial(i + j1, j + j3, k + j2);
+                    if (j3 >= 4 && material.getIsLiquid()) {
+                        return false;
+                    }
+                    if (j3 < 4 && !material.func_878_a() && world.getBlockId(i + j1, j + j3, k + j2) != field_15235_a) {
+                        return false;
+                    }
+                }
+
+            }
+
+        }
+
+        for (int k1 = 0; k1 < 16; k1++) {
+            for (int k2 = 0; k2 < 16; k2++) {
+                for (int k3 = 0; k3 < 8; k3++) {
+                    if (aflag[(k1 * 16 + k2) * 8 + k3]) {
+                        world.setBlockWithNotify(i + k1, j + k3, k + k2, k3 < 4 ? field_15235_a : 0);
+                    }
+                }
+
+            }
+
+        }
+
+        for (int l1 = 0; l1 < 16; l1++) {
+            for (int l2 = 0; l2 < 16; l2++) {
+                for (int l3 = 4; l3 < 8; l3++) {
+                    if (aflag[(l1 * 16 + l2) * 8 + l3] && world.getBlockId(i + l1, (j + l3) - 1, k + l2) == Block.dirt.blockID && world.getSavedLightValue(EnumSkyBlock.Sky, i + l1, j + l3, k + l2) > 0) {
+                        world.setBlockWithNotify(i + l1, (j + l3) - 1, k + l2, Block.grass.blockID);
+                    }
+                }
+
+            }
+
+        }
+
+        if (Block.blocksList[field_15235_a].blockMaterial == Material.lava) {
+            for (int i2 = 0; i2 < 16; i2++) {
+                for (int i3 = 0; i3 < 16; i3++) {
+                    for (int i4 = 0; i4 < 8; i4++) {
+                        boolean flag1 = !aflag[(i2 * 16 + i3) * 8 + i4] && (i2 < 15 && aflag[((i2 + 1) * 16 + i3) * 8 + i4] || i2 > 0 && aflag[((i2 - 1) * 16 + i3) * 8 + i4] || i3 < 15 && aflag[(i2 * 16 + (i3 + 1)) * 8 + i4] || i3 > 0 && aflag[(i2 * 16 + (i3 - 1)) * 8 + i4] || i4 < 7 && aflag[(i2 * 16 + i3) * 8 + (i4 + 1)] || i4 > 0 && aflag[(i2 * 16 + i3) * 8 + (i4 - 1)]);
+                        if (flag1 && (i4 < 4 || random.nextInt(2) != 0) && world.getBlockMaterial(i + i2, j + i4, k + i3).func_878_a()) {
+                            world.setBlockWithNotify(i + i2, j + i4, k + i3, Block.stone.blockID);
+                        }
+                    }
+
+                }
+
+            }
+
+        }
         return true;
     }
 }
