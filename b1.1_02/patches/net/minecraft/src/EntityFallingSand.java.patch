--- net/minecraft/src/EntityFallingSand.java
+++ net/minecraft/src/EntityFallingSand.java
@@ -1,75 +1,77 @@
 package net.minecraft.src;
 
 public class EntityFallingSand extends Entity {
+
     public int entityID;
-    public int fallTime = 0;
+    public int fallTime;
 
-    public EntityFallingSand(World var1) {
-        super(var1);
+    public EntityFallingSand(World world) {
+        super(world);
+        fallTime = 0;
     }
 
-    public EntityFallingSand(World var1, double var2, double var4, double var6, int var8) {
-        super(var1);
-        this.entityID = var8;
-        this.preventEntitySpawning = true;
-        this.setSize(0.98F, 0.98F);
-        this.yOffset = this.height / 2.0F;
-        this.setPosition(var2, var4, var6);
-        this.motionX = 0.0D;
-        this.motionY = 0.0D;
-        this.motionZ = 0.0D;
-        this.entityWalks = false;
-        this.prevPosX = var2;
-        this.prevPosY = var4;
-        this.prevPosZ = var6;
+    public EntityFallingSand(World world, double d, double d1, double d2,
+                             int i) {
+        super(world);
+        fallTime = 0;
+        entityID = i;
+        preventEntitySpawning = true;
+        setSize(0.98F, 0.98F);
+        yOffset = height / 2.0F;
+        setPosition(d, d1, d2);
+        motionX = 0.0D;
+        motionY = 0.0D;
+        motionZ = 0.0D;
+        entityWalks = false;
+        prevPosX = d;
+        prevPosY = d1;
+        prevPosZ = d2;
     }
 
     public boolean canBeCollidedWith() {
-        return !this.isDead;
+        return !isDead;
     }
 
     public void onUpdate() {
-        if(this.entityID == 0) {
-            this.setEntityDead();
-        } else {
-            this.prevPosX = this.posX;
-            this.prevPosY = this.posY;
-            this.prevPosZ = this.posZ;
-            ++this.fallTime;
-            this.motionY -= (double)0.04F;
-            this.moveEntity(this.motionX, this.motionY, this.motionZ);
-            this.motionX *= (double)0.98F;
-            this.motionY *= (double)0.98F;
-            this.motionZ *= (double)0.98F;
-            int var1 = MathHelper.floor_double(this.posX);
-            int var2 = MathHelper.floor_double(this.posY);
-            int var3 = MathHelper.floor_double(this.posZ);
-            if(this.worldObj.getBlockId(var1, var2, var3) == this.entityID) {
-                this.worldObj.setBlockWithNotify(var1, var2, var3, 0);
-            }
-
-            if(this.onGround) {
-                this.motionX *= (double)0.7F;
-                this.motionZ *= (double)0.7F;
-                this.motionY *= -0.5D;
-                this.setEntityDead();
-                if(!this.worldObj.canBlockBePlacedAt(this.entityID, var1, var2, var3, true) || !this.worldObj.setBlockWithNotify(var1, var2, var3, this.entityID)) {
-                    this.dropItem(this.entityID, 1);
-                }
-            } else if(this.fallTime > 100) {
-                this.dropItem(this.entityID, 1);
-                this.setEntityDead();
-            }
-
-        }
-    }
-
-    protected void writeEntityToNBT(NBTTagCompound var1) {
-        var1.setByte("Tile", (byte)this.entityID);
-    }
-
-    protected void readEntityFromNBT(NBTTagCompound var1) {
-        this.entityID = var1.getByte("Tile") & 255;
+        if (entityID == 0) {
+            setEntityDead();
+            return;
+        }
+        prevPosX = posX;
+        prevPosY = posY;
+        prevPosZ = posZ;
+        fallTime++;
+        motionY -= 0.039999999105930328D;
+        moveEntity(motionX, motionY, motionZ);
+        motionX *= 0.98000001907348633D;
+        motionY *= 0.98000001907348633D;
+        motionZ *= 0.98000001907348633D;
+        int i = MathHelper.floor_double(posX);
+        int j = MathHelper.floor_double(posY);
+        int k = MathHelper.floor_double(posZ);
+        if (worldObj.getBlockId(i, j, k) == entityID) {
+            worldObj.setBlockWithNotify(i, j, k, 0);
+        }
+        if (onGround) {
+            motionX *= 0.69999998807907104D;
+            motionZ *= 0.69999998807907104D;
+            motionY *= -0.5D;
+            setEntityDead();
+            if (!worldObj.canBlockBePlacedAt(entityID, i, j, k, true) || !worldObj.setBlockWithNotify(i, j, k, entityID)) {
+                dropItem(entityID, 1);
+            }
+        } else if (fallTime > 100) {
+            dropItem(entityID, 1);
+            setEntityDead();
+        }
+    }
+
+    protected void writeEntityToNBT(NBTTagCompound nbttagcompound) {
+        nbttagcompound.setByte("Tile", (byte) entityID);
+    }
+
+    protected void readEntityFromNBT(NBTTagCompound nbttagcompound) {
+        entityID = nbttagcompound.getByte("Tile") & 0xff;
     }
 
     public float func_392_h_() {
@@ -77,6 +79,6 @@
     }
 
     public World func_465_i() {
-        return this.worldObj;
+        return worldObj;
     }
 }
