--- net/minecraft/src/GuiTexturePacks.java
+++ net/minecraft/src/GuiTexturePacks.java
@@ -1,212 +1,211 @@
 package net.minecraft.src;
 
-import java.io.File;
-import java.util.List;
 import org.lwjgl.Sys;
 import org.lwjgl.input.Mouse;
 import org.lwjgl.opengl.GL11;
 
+import java.io.File;
+import java.util.List;
+
 public class GuiTexturePacks extends GuiScreen {
+
     protected GuiScreen field_6461_a;
-    private int field_6460_h = 0;
-    private int field_6459_i = 32;
-    private int field_6458_j = this.height - 55 + 4;
-    private int field_6457_l = 0;
-    private int field_6456_m = this.width;
-    private int field_6455_n = -2;
-    private int field_6454_o = -1;
-    private String field_6453_p = "";
-
-    public GuiTexturePacks(GuiScreen var1) {
-        this.field_6461_a = var1;
+    private int field_6460_h;
+    private int field_6459_i;
+    private int field_6458_j;
+    private int field_6457_l;
+    private int field_6456_m;
+    private int field_6455_n;
+    private int field_6454_o;
+    private String field_6453_p;
+    public GuiTexturePacks(GuiScreen guiscreen) {
+        field_6460_h = 0;
+        field_6459_i = 32;
+        field_6458_j = (height - 55) + 4;
+        field_6457_l = 0;
+        field_6456_m = width;
+        field_6455_n = -2;
+        field_6454_o = -1;
+        field_6453_p = "";
+        field_6461_a = guiscreen;
     }
 
     public void initGui() {
-        StringTranslate var1 = StringTranslate.func_20162_a();
-        this.controlList.add(new GuiSmallButton(5, this.width / 2 - 154, this.height - 48, var1.func_20163_a("texturePack.openFolder")));
-        this.controlList.add(new GuiSmallButton(6, this.width / 2 + 4, this.height - 48, var1.func_20163_a("gui.done")));
-        this.mc.texturePackList.func_6532_a();
-        this.field_6453_p = (new File(this.mc.mcDataDir, "texturepacks")).getAbsolutePath();
-        this.field_6459_i = 32;
-        this.field_6458_j = this.height - 58 + 4;
-        this.field_6457_l = 0;
-        this.field_6456_m = this.width;
-    }
-
-    protected void actionPerformed(GuiButton var1) {
-        if(var1.enabled) {
-            if(var1.id == 5) {
-                Sys.openURL("file://" + this.field_6453_p);
-            }
-
-            if(var1.id == 6) {
-                this.mc.renderEngine.refreshTextures();
-                this.mc.displayGuiScreen(this.field_6461_a);
-            }
-
-        }
-    }
-
-    protected void mouseClicked(int var1, int var2, int var3) {
-        super.mouseClicked(var1, var2, var3);
-    }
-
-    protected void mouseMovedOrUp(int var1, int var2, int var3) {
-        super.mouseMovedOrUp(var1, var2, var3);
-    }
-
-    public void drawScreen(int var1, int var2, float var3) {
-        this.drawDefaultBackground();
-        if(this.field_6454_o <= 0) {
-            this.mc.texturePackList.func_6532_a();
-            this.field_6454_o += 20;
-        }
-
-        List var4 = this.mc.texturePackList.availableTexturePacks();
-        int var5;
-        if(Mouse.isButtonDown(0)) {
-            if(this.field_6455_n == -1) {
-                if(var2 >= this.field_6459_i && var2 <= this.field_6458_j) {
-                    var5 = this.width / 2 - 110;
-                    int var6 = this.width / 2 + 110;
-                    int var7 = (var2 - this.field_6459_i + this.field_6460_h - 2) / 36;
-                    if(var1 >= var5 && var1 <= var6 && var7 >= 0 && var7 < var4.size() && this.mc.texturePackList.setTexturePack((TexturePackBase)var4.get(var7))) {
-                        this.mc.renderEngine.refreshTextures();
+        StringTranslate stringtranslate = StringTranslate.func_20162_a();
+        controlList.add(new GuiSmallButton(5, width / 2 - 154, height - 48, stringtranslate.func_20163_a("texturePack.openFolder")));
+        controlList.add(new GuiSmallButton(6, width / 2 + 4, height - 48, stringtranslate.func_20163_a("gui.done")));
+        mc.texturePackList.func_6532_a();
+        field_6453_p = (new File(mc.mcDataDir, "texturepacks")).getAbsolutePath();
+        field_6459_i = 32;
+        field_6458_j = (height - 58) + 4;
+        field_6457_l = 0;
+        field_6456_m = width;
+    }
+
+    protected void actionPerformed(GuiButton guibutton) {
+        if (!guibutton.enabled) {
+            return;
+        }
+        if (guibutton.id == 5) {
+            Sys.openURL("file://" + field_6453_p);
+        }
+        if (guibutton.id == 6) {
+            mc.renderEngine.refreshTextures();
+            mc.displayGuiScreen(field_6461_a);
+        }
+    }
+
+    protected void mouseClicked(int i, int j, int k) {
+        super.mouseClicked(i, j, k);
+    }
+
+    protected void mouseMovedOrUp(int i, int j, int k) {
+        super.mouseMovedOrUp(i, j, k);
+    }
+
+    public void drawScreen(int i, int j, float f) {
+        drawDefaultBackground();
+        if (field_6454_o <= 0) {
+            mc.texturePackList.func_6532_a();
+            field_6454_o += 20;
+        }
+        List list = mc.texturePackList.availableTexturePacks();
+        if (Mouse.isButtonDown(0)) {
+            if (field_6455_n == -1) {
+                if (j >= field_6459_i && j <= field_6458_j) {
+                    int k = width / 2 - 110;
+                    int i1 = width / 2 + 110;
+                    int j1 = (((j - field_6459_i) + field_6460_h) - 2) / 36;
+                    if (i >= k && i <= i1 && j1 >= 0 && j1 < list.size() && mc.texturePackList.setTexturePack((TexturePackBase) list.get(j1))) {
+                        mc.renderEngine.refreshTextures();
                     }
-
-                    this.field_6455_n = var2;
+                    field_6455_n = j;
                 } else {
-                    this.field_6455_n = -2;
+                    field_6455_n = -2;
                 }
-            } else if(this.field_6455_n >= 0) {
-                this.field_6460_h -= var2 - this.field_6455_n;
-                this.field_6455_n = var2;
+            } else if (field_6455_n >= 0) {
+                field_6460_h -= j - field_6455_n;
+                field_6455_n = j;
             }
         } else {
-            if(this.field_6455_n >= 0 && this.field_6455_n == var2) {
+            if (field_6455_n >= 0) {
+                if (field_6455_n != j) ;
             }
-
-            this.field_6455_n = -1;
-        }
-
-        var5 = var4.size() * 36 - (this.field_6458_j - this.field_6459_i - 4);
-        if(var5 < 0) {
-            var5 /= 2;
-        }
-
-        if(this.field_6460_h < 0) {
-            this.field_6460_h = 0;
-        }
-
-        if(this.field_6460_h > var5) {
-            this.field_6460_h = var5;
-        }
-
-        GL11.glDisable(GL11.GL_LIGHTING);
-        GL11.glDisable(GL11.GL_FOG);
-        Tessellator var16 = Tessellator.instance;
-        GL11.glBindTexture(GL11.GL_TEXTURE_2D, this.mc.renderEngine.getTexture("/gui/background.png"));
+            field_6455_n = -1;
+        }
+        int l = list.size() * 36 - (field_6458_j - field_6459_i - 4);
+        if (l < 0) {
+            l /= 2;
+        }
+        if (field_6460_h < 0) {
+            field_6460_h = 0;
+        }
+        if (field_6460_h > l) {
+            field_6460_h = l;
+        }
+        GL11.glDisable(2896 /*GL_LIGHTING*/);
+        GL11.glDisable(2912 /*GL_FOG*/);
+        Tessellator tessellator = Tessellator.instance;
+        GL11.glBindTexture(3553 /*GL_TEXTURE_2D*/, mc.renderEngine.getTexture("/gui/background.png"));
         GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
-        float var17 = 32.0F;
-        var16.startDrawingQuads();
-        var16.setColorOpaque_I(2105376);
-        var16.addVertexWithUV((double)this.field_6457_l, (double)this.field_6458_j, 0.0D, (double)((float)this.field_6457_l / var17), (double)((float)(this.field_6458_j + this.field_6460_h) / var17));
-        var16.addVertexWithUV((double)this.field_6456_m, (double)this.field_6458_j, 0.0D, (double)((float)this.field_6456_m / var17), (double)((float)(this.field_6458_j + this.field_6460_h) / var17));
-        var16.addVertexWithUV((double)this.field_6456_m, (double)this.field_6459_i, 0.0D, (double)((float)this.field_6456_m / var17), (double)((float)(this.field_6459_i + this.field_6460_h) / var17));
-        var16.addVertexWithUV((double)this.field_6457_l, (double)this.field_6459_i, 0.0D, (double)((float)this.field_6457_l / var17), (double)((float)(this.field_6459_i + this.field_6460_h) / var17));
-        var16.draw();
-
-        for(int var8 = 0; var8 < var4.size(); ++var8) {
-            TexturePackBase var9 = (TexturePackBase)var4.get(var8);
-            int var10 = this.width / 2 - 92 - 16;
-            int var11 = 36 + var8 * 36 - this.field_6460_h;
-            byte var12 = 32;
-            byte var13 = 32;
-            if(var9 == this.mc.texturePackList.selectedTexturePack) {
-                int var14 = this.width / 2 - 110;
-                int var15 = this.width / 2 + 110;
+        float f1 = 32F;
+        tessellator.startDrawingQuads();
+        tessellator.setColorOpaque_I(0x202020);
+        tessellator.addVertexWithUV(field_6457_l, field_6458_j, 0.0D, (float) field_6457_l / f1, (float) (field_6458_j + field_6460_h) / f1);
+        tessellator.addVertexWithUV(field_6456_m, field_6458_j, 0.0D, (float) field_6456_m / f1, (float) (field_6458_j + field_6460_h) / f1);
+        tessellator.addVertexWithUV(field_6456_m, field_6459_i, 0.0D, (float) field_6456_m / f1, (float) (field_6459_i + field_6460_h) / f1);
+        tessellator.addVertexWithUV(field_6457_l, field_6459_i, 0.0D, (float) field_6457_l / f1, (float) (field_6459_i + field_6460_h) / f1);
+        tessellator.draw();
+        for (int k1 = 0; k1 < list.size(); k1++) {
+            TexturePackBase texturepackbase = (TexturePackBase) list.get(k1);
+            int l1 = width / 2 - 92 - 16;
+            int i2 = (36 + k1 * 36) - field_6460_h;
+            byte byte1 = 32;
+            byte byte2 = 32;
+            if (texturepackbase == mc.texturePackList.selectedTexturePack) {
+                int j2 = width / 2 - 110;
+                int k2 = width / 2 + 110;
                 GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
-                GL11.glDisable(GL11.GL_TEXTURE_2D);
-                var16.startDrawingQuads();
-                var16.setColorOpaque_I(8421504);
-                var16.addVertexWithUV((double)var14, (double)(var11 + var12 + 2), 0.0D, 0.0D, 1.0D);
-                var16.addVertexWithUV((double)var15, (double)(var11 + var12 + 2), 0.0D, 1.0D, 1.0D);
-                var16.addVertexWithUV((double)var15, (double)(var11 - 2), 0.0D, 1.0D, 0.0D);
-                var16.addVertexWithUV((double)var14, (double)(var11 - 2), 0.0D, 0.0D, 0.0D);
-                var16.setColorOpaque_I(0);
-                var16.addVertexWithUV((double)(var14 + 1), (double)(var11 + var12 + 1), 0.0D, 0.0D, 1.0D);
-                var16.addVertexWithUV((double)(var15 - 1), (double)(var11 + var12 + 1), 0.0D, 1.0D, 1.0D);
-                var16.addVertexWithUV((double)(var15 - 1), (double)(var11 - 1), 0.0D, 1.0D, 0.0D);
-                var16.addVertexWithUV((double)(var14 + 1), (double)(var11 - 1), 0.0D, 0.0D, 0.0D);
-                var16.draw();
-                GL11.glEnable(GL11.GL_TEXTURE_2D);
+                GL11.glDisable(3553 /*GL_TEXTURE_2D*/);
+                tessellator.startDrawingQuads();
+                tessellator.setColorOpaque_I(0x808080);
+                tessellator.addVertexWithUV(j2, i2 + byte1 + 2, 0.0D, 0.0D, 1.0D);
+                tessellator.addVertexWithUV(k2, i2 + byte1 + 2, 0.0D, 1.0D, 1.0D);
+                tessellator.addVertexWithUV(k2, i2 - 2, 0.0D, 1.0D, 0.0D);
+                tessellator.addVertexWithUV(j2, i2 - 2, 0.0D, 0.0D, 0.0D);
+                tessellator.setColorOpaque_I(0);
+                tessellator.addVertexWithUV(j2 + 1, i2 + byte1 + 1, 0.0D, 0.0D, 1.0D);
+                tessellator.addVertexWithUV(k2 - 1, i2 + byte1 + 1, 0.0D, 1.0D, 1.0D);
+                tessellator.addVertexWithUV(k2 - 1, i2 - 1, 0.0D, 1.0D, 0.0D);
+                tessellator.addVertexWithUV(j2 + 1, i2 - 1, 0.0D, 0.0D, 0.0D);
+                tessellator.draw();
+                GL11.glEnable(3553 /*GL_TEXTURE_2D*/);
             }
-
-            var9.func_6483_c(this.mc);
+            texturepackbase.func_6483_c(mc);
             GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
-            var16.startDrawingQuads();
-            var16.setColorOpaque_I(16777215);
-            var16.addVertexWithUV((double)var10, (double)(var11 + var12), 0.0D, 0.0D, 1.0D);
-            var16.addVertexWithUV((double)(var10 + var13), (double)(var11 + var12), 0.0D, 1.0D, 1.0D);
-            var16.addVertexWithUV((double)(var10 + var13), (double)var11, 0.0D, 1.0D, 0.0D);
-            var16.addVertexWithUV((double)var10, (double)var11, 0.0D, 0.0D, 0.0D);
-            var16.draw();
-            this.drawString(this.fontRenderer, var9.texturePackFileName, var10 + var13 + 2, var11 + 1, 16777215);
-            this.drawString(this.fontRenderer, var9.firstDescriptionLine, var10 + var13 + 2, var11 + 12, 8421504);
-            this.drawString(this.fontRenderer, var9.secondDescriptionLine, var10 + var13 + 2, var11 + 12 + 10, 8421504);
+            tessellator.startDrawingQuads();
+            tessellator.setColorOpaque_I(0xffffff);
+            tessellator.addVertexWithUV(l1, i2 + byte1, 0.0D, 0.0D, 1.0D);
+            tessellator.addVertexWithUV(l1 + byte2, i2 + byte1, 0.0D, 1.0D, 1.0D);
+            tessellator.addVertexWithUV(l1 + byte2, i2, 0.0D, 1.0D, 0.0D);
+            tessellator.addVertexWithUV(l1, i2, 0.0D, 0.0D, 0.0D);
+            tessellator.draw();
+            drawString(fontRenderer, texturepackbase.texturePackFileName, l1 + byte2 + 2, i2 + 1, 0xffffff);
+            drawString(fontRenderer, texturepackbase.firstDescriptionLine, l1 + byte2 + 2, i2 + 12, 0x808080);
+            drawString(fontRenderer, texturepackbase.secondDescriptionLine, l1 + byte2 + 2, i2 + 12 + 10, 0x808080);
         }
 
-        byte var18 = 4;
-        this.func_6452_a(0, this.field_6459_i, 255, 255);
-        this.func_6452_a(this.field_6458_j, this.height, 255, 255);
-        GL11.glEnable(GL11.GL_BLEND);
-        GL11.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);
-        GL11.glDisable(GL11.GL_ALPHA_TEST);
-        GL11.glShadeModel(GL11.GL_SMOOTH);
-        GL11.glDisable(GL11.GL_TEXTURE_2D);
-        var16.startDrawingQuads();
-        var16.setColorRGBA_I(0, 0);
-        var16.addVertexWithUV((double)this.field_6457_l, (double)(this.field_6459_i + var18), 0.0D, 0.0D, 1.0D);
-        var16.addVertexWithUV((double)this.field_6456_m, (double)(this.field_6459_i + var18), 0.0D, 1.0D, 1.0D);
-        var16.setColorRGBA_I(0, 255);
-        var16.addVertexWithUV((double)this.field_6456_m, (double)this.field_6459_i, 0.0D, 1.0D, 0.0D);
-        var16.addVertexWithUV((double)this.field_6457_l, (double)this.field_6459_i, 0.0D, 0.0D, 0.0D);
-        var16.draw();
-        var16.startDrawingQuads();
-        var16.setColorRGBA_I(0, 255);
-        var16.addVertexWithUV((double)this.field_6457_l, (double)this.field_6458_j, 0.0D, 0.0D, 1.0D);
-        var16.addVertexWithUV((double)this.field_6456_m, (double)this.field_6458_j, 0.0D, 1.0D, 1.0D);
-        var16.setColorRGBA_I(0, 0);
-        var16.addVertexWithUV((double)this.field_6456_m, (double)(this.field_6458_j - var18), 0.0D, 1.0D, 0.0D);
-        var16.addVertexWithUV((double)this.field_6457_l, (double)(this.field_6458_j - var18), 0.0D, 0.0D, 0.0D);
-        var16.draw();
-        GL11.glEnable(GL11.GL_TEXTURE_2D);
-        GL11.glShadeModel(GL11.GL_FLAT);
-        GL11.glEnable(GL11.GL_ALPHA_TEST);
-        GL11.glDisable(GL11.GL_BLEND);
-        StringTranslate var19 = StringTranslate.func_20162_a();
-        this.drawCenteredString(this.fontRenderer, var19.func_20163_a("texturePack.title"), this.width / 2, 16, 16777215);
-        this.drawCenteredString(this.fontRenderer, var19.func_20163_a("texturePack.folderInfo"), this.width / 2 - 77, this.height - 26, 8421504);
-        super.drawScreen(var1, var2, var3);
+        byte byte0 = 4;
+        func_6452_a(0, field_6459_i, 255, 255);
+        func_6452_a(field_6458_j, height, 255, 255);
+        GL11.glEnable(3042 /*GL_BLEND*/);
+        GL11.glBlendFunc(770, 771);
+        GL11.glDisable(3008 /*GL_ALPHA_TEST*/);
+        GL11.glShadeModel(7425 /*GL_SMOOTH*/);
+        GL11.glDisable(3553 /*GL_TEXTURE_2D*/);
+        tessellator.startDrawingQuads();
+        tessellator.setColorRGBA_I(0, 0);
+        tessellator.addVertexWithUV(field_6457_l, field_6459_i + byte0, 0.0D, 0.0D, 1.0D);
+        tessellator.addVertexWithUV(field_6456_m, field_6459_i + byte0, 0.0D, 1.0D, 1.0D);
+        tessellator.setColorRGBA_I(0, 255);
+        tessellator.addVertexWithUV(field_6456_m, field_6459_i, 0.0D, 1.0D, 0.0D);
+        tessellator.addVertexWithUV(field_6457_l, field_6459_i, 0.0D, 0.0D, 0.0D);
+        tessellator.draw();
+        tessellator.startDrawingQuads();
+        tessellator.setColorRGBA_I(0, 255);
+        tessellator.addVertexWithUV(field_6457_l, field_6458_j, 0.0D, 0.0D, 1.0D);
+        tessellator.addVertexWithUV(field_6456_m, field_6458_j, 0.0D, 1.0D, 1.0D);
+        tessellator.setColorRGBA_I(0, 0);
+        tessellator.addVertexWithUV(field_6456_m, field_6458_j - byte0, 0.0D, 1.0D, 0.0D);
+        tessellator.addVertexWithUV(field_6457_l, field_6458_j - byte0, 0.0D, 0.0D, 0.0D);
+        tessellator.draw();
+        GL11.glEnable(3553 /*GL_TEXTURE_2D*/);
+        GL11.glShadeModel(7424 /*GL_FLAT*/);
+        GL11.glEnable(3008 /*GL_ALPHA_TEST*/);
+        GL11.glDisable(3042 /*GL_BLEND*/);
+        StringTranslate stringtranslate = StringTranslate.func_20162_a();
+        drawCenteredString(fontRenderer, stringtranslate.func_20163_a("texturePack.title"), width / 2, 16, 0xffffff);
+        drawCenteredString(fontRenderer, stringtranslate.func_20163_a("texturePack.folderInfo"), width / 2 - 77, height - 26, 0x808080);
+        super.drawScreen(i, j, f);
     }
 
     public void updateScreen() {
         super.updateScreen();
-        --this.field_6454_o;
+        field_6454_o--;
     }
 
-    public void func_6452_a(int var1, int var2, int var3, int var4) {
-        Tessellator var5 = Tessellator.instance;
-        GL11.glBindTexture(GL11.GL_TEXTURE_2D, this.mc.renderEngine.getTexture("/gui/background.png"));
+    public void func_6452_a(int i, int j, int k, int l) {
+        Tessellator tessellator = Tessellator.instance;
+        GL11.glBindTexture(3553 /*GL_TEXTURE_2D*/, mc.renderEngine.getTexture("/gui/background.png"));
         GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
-        float var6 = 32.0F;
-        var5.startDrawingQuads();
-        var5.setColorRGBA_I(4210752, var4);
-        var5.addVertexWithUV(0.0D, (double)var2, 0.0D, 0.0D, (double)((float)var2 / var6));
-        var5.addVertexWithUV((double)this.width, (double)var2, 0.0D, (double)((float)this.width / var6), (double)((float)var2 / var6));
-        var5.setColorRGBA_I(4210752, var3);
-        var5.addVertexWithUV((double)this.width, (double)var1, 0.0D, (double)((float)this.width / var6), (double)((float)var1 / var6));
-        var5.addVertexWithUV(0.0D, (double)var1, 0.0D, 0.0D, (double)((float)var1 / var6));
-        var5.draw();
+        float f = 32F;
+        tessellator.startDrawingQuads();
+        tessellator.setColorRGBA_I(0x404040, l);
+        tessellator.addVertexWithUV(0.0D, j, 0.0D, 0.0D, (float) j / f);
+        tessellator.addVertexWithUV(width, j, 0.0D, (float) width / f, (float) j / f);
+        tessellator.setColorRGBA_I(0x404040, k);
+        tessellator.addVertexWithUV(width, i, 0.0D, (float) width / f, (float) i / f);
+        tessellator.addVertexWithUV(0.0D, i, 0.0D, 0.0D, (float) i / f);
+        tessellator.draw();
     }
 }
