--- net/minecraft/src/InventoryCrafting.java
+++ net/minecraft/src/InventoryCrafting.java
@@ -1,53 +1,52 @@
 package net.minecraft.src;
 
-public class InventoryCrafting implements IInventory {
-    private ItemStack[] stackList;
+public class InventoryCrafting
+        implements IInventory {
+
+    private ItemStack stackList[];
     private int nbrSlots;
     private CraftingInventoryCB eventHandler;
 
-    public InventoryCrafting(CraftingInventoryCB var1, int var2, int var3) {
-        this.nbrSlots = var2 * var3;
-        this.stackList = new ItemStack[this.nbrSlots];
-        this.eventHandler = var1;
+    public InventoryCrafting(CraftingInventoryCB craftinginventorycb, int i, int j) {
+        nbrSlots = i * j;
+        stackList = new ItemStack[nbrSlots];
+        eventHandler = craftinginventorycb;
     }
 
     public int getSizeInventory() {
-        return this.nbrSlots;
+        return nbrSlots;
     }
 
-    public ItemStack getStackInSlot(int var1) {
-        return this.stackList[var1];
+    public ItemStack getStackInSlot(int i) {
+        return stackList[i];
     }
 
     public String getInvName() {
         return "Crafting";
     }
 
-    public ItemStack decrStackSize(int var1, int var2) {
-        if(this.stackList[var1] != null) {
-            ItemStack var3;
-            if(this.stackList[var1].stackSize <= var2) {
-                var3 = this.stackList[var1];
-                this.stackList[var1] = null;
-                this.eventHandler.onCraftMatrixChanged(this);
-                return var3;
-            } else {
-                var3 = this.stackList[var1].splitStack(var2);
-                if(this.stackList[var1].stackSize == 0) {
-                    this.stackList[var1] = null;
-                }
-
-                this.eventHandler.onCraftMatrixChanged(this);
-                return var3;
-            }
+    public ItemStack decrStackSize(int i, int j) {
+        if (stackList[i] != null) {
+            if (stackList[i].stackSize <= j) {
+                ItemStack itemstack = stackList[i];
+                stackList[i] = null;
+                eventHandler.onCraftMatrixChanged(this);
+                return itemstack;
+            }
+            ItemStack itemstack1 = stackList[i].splitStack(j);
+            if (stackList[i].stackSize == 0) {
+                stackList[i] = null;
+            }
+            eventHandler.onCraftMatrixChanged(this);
+            return itemstack1;
         } else {
             return null;
         }
     }
 
-    public void setInventorySlotContents(int var1, ItemStack var2) {
-        this.stackList[var1] = var2;
-        this.eventHandler.onCraftMatrixChanged(this);
+    public void setInventorySlotContents(int i, ItemStack itemstack) {
+        stackList[i] = itemstack;
+        eventHandler.onCraftMatrixChanged(this);
     }
 
     public int getInventoryStackLimit() {
@@ -57,7 +56,7 @@
     public void onInventoryChanged() {
     }
 
-    public boolean func_20070_a_(EntityPlayer var1) {
+    public boolean func_20070_a_(EntityPlayer entityplayer) {
         return true;
     }
 }
