--- net/minecraft/src/Packet52MultiBlockChange.java
+++ net/minecraft/src/Packet52MultiBlockChange.java
@@ -5,51 +5,49 @@
 import java.io.IOException;
 
 public class Packet52MultiBlockChange extends Packet {
+
     public int xPosition;
     public int zPosition;
     public short[] coordinateArray;
     public byte[] typeArray;
     public byte[] metadataArray;
     public int size;
-
     public Packet52MultiBlockChange() {
-        this.isChunkDataPacket = true;
-    }
-
-    public void readPacketData(DataInputStream var1) throws IOException {
-        this.xPosition = var1.readInt();
-        this.zPosition = var1.readInt();
-        this.size = var1.readShort() & '\uffff';
-        this.coordinateArray = new short[this.size];
-        this.typeArray = new byte[this.size];
-        this.metadataArray = new byte[this.size];
-
-        for(int var2 = 0; var2 < this.size; ++var2) {
-            this.coordinateArray[var2] = var1.readShort();
-        }
-
-        var1.readFully(this.typeArray);
-        var1.readFully(this.metadataArray);
-    }
-
-    public void writePacketData(DataOutputStream var1) throws IOException {
-        var1.writeInt(this.xPosition);
-        var1.writeInt(this.zPosition);
-        var1.writeShort((short)this.size);
-
-        for(int var2 = 0; var2 < this.size; ++var2) {
-            var1.writeShort(this.coordinateArray[var2]);
-        }
-
-        var1.write(this.typeArray);
-        var1.write(this.metadataArray);
-    }
-
-    public void processPacket(NetHandler var1) {
-        var1.handleMultiBlockChange(this);
+        isChunkDataPacket = true;
+    }
+
+    public void readPacketData(DataInputStream datainputstream) throws IOException {
+        xPosition = datainputstream.readInt();
+        zPosition = datainputstream.readInt();
+        size = datainputstream.readShort() & 0xffff;
+        coordinateArray = new short[size];
+        typeArray = new byte[size];
+        metadataArray = new byte[size];
+        for (int i = 0; i < size; i++) {
+            coordinateArray[i] = datainputstream.readShort();
+        }
+
+        datainputstream.readFully(typeArray);
+        datainputstream.readFully(metadataArray);
+    }
+
+    public void writePacketData(DataOutputStream dataoutputstream) throws IOException {
+        dataoutputstream.writeInt(xPosition);
+        dataoutputstream.writeInt(zPosition);
+        dataoutputstream.writeShort((short) size);
+        for (int i = 0; i < size; i++) {
+            dataoutputstream.writeShort(coordinateArray[i]);
+        }
+
+        dataoutputstream.write(typeArray);
+        dataoutputstream.write(metadataArray);
+    }
+
+    public void processPacket(NetHandler nethandler) {
+        nethandler.handleMultiBlockChange(this);
     }
 
     public int getPacketSize() {
-        return 10 + this.size * 4;
+        return 10 + size * 4;
     }
 }
