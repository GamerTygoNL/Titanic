--- net/minecraft/src/WorldClient.java
+++ net/minecraft/src/WorldClient.java
@@ -6,194 +6,186 @@
 import java.util.Set;
 
 public class WorldClient extends World {
-    private LinkedList field_1057_z = new LinkedList();
-    private NetClientHandler sendQueue;
-    private ChunkProviderClient C;
-    private MCHashTable field_1055_D = new MCHashTable();
-    private Set E = new HashSet();
-    private Set field_1053_F = new HashSet();
-
-    public WorldClient(NetClientHandler var1, long var2, int var4) {
-        super("MpServer", WorldProvider.func_4101_a(var4), var2);
-        this.sendQueue = var1;
-        this.spawnX = 8;
-        this.spawnY = 64;
-        this.spawnZ = 8;
+
+    private final LinkedList field_1057_z;
+    private final NetClientHandler sendQueue;
+    private final MCHashTable field_1055_D;
+    private final Set field_1054_E;
+    private final Set field_1053_F;
+    private ChunkProviderClient scheduledTickTreeSet;
+
+    public WorldClient(NetClientHandler netclienthandler, long l, int i) {
+        super("MpServer", WorldProvider.func_4101_a(i), l);
+        field_1057_z = new LinkedList();
+        field_1055_D = new MCHashTable();
+        field_1054_E = new HashSet();
+        field_1053_F = new HashSet();
+        sendQueue = netclienthandler;
+        spawnX = 8;
+        spawnY = 64;
+        spawnZ = 8;
     }
 
     public void tick() {
-        ++this.worldTime;
-        int var1 = this.calculateSkylightSubtracted(1.0F);
-        int var2;
-        if(var1 != this.skylightSubtracted) {
-            this.skylightSubtracted = var1;
-
-            for(var2 = 0; var2 < this.worldAccesses.size(); ++var2) {
-                ((IWorldAccess)this.worldAccesses.get(var2)).updateAllRenderers();
-            }
-        }
-
-        for(var2 = 0; var2 < 10 && !this.field_1053_F.isEmpty(); ++var2) {
-            Entity var3 = (Entity)this.field_1053_F.iterator().next();
-            if(!this.loadedEntityList.contains(var3)) {
-                this.entityJoinedWorld(var3);
-            }
-        }
-
-        this.sendQueue.processReadPackets();
-
-        for(var2 = 0; var2 < this.field_1057_z.size(); ++var2) {
-            WorldBlockPositionType var4 = (WorldBlockPositionType)this.field_1057_z.get(var2);
-            if(--var4.field_1206_d == 0) {
-                super.setBlockAndMetadata(var4.field_1202_a, var4.field_1201_b, var4.field_1207_c, var4.field_1205_e, var4.field_1204_f);
-                super.markBlockNeedsUpdate(var4.field_1202_a, var4.field_1201_b, var4.field_1207_c);
-                this.field_1057_z.remove(var2--);
-            }
-        }
-
-    }
-
-    public void func_711_c(int var1, int var2, int var3, int var4, int var5, int var6) {
-        for(int var7 = 0; var7 < this.field_1057_z.size(); ++var7) {
-            WorldBlockPositionType var8 = (WorldBlockPositionType)this.field_1057_z.get(var7);
-            if(var8.field_1202_a >= var1 && var8.field_1201_b >= var2 && var8.field_1207_c >= var3 && var8.field_1202_a <= var4 && var8.field_1201_b <= var5 && var8.field_1207_c <= var6) {
-                this.field_1057_z.remove(var7--);
-            }
-        }
-
-    }
-
-    protected IChunkProvider func_4081_a(File var1) {
-        this.C = new ChunkProviderClient(this);
-        return this.C;
+        worldTime++;
+        int i = calculateSkylightSubtracted(1.0F);
+        if (i != skylightSubtracted) {
+            skylightSubtracted = i;
+            for (int j = 0; j < worldAccesses.size(); j++) {
+                ((IWorldAccess) worldAccesses.get(j)).updateAllRenderers();
+            }
+
+        }
+        for (int k = 0; k < 10 && !field_1053_F.isEmpty(); k++) {
+            Entity entity = (Entity) field_1053_F.iterator().next();
+            if (!loadedEntityList.contains(entity)) {
+                entityJoinedWorld(entity);
+            }
+        }
+
+        sendQueue.processReadPackets();
+        for (int l = 0; l < field_1057_z.size(); l++) {
+            WorldBlockPositionType worldblockpositiontype = (WorldBlockPositionType) field_1057_z.get(l);
+            if (--worldblockpositiontype.field_1206_d == 0) {
+                super.setBlockAndMetadata(worldblockpositiontype.field_1202_a, worldblockpositiontype.field_1201_b, worldblockpositiontype.field_1207_c, worldblockpositiontype.field_1205_e, worldblockpositiontype.field_1204_f);
+                super.markBlockNeedsUpdate(worldblockpositiontype.field_1202_a, worldblockpositiontype.field_1201_b, worldblockpositiontype.field_1207_c);
+                field_1057_z.remove(l--);
+            }
+        }
+
+    }
+
+    public void func_711_c(int i, int j, int k, int l, int i1, int j1) {
+        for (int k1 = 0; k1 < field_1057_z.size(); k1++) {
+            WorldBlockPositionType worldblockpositiontype = (WorldBlockPositionType) field_1057_z.get(k1);
+            if (worldblockpositiontype.field_1202_a >= i && worldblockpositiontype.field_1201_b >= j && worldblockpositiontype.field_1207_c >= k && worldblockpositiontype.field_1202_a <= l && worldblockpositiontype.field_1201_b <= i1 && worldblockpositiontype.field_1207_c <= j1) {
+                field_1057_z.remove(k1--);
+            }
+        }
+
+    }
+
+    protected IChunkProvider func_4081_a(File file) {
+        scheduledTickTreeSet = new ChunkProviderClient(this);
+        return scheduledTickTreeSet;
     }
 
     public void func_4076_b() {
-        this.spawnX = 8;
-        this.spawnY = 64;
-        this.spawnZ = 8;
+        spawnX = 8;
+        spawnY = 64;
+        spawnZ = 8;
     }
 
     protected void func_4080_j() {
     }
 
-    public void scheduleBlockUpdate(int var1, int var2, int var3, int var4) {
+    public void scheduleBlockUpdate(int i, int j, int k, int l) {
     }
 
-    public boolean TickUpdates(boolean var1) {
+    public boolean TickUpdates(boolean flag) {
         return false;
     }
 
-    public void func_713_a(int var1, int var2, boolean var3) {
-        if(var3) {
-            this.C.func_538_d(var1, var2);
-        } else {
-            this.C.func_539_c(var1, var2);
-        }
-
-        if(!var3) {
-            this.func_701_b(var1 * 16, 0, var2 * 16, var1 * 16 + 15, 128, var2 * 16 + 15);
-        }
-
-    }
-
-    public boolean entityJoinedWorld(Entity var1) {
-        boolean var2 = super.entityJoinedWorld(var1);
-        this.E.add(var1);
-        if(!var2) {
-            this.field_1053_F.add(var1);
-        }
-
-        return var2;
-    }
-
-    public void setEntityDead(Entity var1) {
-        super.setEntityDead(var1);
-        this.E.remove(var1);
-    }
-
-    protected void obtainEntitySkin(Entity var1) {
-        super.obtainEntitySkin(var1);
-        if(this.field_1053_F.contains(var1)) {
-            this.field_1053_F.remove(var1);
-        }
-
-    }
-
-    protected void releaseEntitySkin(Entity var1) {
-        super.releaseEntitySkin(var1);
-        if(this.E.contains(var1)) {
-            this.field_1053_F.add(var1);
-        }
-
-    }
-
-    public void func_712_a(int var1, Entity var2) {
-        Entity var3 = this.func_709_b(var1);
-        if(var3 != null) {
-            this.setEntityDead(var3);
-        }
-
-        this.E.add(var2);
-        var2.field_620_ab = var1;
-        if(!this.entityJoinedWorld(var2)) {
-            this.field_1053_F.add(var2);
-        }
-
-        this.field_1055_D.addKey(var1, var2);
-    }
-
-    public Entity func_709_b(int var1) {
-        return (Entity)this.field_1055_D.lookup(var1);
-    }
-
-    public Entity removeEntityFromWorld(int var1) {
-        Entity var2 = (Entity)this.field_1055_D.removeObject(var1);
-        if(var2 != null) {
-            this.E.remove(var2);
-            this.setEntityDead(var2);
-        }
-
-        return var2;
-    }
-
-    public boolean setBlockMetadata(int var1, int var2, int var3, int var4) {
-        int var5 = this.getBlockId(var1, var2, var3);
-        int var6 = this.getBlockMetadata(var1, var2, var3);
-        if(super.setBlockMetadata(var1, var2, var3, var4)) {
-            this.field_1057_z.add(new WorldBlockPositionType(this, var1, var2, var3, var5, var6));
-            return true;
-        } else {
-            return false;
-        }
-    }
-
-    public boolean setBlockAndMetadata(int var1, int var2, int var3, int var4, int var5) {
-        int var6 = this.getBlockId(var1, var2, var3);
-        int var7 = this.getBlockMetadata(var1, var2, var3);
-        if(super.setBlockAndMetadata(var1, var2, var3, var4, var5)) {
-            this.field_1057_z.add(new WorldBlockPositionType(this, var1, var2, var3, var6, var7));
-            return true;
-        } else {
-            return false;
-        }
-    }
-
-    public boolean setBlock(int var1, int var2, int var3, int var4) {
-        int var5 = this.getBlockId(var1, var2, var3);
-        int var6 = this.getBlockMetadata(var1, var2, var3);
-        if(super.setBlock(var1, var2, var3, var4)) {
-            this.field_1057_z.add(new WorldBlockPositionType(this, var1, var2, var3, var5, var6));
-            return true;
-        } else {
-            return false;
-        }
-    }
-
-    public boolean func_714_c(int var1, int var2, int var3, int var4, int var5) {
-        this.func_711_c(var1, var2, var3, var1, var2, var3);
-        if(super.setBlockAndMetadata(var1, var2, var3, var4, var5)) {
-            this.notifyBlockChange(var1, var2, var3, var4);
+    public void func_713_a(int i, int j, boolean flag) {
+        if (flag) {
+            scheduledTickTreeSet.func_538_d(i, j);
+        } else {
+            scheduledTickTreeSet.func_539_c(i, j);
+        }
+        if (!flag) {
+            func_701_b(i * 16, 0, j * 16, i * 16 + 15, 128, j * 16 + 15);
+        }
+    }
+
+    public boolean entityJoinedWorld(Entity entity) {
+        boolean flag = super.entityJoinedWorld(entity);
+        field_1054_E.add(entity);
+        if (!flag) {
+            field_1053_F.add(entity);
+        }
+        return flag;
+    }
+
+    public void setEntityDead(Entity entity) {
+        super.setEntityDead(entity);
+        field_1054_E.remove(entity);
+    }
+
+    protected void obtainEntitySkin(Entity entity) {
+        super.obtainEntitySkin(entity);
+        field_1053_F.remove(entity);
+    }
+
+    protected void releaseEntitySkin(Entity entity) {
+        super.releaseEntitySkin(entity);
+        if (field_1054_E.contains(entity)) {
+            field_1053_F.add(entity);
+        }
+    }
+
+    public void func_712_a(int i, Entity entity) {
+        Entity entity1 = func_709_b(i);
+        if (entity1 != null) {
+            setEntityDead(entity1);
+        }
+        field_1054_E.add(entity);
+        entity.field_620_ab = i;
+        if (!entityJoinedWorld(entity)) {
+            field_1053_F.add(entity);
+        }
+        field_1055_D.addKey(i, entity);
+    }
+
+    public Entity func_709_b(int i) {
+        return (Entity) field_1055_D.lookup(i);
+    }
+
+    public Entity removeEntityFromWorld(int i) {
+        Entity entity = (Entity) field_1055_D.removeObject(i);
+        if (entity != null) {
+            field_1054_E.remove(entity);
+            setEntityDead(entity);
+        }
+        return entity;
+    }
+
+    public boolean setBlockMetadata(int i, int j, int k, int l) {
+        int i1 = getBlockId(i, j, k);
+        int j1 = getBlockMetadata(i, j, k);
+        if (super.setBlockMetadata(i, j, k, l)) {
+            field_1057_z.add(new WorldBlockPositionType(this, i, j, k, i1, j1));
+            return true;
+        } else {
+            return false;
+        }
+    }
+
+    public boolean setBlockAndMetadata(int i, int j, int k, int l, int i1) {
+        int j1 = getBlockId(i, j, k);
+        int k1 = getBlockMetadata(i, j, k);
+        if (super.setBlockAndMetadata(i, j, k, l, i1)) {
+            field_1057_z.add(new WorldBlockPositionType(this, i, j, k, j1, k1));
+            return true;
+        } else {
+            return false;
+        }
+    }
+
+    public boolean setBlock(int i, int j, int k, int l) {
+        int i1 = getBlockId(i, j, k);
+        int j1 = getBlockMetadata(i, j, k);
+        if (super.setBlock(i, j, k, l)) {
+            field_1057_z.add(new WorldBlockPositionType(this, i, j, k, i1, j1));
+            return true;
+        } else {
+            return false;
+        }
+    }
+
+    public boolean func_714_c(int i, int j, int k, int l, int i1) {
+        func_711_c(i, j, k, i, j, k);
+        if (super.setBlockAndMetadata(i, j, k, l, i1)) {
+            notifyBlockChange(i, j, k, l);
             return true;
         } else {
             return false;
@@ -201,6 +193,6 @@
     }
 
     public void sendQuittingDisconnectingPacket() {
-        this.sendQueue.addToSendQueue(new Packet255KickDisconnect("Quitting"));
+        sendQueue.addToSendQueue(new Packet255KickDisconnect("Quitting"));
     }
 }
