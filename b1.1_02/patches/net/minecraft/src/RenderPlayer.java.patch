--- net/minecraft/src/RenderPlayer.java
+++ net/minecraft/src/RenderPlayer.java
@@ -1,263 +1,279 @@
 package net.minecraft.src;
 
+import cc.noxiuam.titanic.Ref;
+import cc.noxiuam.titanic.event.impl.world.player.NametagRenderEvent;
+import cc.noxiuam.titanic.event.impl.world.player.model.CapeRenderEvent;
 import org.lwjgl.opengl.GL11;
 
 public class RenderPlayer extends RenderLiving {
-    private ModelBiped field_209_f = (ModelBiped)this.e;
-    private ModelBiped field_208_g = new ModelBiped(1.0F);
-    private ModelBiped field_207_h = new ModelBiped(0.5F);
-    private static final String[] armorFilenamePrefix = new String[]{"cloth", "chain", "iron", "diamond", "gold"};
+
+    private static final String[] armorFilenamePrefix = {
+            "cloth", "chain", "iron", "diamond", "gold"
+    };
+    private final ModelBiped field_209_f;
+    private final ModelBiped field_208_g;
+    private final ModelBiped field_207_h;
 
     public RenderPlayer() {
         super(new ModelBiped(0.0F), 0.5F);
+        field_209_f = (ModelBiped) unusedRenderBlocks;
+        field_208_g = new ModelBiped(1.0F);
+        field_207_h = new ModelBiped(0.5F);
     }
 
-    protected boolean a(EntityPlayer var1, int var2) {
-        ItemStack var3 = var1.inventory.armorItemInSlot(3 - var2);
-        if(var3 != null) {
-            Item var4 = var3.getItem();
-            if(var4 instanceof ItemArmor) {
-                ItemArmor var5 = (ItemArmor)var4;
-                this.loadTexture("/armor/" + armorFilenamePrefix[var5.renderIndex] + "_" + (var2 == 2 ? 2 : 1) + ".png");
-                ModelBiped var6 = var2 == 2 ? this.field_207_h : this.field_208_g;
-                var6.bipedHead.field_1403_h = var2 == 0;
-                var6.field_1285_b.field_1403_h = var2 == 0;
-                var6.field_1284_c.field_1403_h = var2 == 1 || var2 == 2;
-                var6.bipedRightArm.field_1403_h = var2 == 1;
-                var6.bipedLeftArm.field_1403_h = var2 == 1;
-                var6.bipedRightLeg.field_1403_h = var2 == 2 || var2 == 3;
-                var6.bipedLeftLeg.field_1403_h = var2 == 2 || var2 == 3;
-                this.setRenderPassModel(var6);
+    protected boolean func_187_a(EntityPlayer entityplayer, int i) {
+        ItemStack itemstack = entityplayer.inventory.armorItemInSlot(3 - i);
+        if (itemstack != null) {
+            Item item = itemstack.getItem();
+            if (item instanceof ItemArmor) {
+                ItemArmor itemarmor = (ItemArmor) item;
+                loadTexture("/armor/" + armorFilenamePrefix[itemarmor.renderIndex] + "_" + (i != 2 ? 1 : 2) + ".png");
+                ModelBiped modelbiped = i != 2 ? field_208_g : field_207_h;
+                modelbiped.bipedHead.field_1403_h = i == 0;
+                modelbiped.field_1285_b.field_1403_h = i == 0;
+                modelbiped.field_1284_c.field_1403_h = i == 1 || i == 2;
+                modelbiped.bipedRightArm.field_1403_h = i == 1;
+                modelbiped.bipedLeftArm.field_1403_h = i == 1;
+                modelbiped.bipedRightLeg.field_1403_h = i == 2 || i == 3;
+                modelbiped.bipedLeftLeg.field_1403_h = i == 2 || i == 3;
+                setRenderPassModel(modelbiped);
                 return true;
             }
         }
-
         return false;
     }
 
-    public void a(EntityPlayer var1, double var2, double var4, double var6, float var8, float var9) {
-        ItemStack var10 = var1.inventory.getCurrentItem();
-        this.field_208_g.field_1278_i = this.field_207_h.field_1278_i = this.field_209_f.field_1278_i = var10 != null;
-        this.field_208_g.field_1277_j = this.field_207_h.field_1277_j = this.field_209_f.field_1277_j = var1.isSneaking();
-        double var11 = var4 - (double)var1.yOffset;
-        if(var1.field_12240_bw) {
-            var11 -= 0.125D;
+    public void func_188_a(EntityPlayer entityplayer, double d, double d1, double d2,
+                           float f, float f1) {
+        ItemStack itemstack = entityplayer.inventory.getCurrentItem();
+        field_208_g.field_1278_i = field_207_h.field_1278_i = field_209_f.field_1278_i = itemstack != null;
+        field_208_g.field_1277_j = field_207_h.field_1277_j = field_209_f.field_1277_j = entityplayer.isSneaking();
+        double d3 = d1 - (double) entityplayer.yOffset;
+        if (entityplayer.field_12240_bw) {
+            d3 -= 0.125D;
         }
+        super.doRenderLiving(entityplayer, d, d3, d2, f, f1);
+        field_208_g.field_1277_j = field_207_h.field_1277_j = field_209_f.field_1277_j = false;
+        field_208_g.field_1278_i = field_207_h.field_1278_i = field_209_f.field_1278_i = false;
+        float f2 = 1.6F;
+        float f3 = 0.01666667F * f2;
+        float f4 = entityplayer.getDistanceToEntity(renderManager.field_1226_h);
+        float f5 = entityplayer.isSneaking() ? 32F : 64F;
 
-        super.a(var1, var2, var11, var6, var8, var9);
-        this.field_208_g.field_1277_j = this.field_207_h.field_1277_j = this.field_209_f.field_1277_j = false;
-        this.field_208_g.field_1278_i = this.field_207_h.field_1278_i = this.field_209_f.field_1278_i = false;
-        float var13 = 1.6F;
-        float var14 = (float)(1.0D / 60.0D) * var13;
-        float var15 = var1.getDistanceToEntity(this.renderManager.field_1226_h);
-        float var16 = var1.isSneaking() ? 32.0F : 64.0F;
-        if(var15 < var16) {
-            var14 = (float)((double)var14 * (Math.sqrt((double)var15) / 2.0D));
-            FontRenderer var17 = this.getFontRendererFromRenderManager();
+        if (f4 < f5) {
+            f3 = (float) ((double) f3 * (Math.sqrt(f4) / 2D));
+            FontRenderer fontrenderer = getFontRendererFromRenderManager();
             GL11.glPushMatrix();
-            GL11.glTranslatef((float)var2 + 0.0F, (float)var4 + 2.3F, (float)var6);
+            GL11.glTranslatef((float) d + 0.0F, (float) d1 + 2.3F, (float) d2);
             GL11.glNormal3f(0.0F, 1.0F, 0.0F);
-            GL11.glRotatef(-this.renderManager.field_1225_i, 0.0F, 1.0F, 0.0F);
-            GL11.glRotatef(this.renderManager.field_1224_j, 1.0F, 0.0F, 0.0F);
-            GL11.glScalef(-var14, -var14, var14);
-            String var18 = var1.field_771_i;
-            GL11.glDisable(GL11.GL_LIGHTING);
-            Tessellator var19;
-            if(!var1.isSneaking()) {
+            GL11.glRotatef(-renderManager.field_1225_i, 0.0F, 1.0F, 0.0F);
+            GL11.glRotatef(renderManager.field_1224_j, 1.0F, 0.0F, 0.0F);
+            GL11.glScalef(-f3, -f3, f3);
+
+            String s = entityplayer.field_771_i;
+            GL11.glDisable(2896 /*GL_LIGHTING*/);
+
+            NametagRenderEvent event = new NametagRenderEvent(entityplayer, f3);
+            Ref.getEventManager().handleEvent(event);
+            if (event.isCancelled()) {
+                return;
+            }
+
+            if (!entityplayer.isSneaking()) {
                 GL11.glDepthMask(false);
-                GL11.glDisable(GL11.GL_DEPTH_TEST);
-                GL11.glEnable(GL11.GL_BLEND);
-                GL11.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);
-                var19 = Tessellator.instance;
-                byte var20 = 0;
-                if(var1.field_771_i.equals("deadmau5")) {
-                    var20 = -10;
+                GL11.glDisable(2929 /*GL_DEPTH_TEST*/);
+                GL11.glEnable(3042 /*GL_BLEND*/);
+                GL11.glBlendFunc(770, 771);
+                Tessellator tessellator = Tessellator.instance;
+                byte byte0 = 0;
+                if (entityplayer.field_771_i.equals("deadmau5")) {
+                    byte0 = -10;
                 }
-
-                GL11.glDisable(GL11.GL_TEXTURE_2D);
-                var19.startDrawingQuads();
-                int var21 = var17.getStringWidth(var18) / 2;
-                var19.setColorRGBA_F(0.0F, 0.0F, 0.0F, 0.25F);
-                var19.addVertex((double)(-var21 - 1), (double)(-1 + var20), 0.0D);
-                var19.addVertex((double)(-var21 - 1), (double)(8 + var20), 0.0D);
-                var19.addVertex((double)(var21 + 1), (double)(8 + var20), 0.0D);
-                var19.addVertex((double)(var21 + 1), (double)(-1 + var20), 0.0D);
-                var19.draw();
-                GL11.glEnable(GL11.GL_TEXTURE_2D);
-                var17.drawString(var18, -var17.getStringWidth(var18) / 2, var20, 553648127);
-                GL11.glEnable(GL11.GL_DEPTH_TEST);
+                GL11.glDisable(3553 /*GL_TEXTURE_2D*/);
+
+                tessellator.startDrawingQuads();
+                int j = fontrenderer.getStringWidth(s) / 2;
+                tessellator.setColorRGBA_F(0.0F, 0.0F, 0.0F, 0.25F);
+                tessellator.addVertex(-j - 1, -1 + byte0, 0.0D);
+                tessellator.addVertex(-j - 1, 8 + byte0, 0.0D);
+                tessellator.addVertex(j + 1, 8 + byte0, 0.0D);
+                tessellator.addVertex(j + 1, -1 + byte0, 0.0D);
+                tessellator.draw();
+
+                GL11.glEnable(3553 /*GL_TEXTURE_2D*/);
+                fontrenderer.drawString(s, -fontrenderer.getStringWidth(s) / 2, byte0, 0x20ffffff);
+                GL11.glEnable(2929 /*GL_DEPTH_TEST*/);
                 GL11.glDepthMask(true);
-                var17.drawString(var18, -var17.getStringWidth(var18) / 2, var20, -1);
-                GL11.glEnable(GL11.GL_LIGHTING);
-                GL11.glDisable(GL11.GL_BLEND);
+                fontrenderer.drawString(s, -fontrenderer.getStringWidth(s) / 2, byte0, -1);
+                GL11.glEnable(2896 /*GL_LIGHTING*/);
+                GL11.glDisable(3042 /*GL_BLEND*/);
                 GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
                 GL11.glPopMatrix();
             } else {
-                GL11.glTranslatef(0.0F, 0.25F / var14, 0.0F);
+                GL11.glTranslatef(0.0F, 0.25F / f3, 0.0F);
                 GL11.glDepthMask(false);
-                GL11.glEnable(GL11.GL_BLEND);
-                GL11.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);
-                var19 = Tessellator.instance;
-                GL11.glDisable(GL11.GL_TEXTURE_2D);
-                var19.startDrawingQuads();
-                int var22 = var17.getStringWidth(var18) / 2;
-                var19.setColorRGBA_F(0.0F, 0.0F, 0.0F, 0.25F);
-                var19.addVertex((double)(-var22 - 1), -1.0D, 0.0D);
-                var19.addVertex((double)(-var22 - 1), 8.0D, 0.0D);
-                var19.addVertex((double)(var22 + 1), 8.0D, 0.0D);
-                var19.addVertex((double)(var22 + 1), -1.0D, 0.0D);
-                var19.draw();
-                GL11.glEnable(GL11.GL_TEXTURE_2D);
+                GL11.glEnable(3042 /*GL_BLEND*/);
+                GL11.glBlendFunc(770, 771);
+                Tessellator tessellator1 = Tessellator.instance;
+                GL11.glDisable(3553 /*GL_TEXTURE_2D*/);
+                tessellator1.startDrawingQuads();
+                int i = fontrenderer.getStringWidth(s) / 2;
+                tessellator1.setColorRGBA_F(0.0F, 0.0F, 0.0F, 0.25F);
+                tessellator1.addVertex(-i - 1, -1D, 0.0D);
+                tessellator1.addVertex(-i - 1, 8D, 0.0D);
+                tessellator1.addVertex(i + 1, 8D, 0.0D);
+                tessellator1.addVertex(i + 1, -1D, 0.0D);
+                tessellator1.draw();
+                GL11.glEnable(3553 /*GL_TEXTURE_2D*/);
                 GL11.glDepthMask(true);
-                var17.drawString(var18, -var17.getStringWidth(var18) / 2, 0, 553648127);
-                GL11.glEnable(GL11.GL_LIGHTING);
-                GL11.glDisable(GL11.GL_BLEND);
+                fontrenderer.drawString(s, -fontrenderer.getStringWidth(s) / 2, 0, 0x20ffffff);
+                GL11.glEnable(2896 /*GL_LIGHTING*/);
+                GL11.glDisable(3042 /*GL_BLEND*/);
                 GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
                 GL11.glPopMatrix();
             }
         }
-
     }
 
-    protected void a(EntityPlayer var1, float var2) {
-        ItemStack var3 = var1.inventory.armorItemInSlot(3);
-        if(var3 != null && var3.getItem().shiftedIndex < 256) {
+    protected void func_4015_a(EntityPlayer entityplayer, float f) {
+        ItemStack itemstack = entityplayer.inventory.armorItemInSlot(3);
+        if (itemstack != null && itemstack.getItem().shiftedIndex < 256) {
             GL11.glPushMatrix();
-            this.field_209_f.bipedHead.func_926_b(1.0F / 16.0F);
-            if(RenderBlocks.func_1219_a(Block.blocksList[var3.itemID].getRenderType())) {
-                float var4 = 10.0F / 16.0F;
+            field_209_f.bipedHead.func_926_b(0.0625F);
+            if (RenderBlocks.func_1219_a(Block.blocksList[itemstack.itemID].getRenderType())) {
+                float f1 = 0.625F;
                 GL11.glTranslatef(0.0F, -0.25F, 0.0F);
-                GL11.glRotatef(180.0F, 0.0F, 1.0F, 0.0F);
-                GL11.glScalef(var4, -var4, var4);
+                GL11.glRotatef(180F, 0.0F, 1.0F, 0.0F);
+                GL11.glScalef(f1, -f1, f1);
             }
-
-            this.renderManager.field_4236_f.renderItem(var3);
+            renderManager.field_4236_f.renderItem(itemstack);
             GL11.glPopMatrix();
         }
-
-        float var5;
-        if(var1.field_771_i.equals("deadmau5") && this.func_140_a(var1.field_20047_bv, (String)null)) {
-            for(int var19 = 0; var19 < 2; ++var19) {
-                var5 = var1.prevRotationYaw + (var1.rotationYaw - var1.prevRotationYaw) * var2 - (var1.prevRenderYawOffset + (var1.renderYawOffset - var1.prevRenderYawOffset) * var2);
-                float var6 = var1.prevRotationPitch + (var1.rotationPitch - var1.prevRotationPitch) * var2;
+        if (entityplayer.field_771_i.equals("deadmau5") && func_140_a(entityplayer.field_20047_bv, null)) {
+            for (int i = 0; i < 2; i++) {
+                float f2 = (entityplayer.prevRotationYaw + (entityplayer.rotationYaw - entityplayer.prevRotationYaw) * f) - (entityplayer.prevRenderYawOffset + (entityplayer.renderYawOffset - entityplayer.prevRenderYawOffset) * f);
+                float f6 = entityplayer.prevRotationPitch + (entityplayer.rotationPitch - entityplayer.prevRotationPitch) * f;
                 GL11.glPushMatrix();
-                GL11.glRotatef(var5, 0.0F, 1.0F, 0.0F);
-                GL11.glRotatef(var6, 1.0F, 0.0F, 0.0F);
-                GL11.glTranslatef(6.0F / 16.0F * (float)(var19 * 2 - 1), 0.0F, 0.0F);
-                GL11.glTranslatef(0.0F, -(6.0F / 16.0F), 0.0F);
-                GL11.glRotatef(-var6, 1.0F, 0.0F, 0.0F);
-                GL11.glRotatef(-var5, 0.0F, 1.0F, 0.0F);
-                float var7 = 4.0F / 3.0F;
-                GL11.glScalef(var7, var7, var7);
-                this.field_209_f.func_20095_a(1.0F / 16.0F);
+                GL11.glRotatef(f2, 0.0F, 1.0F, 0.0F);
+                GL11.glRotatef(f6, 1.0F, 0.0F, 0.0F);
+                GL11.glTranslatef(0.375F * (float) (i * 2 - 1), 0.0F, 0.0F);
+                GL11.glTranslatef(0.0F, -0.375F, 0.0F);
+                GL11.glRotatef(-f6, 1.0F, 0.0F, 0.0F);
+                GL11.glRotatef(-f2, 0.0F, 1.0F, 0.0F);
+                float f7 = 1.333333F;
+                GL11.glScalef(f7, f7, f7);
+                field_209_f.func_20095_a(0.0625F);
                 GL11.glPopMatrix();
             }
+
         }
-
-        if(this.func_140_a(var1.field_20067_q, (String)null)) {
+        if (func_140_a(entityplayer.field_20067_q, null)) {
             GL11.glPushMatrix();
-            GL11.glTranslatef(0.0F, 0.0F, 2.0F / 16.0F);
-            double var20 = var1.field_20066_r + (var1.field_20063_u - var1.field_20066_r) * (double)var2 - (var1.prevPosX + (var1.posX - var1.prevPosX) * (double)var2);
-            double var22 = var1.field_20065_s + (var1.field_20062_v - var1.field_20065_s) * (double)var2 - (var1.prevPosY + (var1.posY - var1.prevPosY) * (double)var2);
-            double var8 = var1.field_20064_t + (var1.field_20061_w - var1.field_20064_t) * (double)var2 - (var1.prevPosZ + (var1.posZ - var1.prevPosZ) * (double)var2);
-            float var10 = var1.prevRenderYawOffset + (var1.renderYawOffset - var1.prevRenderYawOffset) * var2;
-            double var11 = (double)MathHelper.sin(var10 * (float)Math.PI / 180.0F);
-            double var13 = (double)(-MathHelper.cos(var10 * (float)Math.PI / 180.0F));
-            float var15 = (float)var22 * 10.0F;
-            if(var15 < -6.0F) {
-                var15 = -6.0F;
-            }
-
-            if(var15 > 32.0F) {
-                var15 = 32.0F;
-            }
-
-            float var16 = (float)(var20 * var11 + var8 * var13) * 100.0F;
-            float var17 = (float)(var20 * var13 - var8 * var11) * 100.0F;
-            if(var16 < 0.0F) {
-                var16 = 0.0F;
-            }
-
-            float var18 = var1.field_775_e + (var1.field_774_f - var1.field_775_e) * var2;
-            var15 += MathHelper.sin((var1.prevDistanceWalkedModified + (var1.distanceWalkedModified - var1.prevDistanceWalkedModified) * var2) * 6.0F) * 32.0F * var18;
-            GL11.glRotatef(6.0F + var16 / 2.0F + var15, 1.0F, 0.0F, 0.0F);
-            GL11.glRotatef(var17 / 2.0F, 0.0F, 0.0F, 1.0F);
-            GL11.glRotatef(-var17 / 2.0F, 0.0F, 1.0F, 0.0F);
-            GL11.glRotatef(180.0F, 0.0F, 1.0F, 0.0F);
-            this.field_209_f.func_20096_b(1.0F / 16.0F);
+            GL11.glTranslatef(0.0F, 0.0F, 0.125F);
+            double d = (entityplayer.field_20066_r + (entityplayer.field_20063_u - entityplayer.field_20066_r) * (double) f) - (entityplayer.prevPosX + (entityplayer.posX - entityplayer.prevPosX) * (double) f);
+            double d1 = (entityplayer.field_20065_s + (entityplayer.field_20062_v - entityplayer.field_20065_s) * (double) f) - (entityplayer.prevPosY + (entityplayer.posY - entityplayer.prevPosY) * (double) f);
+            double d2 = (entityplayer.field_20064_t + (entityplayer.field_20061_w - entityplayer.field_20064_t) * (double) f) - (entityplayer.prevPosZ + (entityplayer.posZ - entityplayer.prevPosZ) * (double) f);
+            float f8 = entityplayer.prevRenderYawOffset + (entityplayer.renderYawOffset - entityplayer.prevRenderYawOffset) * f;
+            double d3 = MathHelper.sin((f8 * 3.141593F) / 180F);
+            double d4 = -MathHelper.cos((f8 * 3.141593F) / 180F);
+            float f9 = (float) d1 * 10F;
+            if (f9 < -6F) {
+                f9 = -6F;
+            }
+            if (f9 > 32F) {
+                f9 = 32F;
+            }
+            float f10 = (float) (d * d3 + d2 * d4) * 100F;
+            float f11 = (float) (d * d4 - d2 * d3) * 100F;
+            if (f10 < 0.0F) {
+                f10 = 0.0F;
+            }
+            float f12 = entityplayer.field_775_e + (entityplayer.field_774_f - entityplayer.field_775_e) * f;
+            f9 += MathHelper.sin((entityplayer.prevDistanceWalkedModified + (entityplayer.distanceWalkedModified - entityplayer.prevDistanceWalkedModified) * f) * 6F) * 32F * f12;
+
+            CapeRenderEvent event = new CapeRenderEvent(entityplayer, f9);
+            Ref.getEventManager().handleEvent(event);
+
+            if (event.isCancelled()) {
+                f9 = event.value;
+            }
+
+            GL11.glRotatef(6F + f10 / 2.0F + f9, 1.0F, 0.0F, 0.0F);
+            GL11.glRotatef(f11 / 2.0F, 0.0F, 0.0F, 1.0F);
+            GL11.glRotatef(-f11 / 2.0F, 0.0F, 1.0F, 0.0F);
+            GL11.glRotatef(180F, 0.0F, 1.0F, 0.0F);
+            field_209_f.func_20096_b(0.0625F);
             GL11.glPopMatrix();
         }
-
-        ItemStack var21 = var1.inventory.getCurrentItem();
-        if(var21 != null) {
+        ItemStack itemstack1 = entityplayer.inventory.getCurrentItem();
+        if (itemstack1 != null) {
             GL11.glPushMatrix();
-            this.field_209_f.bipedRightArm.func_926_b(1.0F / 16.0F);
-            GL11.glTranslatef(-(1.0F / 16.0F), 7.0F / 16.0F, 1.0F / 16.0F);
-            if(var1.fishEntity != null) {
-                var21 = new ItemStack(Item.stick.shiftedIndex);
+            field_209_f.bipedRightArm.func_926_b(0.0625F);
+            GL11.glTranslatef(-0.0625F, 0.4375F, 0.0625F);
+            if (entityplayer.fishEntity != null) {
+                itemstack1 = new ItemStack(Item.stick.shiftedIndex);
             }
-
-            if(var21.itemID < 256 && RenderBlocks.func_1219_a(Block.blocksList[var21.itemID].getRenderType())) {
-                var5 = 0.5F;
-                GL11.glTranslatef(0.0F, 3.0F / 16.0F, -(5.0F / 16.0F));
-                var5 *= 12.0F / 16.0F;
-                GL11.glRotatef(20.0F, 1.0F, 0.0F, 0.0F);
-                GL11.glRotatef(45.0F, 0.0F, 1.0F, 0.0F);
-                GL11.glScalef(var5, -var5, var5);
-            } else if(Item.itemsList[var21.itemID].isFull3D()) {
-                var5 = 10.0F / 16.0F;
-                if(Item.itemsList[var21.itemID].shouldRotateAroundWhenRendering()) {
-                    GL11.glRotatef(180.0F, 0.0F, 0.0F, 1.0F);
-                    GL11.glTranslatef(0.0F, -(2.0F / 16.0F), 0.0F);
+            if (itemstack1.itemID < 256 && RenderBlocks.func_1219_a(Block.blocksList[itemstack1.itemID].getRenderType())) {
+                float f3 = 0.5F;
+                GL11.glTranslatef(0.0F, 0.1875F, -0.3125F);
+                f3 *= 0.75F;
+                GL11.glRotatef(20F, 1.0F, 0.0F, 0.0F);
+                GL11.glRotatef(45F, 0.0F, 1.0F, 0.0F);
+                GL11.glScalef(f3, -f3, f3);
+            } else if (Item.itemsList[itemstack1.itemID].isFull3D()) {
+                float f4 = 0.625F;
+                if (Item.itemsList[itemstack1.itemID].shouldRotateAroundWhenRendering()) {
+                    GL11.glRotatef(180F, 0.0F, 0.0F, 1.0F);
+                    GL11.glTranslatef(0.0F, -0.125F, 0.0F);
                 }
-
-                GL11.glTranslatef(0.0F, 3.0F / 16.0F, 0.0F);
-                GL11.glScalef(var5, -var5, var5);
-                GL11.glRotatef(-100.0F, 1.0F, 0.0F, 0.0F);
-                GL11.glRotatef(45.0F, 0.0F, 1.0F, 0.0F);
+                GL11.glTranslatef(0.0F, 0.1875F, 0.0F);
+                GL11.glScalef(f4, -f4, f4);
+                GL11.glRotatef(-100F, 1.0F, 0.0F, 0.0F);
+                GL11.glRotatef(45F, 0.0F, 1.0F, 0.0F);
             } else {
-                var5 = 6.0F / 16.0F;
-                GL11.glTranslatef(0.25F, 3.0F / 16.0F, -(3.0F / 16.0F));
-                GL11.glScalef(var5, var5, var5);
-                GL11.glRotatef(60.0F, 0.0F, 0.0F, 1.0F);
-                GL11.glRotatef(-90.0F, 1.0F, 0.0F, 0.0F);
-                GL11.glRotatef(20.0F, 0.0F, 0.0F, 1.0F);
+                float f5 = 0.375F;
+                GL11.glTranslatef(0.25F, 0.1875F, -0.1875F);
+                GL11.glScalef(f5, f5, f5);
+                GL11.glRotatef(60F, 0.0F, 0.0F, 1.0F);
+                GL11.glRotatef(-90F, 1.0F, 0.0F, 0.0F);
+                GL11.glRotatef(20F, 0.0F, 0.0F, 1.0F);
             }
-
-            this.renderManager.field_4236_f.renderItem(var21);
+            renderManager.field_4236_f.renderItem(itemstack1);
             GL11.glPopMatrix();
         }
-
     }
 
-    protected void b(EntityPlayer var1, float var2) {
-        float var3 = 15.0F / 16.0F;
-        GL11.glScalef(var3, var3, var3);
+    protected void func_186_b(EntityPlayer entityplayer, float f) {
+        float f1 = 0.9375F;
+        GL11.glScalef(f1, f1, f1);
     }
 
     public void drawFirstPersonHand() {
-        this.field_209_f.field_1244_k = 0.0F;
-        this.field_209_f.setRotationAngles(0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 1.0F / 16.0F);
-        this.field_209_f.bipedRightArm.render(1.0F / 16.0F);
-    }
-
-    protected void preRenderCallback(EntityLiving var1, float var2) {
-        this.b((EntityPlayer)var1, var2);
-    }
-
-    protected boolean shouldRenderPass(EntityLiving var1, int var2) {
-        return this.a((EntityPlayer)var1, var2);
-    }
-
-    protected void renderEquippedItems(EntityLiving var1, float var2) {
-        this.a((EntityPlayer)var1, var2);
-    }
-
-    public void a(EntityLiving var1, double var2, double var4, double var6, float var8, float var9) {
-        this.a((EntityPlayer)var1, var2, var4, var6, var8, var9);
-    }
-
-    public void doRender(Entity var1, double var2, double var4, double var6, float var8, float var9) {
-        this.a((EntityPlayer)var1, var2, var4, var6, var8, var9);
-    }
+        field_209_f.field_1244_k = 0.0F;
+        field_209_f.setRotationAngles(0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0625F);
+        field_209_f.bipedRightArm.render(0.0625F);
+    }
+
+    protected void preRenderCallback(EntityLiving entityliving, float f) {
+        func_186_b((EntityPlayer) entityliving, f);
+    }
+
+    protected boolean shouldRenderPass(EntityLiving entityliving, int i) {
+        return func_187_a((EntityPlayer) entityliving, i);
+    }
+
+    protected void renderEquippedItems(EntityLiving entityliving, float f) {
+        func_4015_a((EntityPlayer) entityliving, f);
+    }
+
+    public void doRenderLiving(EntityLiving entityliving, double d, double d1, double d2,
+                               float f, float f1) {
+        func_188_a((EntityPlayer) entityliving, d, d1, d2, f, f1);
+    }
+
+    public void doRender(Entity entity, double d, double d1, double d2,
+                         float f, float f1) {
+        func_188_a((EntityPlayer) entity, d, d1, d2, f, f1);
+    }
+
 }
