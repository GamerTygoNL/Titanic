--- net/minecraft/src/TexturePortalFX.java
+++ net/minecraft/src/TexturePortalFX.java
@@ -3,85 +3,81 @@
 import java.util.Random;
 
 public class TexturePortalFX extends TextureFX {
-    private int field_4227_g = 0;
-    private byte[][] field_4226_h = new byte[32][1024];
+
+    private int field_4227_g;
+    private byte field_4226_h[][];
 
     public TexturePortalFX() {
         super(Block.portal.blockIndexInTexture);
-        Random var1 = new Random(100L);
-
-        for(int var2 = 0; var2 < 32; ++var2) {
-            for(int var3 = 0; var3 < 16; ++var3) {
-                for(int var4 = 0; var4 < 16; ++var4) {
-                    float var5 = 0.0F;
-
-                    int var6;
-                    for(var6 = 0; var6 < 2; ++var6) {
-                        float var7 = (float)(var6 * 8);
-                        float var8 = (float)(var6 * 8);
-                        float var9 = ((float)var3 - var7) / 16.0F * 2.0F;
-                        float var10 = ((float)var4 - var8) / 16.0F * 2.0F;
-                        if(var9 < -1.0F) {
-                            var9 += 2.0F;
-                        }
-
-                        if(var9 >= 1.0F) {
-                            var9 -= 2.0F;
-                        }
-
-                        if(var10 < -1.0F) {
-                            var10 += 2.0F;
-                        }
-
-                        if(var10 >= 1.0F) {
-                            var10 -= 2.0F;
-                        }
-
-                        float var11 = var9 * var9 + var10 * var10;
-                        float var12 = (float)Math.atan2((double)var10, (double)var9) + ((float)var2 / 32.0F * (float)Math.PI * 2.0F - var11 * 10.0F + (float)(var6 * 2)) * (float)(var6 * 2 - 1);
-                        var12 = (MathHelper.sin(var12) + 1.0F) / 2.0F;
-                        var12 /= var11 + 1.0F;
-                        var5 += var12 * 0.5F;
+        field_4227_g = 0;
+        field_4226_h = new byte[32][1024];
+        Random random = new Random(100L);
+        for (int i = 0; i < 32; i++) {
+            for (int j = 0; j < 16; j++) {
+                for (int k = 0; k < 16; k++) {
+                    float f = 0.0F;
+                    for (int l = 0; l < 2; l++) {
+                        float f1 = l * 8;
+                        float f2 = l * 8;
+                        float f3 = (((float) j - f1) / 16F) * 2.0F;
+                        float f4 = (((float) k - f2) / 16F) * 2.0F;
+                        if (f3 < -1F) {
+                            f3 += 2.0F;
+                        }
+                        if (f3 >= 1.0F) {
+                            f3 -= 2.0F;
+                        }
+                        if (f4 < -1F) {
+                            f4 += 2.0F;
+                        }
+                        if (f4 >= 1.0F) {
+                            f4 -= 2.0F;
+                        }
+                        float f5 = f3 * f3 + f4 * f4;
+                        float f6 = (float) Math.atan2(f4, f3) + ((((float) i / 32F) * 3.141593F * 2.0F - f5 * 10F) + (float) (l * 2)) * (float) (l * 2 - 1);
+                        f6 = (MathHelper.sin(f6) + 1.0F) / 2.0F;
+                        f6 /= f5 + 1.0F;
+                        f += f6 * 0.5F;
                     }
 
-                    var5 += var1.nextFloat() * 0.1F;
-                    var6 = (int)(var5 * 100.0F + 155.0F);
-                    int var13 = (int)(var5 * var5 * 200.0F + 55.0F);
-                    int var14 = (int)(var5 * var5 * var5 * var5 * 255.0F);
-                    int var15 = (int)(var5 * 100.0F + 155.0F);
-                    int var16 = var4 * 16 + var3;
-                    this.field_4226_h[var2][var16 * 4 + 0] = (byte)var13;
-                    this.field_4226_h[var2][var16 * 4 + 1] = (byte)var14;
-                    this.field_4226_h[var2][var16 * 4 + 2] = (byte)var6;
-                    this.field_4226_h[var2][var16 * 4 + 3] = (byte)var15;
+                    f += random.nextFloat() * 0.1F;
+                    int i1 = (int) (f * 100F + 155F);
+                    int j1 = (int) (f * f * 200F + 55F);
+                    int k1 = (int) (f * f * f * f * 255F);
+                    int l1 = (int) (f * 100F + 155F);
+                    int i2 = k * 16 + j;
+                    field_4226_h[i][i2 * 4 + 0] = (byte) j1;
+                    field_4226_h[i][i2 * 4 + 1] = (byte) k1;
+                    field_4226_h[i][i2 * 4 + 2] = (byte) i1;
+                    field_4226_h[i][i2 * 4 + 3] = (byte) l1;
                 }
+
             }
+
         }
 
     }
 
     public void func_783_a() {
-        ++this.field_4227_g;
-        byte[] var1 = this.field_4226_h[this.field_4227_g & 31];
-
-        for(int var2 = 0; var2 < 256; ++var2) {
-            int var3 = var1[var2 * 4 + 0] & 255;
-            int var4 = var1[var2 * 4 + 1] & 255;
-            int var5 = var1[var2 * 4 + 2] & 255;
-            int var6 = var1[var2 * 4 + 3] & 255;
-            if(this.field_1131_c) {
-                int var7 = (var3 * 30 + var4 * 59 + var5 * 11) / 100;
-                int var8 = (var3 * 30 + var4 * 70) / 100;
-                int var9 = (var3 * 30 + var5 * 70) / 100;
-                var3 = var7;
-                var4 = var8;
-                var5 = var9;
+        field_4227_g++;
+        byte abyte0[] = field_4226_h[field_4227_g & 0x1f];
+        for (int i = 0; i < 256; i++) {
+            int j = abyte0[i * 4 + 0] & 0xff;
+            int k = abyte0[i * 4 + 1] & 0xff;
+            int l = abyte0[i * 4 + 2] & 0xff;
+            int i1 = abyte0[i * 4 + 3] & 0xff;
+            if (field_1131_c) {
+                int j1 = (j * 30 + k * 59 + l * 11) / 100;
+                int k1 = (j * 30 + k * 70) / 100;
+                int l1 = (j * 30 + l * 70) / 100;
+                j = j1;
+                k = k1;
+                l = l1;
             }
-
-            this.field_1127_a[var2 * 4 + 0] = (byte)var3;
-            this.field_1127_a[var2 * 4 + 1] = (byte)var4;
-            this.field_1127_a[var2 * 4 + 2] = (byte)var5;
-            this.field_1127_a[var2 * 4 + 3] = (byte)var6;
+            field_1127_a[i * 4 + 0] = (byte) j;
+            field_1127_a[i * 4 + 1] = (byte) k;
+            field_1127_a[i * 4 + 2] = (byte) l;
+            field_1127_a[i * 4 + 3] = (byte) i1;
         }
 
     }
