--- net/minecraft/src/NetClientHandler.java
+++ net/minecraft/src/NetClientHandler.java
@@ -1,5 +1,10 @@
 package net.minecraft.src;
 
+import cc.noxiuam.titanic.Ref;
+import cc.noxiuam.titanic.event.impl.chat.ChatReceivedEvent;
+import cc.noxiuam.titanic.event.impl.network.PacketTimeUpdateEvent;
+import net.minecraft.client.Minecraft;
+
 import java.io.BufferedReader;
 import java.io.IOException;
 import java.io.InputStreamReader;
@@ -8,488 +13,502 @@
 import java.net.URL;
 import java.net.UnknownHostException;
 import java.util.Random;
-import net.minecraft.client.Minecraft;
 
 public class NetClientHandler extends NetHandler {
-    private boolean disconnected = false;
-    private NetworkManager netManager;
+
     public String field_1209_a;
+    Random rand;
+    private boolean disconnected;
+    private NetworkManager netManager;
     private Minecraft mc;
     private WorldClient worldClient;
-    private boolean field_1210_g = false;
-    Random rand = new Random();
+    private boolean field_1210_g;
 
-    public NetClientHandler(Minecraft var1, String var2, int var3) throws IOException, UnknownHostException {
-        this.mc = var1;
-        Socket var4 = new Socket(InetAddress.getByName(var2), var3);
-        this.netManager = new NetworkManager(var4, "Client", this);
+    public NetClientHandler(Minecraft minecraft, String s, int i) throws UnknownHostException, IOException {
+        disconnected = false;
+        field_1210_g = false;
+        rand = new Random();
+        mc = minecraft;
+        Socket socket = new Socket(InetAddress.getByName(s), i);
+        netManager = new NetworkManager(socket, "Client", this);
     }
 
     public void processReadPackets() {
-        if(!this.disconnected) {
-            this.netManager.processReadPackets();
-        }
-    }
-
-    public void handleLogin(Packet1Login var1) {
-        this.mc.playerController = new PlayerControllerMP(this.mc, this);
-        this.worldClient = new WorldClient(this, var1.field_4074_d, var1.field_4073_e);
-        this.worldClient.multiplayerWorld = true;
-        this.mc.func_6261_a(this.worldClient);
-        this.mc.displayGuiScreen(new GuiDownloadTerrain(this));
-        this.mc.thePlayer.field_620_ab = var1.protocolVersion;
-    }
-
-    public void handlePickupSpawn(Packet21PickupSpawn var1) {
-        double var2 = (double)var1.xPosition / 32.0D;
-        double var4 = (double)var1.yPosition / 32.0D;
-        double var6 = (double)var1.zPosition / 32.0D;
-        EntityItem var8 = new EntityItem(this.worldClient, var2, var4, var6, new ItemStack(var1.itemId, var1.count));
-        var8.motionX = (double)var1.rotation / 128.0D;
-        var8.motionY = (double)var1.pitch / 128.0D;
-        var8.motionZ = (double)var1.roll / 128.0D;
-        var8.serverPosX = var1.xPosition;
-        var8.serverPosY = var1.yPosition;
-        var8.serverPosZ = var1.zPosition;
-        this.worldClient.func_712_a(var1.entityId, var8);
-    }
-
-    public void handleVehicleSpawn(Packet23VehicleSpawn var1) {
-        double var2 = (double)var1.xPosition / 32.0D;
-        double var4 = (double)var1.yPosition / 32.0D;
-        double var6 = (double)var1.zPosition / 32.0D;
-        Object var8 = null;
-        if(var1.type == 10) {
-            var8 = new EntityMinecart(this.worldClient, var2, var4, var6, 0);
-        }
-
-        if(var1.type == 11) {
-            var8 = new EntityMinecart(this.worldClient, var2, var4, var6, 1);
-        }
-
-        if(var1.type == 12) {
-            var8 = new EntityMinecart(this.worldClient, var2, var4, var6, 2);
-        }
-
-        if(var1.type == 90) {
-            var8 = new EntityFish(this.worldClient, var2, var4, var6);
-        }
-
-        if(var1.type == 60) {
-            var8 = new EntityArrow(this.worldClient, var2, var4, var6);
-        }
-
-        if(var1.type == 61) {
-            var8 = new EntitySnowball(this.worldClient, var2, var4, var6);
-        }
-
-        if(var1.type == 62) {
-            var8 = new EntityEgg(this.worldClient, var2, var4, var6);
-        }
-
-        if(var1.type == 1) {
-            var8 = new EntityBoat(this.worldClient, var2, var4, var6);
-        }
-
-        if(var1.type == 50) {
-            var8 = new EntityTNTPrimed(this.worldClient, var2, var4, var6);
-        }
-
-        if(var1.type == 70) {
-            var8 = new EntityFallingSand(this.worldClient, var2, var4, var6, Block.sand.blockID);
-        }
-
-        if(var1.type == 71) {
-            var8 = new EntityFallingSand(this.worldClient, var2, var4, var6, Block.gravel.blockID);
-        }
-
-        if(var8 != null) {
-            ((Entity)var8).serverPosX = var1.xPosition;
-            ((Entity)var8).serverPosY = var1.yPosition;
-            ((Entity)var8).serverPosZ = var1.zPosition;
-            ((Entity)var8).rotationYaw = 0.0F;
-            ((Entity)var8).rotationPitch = 0.0F;
-            ((Entity)var8).field_620_ab = var1.entityId;
-            this.worldClient.func_712_a(var1.entityId, (Entity)var8);
-        }
-
-    }
-
-    public void func_6498_a(Packet28 var1) {
-        Entity var2 = this.func_12246_a(var1.field_6367_a);
-        if(var2 != null) {
-            var2.setVelocity((double)var1.field_6366_b / 8000.0D, (double)var1.field_6369_c / 8000.0D, (double)var1.field_6368_d / 8000.0D);
-        }
-    }
-
-    public void handleNamedEntitySpawn(Packet20NamedEntitySpawn var1) {
-        double var2 = (double)var1.xPosition / 32.0D;
-        double var4 = (double)var1.yPosition / 32.0D;
-        double var6 = (double)var1.zPosition / 32.0D;
-        float var8 = (float)(var1.rotation * 360) / 256.0F;
-        float var9 = (float)(var1.pitch * 360) / 256.0F;
-        EntityOtherPlayerMP var10 = new EntityOtherPlayerMP(this.mc.theWorld, var1.name);
-        var10.serverPosX = var1.xPosition;
-        var10.serverPosY = var1.yPosition;
-        var10.serverPosZ = var1.zPosition;
-        int var11 = var1.currentItem;
-        if(var11 == 0) {
-            var10.inventory.mainInventory[var10.inventory.currentItem] = null;
-        } else {
-            var10.inventory.mainInventory[var10.inventory.currentItem] = new ItemStack(var11);
-        }
-
-        var10.setPositionAndRotation(var2, var4, var6, var8, var9);
-        this.worldClient.func_712_a(var1.entityId, var10);
-    }
-
-    public void handleEntityTeleport(Packet34EntityTeleport var1) {
-        Entity var2 = this.func_12246_a(var1.entityId);
-        if(var2 != null) {
-            var2.serverPosX = var1.xPosition;
-            var2.serverPosY = var1.yPosition;
-            var2.serverPosZ = var1.zPosition;
-            double var3 = (double)var2.serverPosX / 32.0D;
-            double var5 = (double)var2.serverPosY / 32.0D + 1.0D / 64.0D;
-            double var7 = (double)var2.serverPosZ / 32.0D;
-            float var9 = (float)(var1.yaw * 360) / 256.0F;
-            float var10 = (float)(var1.pitch * 360) / 256.0F;
-            var2.setPositionAndRotation2(var3, var5, var7, var9, var10, 3);
-        }
-    }
-
-    public void handleEntity(Packet30Entity var1) {
-        Entity var2 = this.func_12246_a(var1.entityId);
-        if(var2 != null) {
-            var2.serverPosX += var1.xPosition;
-            var2.serverPosY += var1.yPosition;
-            var2.serverPosZ += var1.zPosition;
-            double var3 = (double)var2.serverPosX / 32.0D;
-            double var5 = (double)var2.serverPosY / 32.0D + 1.0D / 64.0D;
-            double var7 = (double)var2.serverPosZ / 32.0D;
-            float var9 = var1.rotating ? (float)(var1.yaw * 360) / 256.0F : var2.rotationYaw;
-            float var10 = var1.rotating ? (float)(var1.pitch * 360) / 256.0F : var2.rotationPitch;
-            var2.setPositionAndRotation2(var3, var5, var7, var9, var10, 3);
-        }
-    }
-
-    public void handleDestroyEntity(Packet29DestroyEntity var1) {
-        this.worldClient.removeEntityFromWorld(var1.entityId);
-    }
-
-    public void handleFlying(Packet10Flying var1) {
-        EntityPlayerSP var2 = this.mc.thePlayer;
-        double var3 = var2.posX;
-        double var5 = var2.posY;
-        double var7 = var2.posZ;
-        float var9 = var2.rotationYaw;
-        float var10 = var2.rotationPitch;
-        if(var1.moving) {
-            var3 = var1.xPosition;
-            var5 = var1.yPosition;
-            var7 = var1.zPosition;
-        }
-
-        if(var1.rotating) {
-            var9 = var1.yaw;
-            var10 = var1.pitch;
-        }
-
-        var2.field_9287_aY = 0.0F;
-        var2.motionX = var2.motionY = var2.motionZ = 0.0D;
-        var2.setPositionAndRotation(var3, var5, var7, var9, var10);
-        var1.xPosition = var2.posX;
-        var1.yPosition = var2.boundingBox.minY;
-        var1.zPosition = var2.posZ;
-        var1.stance = var2.posY;
-        this.netManager.addToSendQueue(var1);
-        if(!this.field_1210_g) {
-            this.mc.thePlayer.prevPosX = this.mc.thePlayer.posX;
-            this.mc.thePlayer.prevPosY = this.mc.thePlayer.posY;
-            this.mc.thePlayer.prevPosZ = this.mc.thePlayer.posZ;
-            this.field_1210_g = true;
-            this.mc.displayGuiScreen((GuiScreen)null);
-        }
-
-    }
-
-    public void handlePreChunk(Packet50PreChunk var1) {
-        this.worldClient.func_713_a(var1.xPosition, var1.yPosition, var1.mode);
-    }
-
-    public void handleMultiBlockChange(Packet52MultiBlockChange var1) {
-        Chunk var2 = this.worldClient.getChunkFromChunkCoords(var1.xPosition, var1.zPosition);
-        int var3 = var1.xPosition * 16;
-        int var4 = var1.zPosition * 16;
-
-        for(int var5 = 0; var5 < var1.size; ++var5) {
-            short var6 = var1.coordinateArray[var5];
-            int var7 = var1.typeArray[var5] & 255;
-            byte var8 = var1.metadataArray[var5];
-            int var9 = var6 >> 12 & 15;
-            int var10 = var6 >> 8 & 15;
-            int var11 = var6 & 255;
-            var2.setBlockIDWithMetadata(var9, var11, var10, var7, var8);
-            this.worldClient.func_711_c(var9 + var3, var11, var10 + var4, var9 + var3, var11, var10 + var4);
-            this.worldClient.func_701_b(var9 + var3, var11, var10 + var4, var9 + var3, var11, var10 + var4);
-        }
-
-    }
-
-    public void handleMapChunk(Packet51MapChunk var1) {
-        this.worldClient.func_711_c(var1.xPosition, var1.yPosition, var1.zPosition, var1.xPosition + var1.xSize - 1, var1.yPosition + var1.ySize - 1, var1.zPosition + var1.zSize - 1);
-        this.worldClient.func_693_a(var1.xPosition, var1.yPosition, var1.zPosition, var1.xSize, var1.ySize, var1.zSize, var1.chunk);
-    }
-
-    public void handleBlockChange(Packet53BlockChange var1) {
-        this.worldClient.func_714_c(var1.xPosition, var1.yPosition, var1.zPosition, var1.type, var1.metadata);
-    }
-
-    public void handleKickDisconnect(Packet255KickDisconnect var1) {
-        this.netManager.networkShutdown("disconnect.kicked", new Object[0]);
-        this.disconnected = true;
-        this.mc.func_6261_a((World)null);
-        this.mc.displayGuiScreen(new GuiConnectFailed("disconnect.disconnected", "disconnect.genericReason", new Object[]{var1.reason}));
-    }
-
-    public void handleErrorMessage(String var1, Object[] var2) {
-        if(!this.disconnected) {
-            this.disconnected = true;
-            this.mc.func_6261_a((World)null);
-            this.mc.displayGuiScreen(new GuiConnectFailed("disconnect.lost", var1, var2));
-        }
-    }
-
-    public void addToSendQueue(Packet var1) {
-        if(!this.disconnected) {
-            this.netManager.addToSendQueue(var1);
-        }
-    }
-
-    public void handleCollect(Packet22Collect var1) {
-        Entity var2 = this.func_12246_a(var1.collectedEntityId);
-        Object var3 = (EntityLiving)this.func_12246_a(var1.collectorEntityId);
-        if(var3 == null) {
-            var3 = this.mc.thePlayer;
-        }
-
-        if(var2 != null) {
-            this.worldClient.playSoundAtEntity(var2, "random.pop", 0.2F, ((this.rand.nextFloat() - this.rand.nextFloat()) * 0.7F + 1.0F) * 2.0F);
-            this.mc.effectRenderer.func_1192_a(new EntityPickupFX(this.mc.theWorld, var2, (Entity)var3, -0.5F));
-            this.worldClient.removeEntityFromWorld(var1.collectedEntityId);
-        }
-
-    }
-
-    public void handleChat(Packet3Chat var1) {
-        this.mc.ingameGUI.addChatMessage(var1.message);
-    }
-
-    public void handleArmAnimation(Packet18ArmAnimation var1) {
-        Entity var2 = this.func_12246_a(var1.entityId);
-        if(var2 != null) {
-            if(var1.animate == 1) {
-                EntityPlayer var3 = (EntityPlayer)var2;
-                var3.swingItem();
-            } else if(var1.animate == 100) {
-                var2.field_9300_bu = true;
-            } else if(var1.animate == 101) {
-                var2.field_9300_bu = false;
-            } else if(var1.animate == 102) {
-                var2.field_9299_bv = true;
-            } else if(var1.animate == 103) {
-                var2.field_9299_bv = false;
-            } else if(var1.animate == 104) {
-                var2.field_12240_bw = true;
-            } else if(var1.animate == 105) {
-                var2.field_12240_bw = false;
-            } else if(var1.animate == 2) {
-                var2.performHurtAnimation();
-            }
-
-        }
-    }
-
-    public void handleHandshake(Packet2Handshake var1) {
-        if(var1.username.equals("-")) {
-            this.addToSendQueue(new Packet1Login(this.mc.session.playerName, "Password", 8));
+        if (disconnected) {
+            return;
+        } else {
+            netManager.processReadPackets();
+            return;
+        }
+    }
+
+    public void handleLogin(Packet1Login packet1login) {
+        mc.playerController = new PlayerControllerMP(mc, this);
+        worldClient = new WorldClient(this, packet1login.field_4074_d, packet1login.field_4073_e);
+        worldClient.multiplayerWorld = true;
+        mc.func_6261_a(worldClient);
+        mc.displayGuiScreen(new GuiDownloadTerrain(this));
+        mc.thePlayer.field_620_ab = packet1login.protocolVersion;
+    }
+
+    public void handlePickupSpawn(Packet21PickupSpawn packet21pickupspawn) {
+        double d = (double) packet21pickupspawn.xPosition / 32D;
+        double d1 = (double) packet21pickupspawn.yPosition / 32D;
+        double d2 = (double) packet21pickupspawn.zPosition / 32D;
+        EntityItem entityitem = new EntityItem(worldClient, d, d1, d2, new ItemStack(packet21pickupspawn.itemId, packet21pickupspawn.count));
+        entityitem.motionX = (double) packet21pickupspawn.rotation / 128D;
+        entityitem.motionY = (double) packet21pickupspawn.pitch / 128D;
+        entityitem.motionZ = (double) packet21pickupspawn.roll / 128D;
+        entityitem.serverPosX = packet21pickupspawn.xPosition;
+        entityitem.serverPosY = packet21pickupspawn.yPosition;
+        entityitem.serverPosZ = packet21pickupspawn.zPosition;
+        worldClient.func_712_a(packet21pickupspawn.entityId, entityitem);
+    }
+
+    public void handleVehicleSpawn(Packet23VehicleSpawn packet23vehiclespawn) {
+        double d = (double) packet23vehiclespawn.xPosition / 32D;
+        double d1 = (double) packet23vehiclespawn.yPosition / 32D;
+        double d2 = (double) packet23vehiclespawn.zPosition / 32D;
+        Entity obj = null;
+        if (packet23vehiclespawn.type == 10) {
+            obj = new EntityMinecart(worldClient, d, d1, d2, 0);
+        }
+        if (packet23vehiclespawn.type == 11) {
+            obj = new EntityMinecart(worldClient, d, d1, d2, 1);
+        }
+        if (packet23vehiclespawn.type == 12) {
+            obj = new EntityMinecart(worldClient, d, d1, d2, 2);
+        }
+        if (packet23vehiclespawn.type == 90) {
+            obj = new EntityFish(worldClient, d, d1, d2);
+        }
+        if (packet23vehiclespawn.type == 60) {
+            obj = new EntityArrow(worldClient, d, d1, d2);
+        }
+        if (packet23vehiclespawn.type == 61) {
+            obj = new EntitySnowball(worldClient, d, d1, d2);
+        }
+        if (packet23vehiclespawn.type == 62) {
+            obj = new EntityEgg(worldClient, d, d1, d2);
+        }
+        if (packet23vehiclespawn.type == 1) {
+            obj = new EntityBoat(worldClient, d, d1, d2);
+        }
+        if (packet23vehiclespawn.type == 50) {
+            obj = new EntityTNTPrimed(worldClient, d, d1, d2);
+        }
+        if (packet23vehiclespawn.type == 70) {
+            obj = new EntityFallingSand(worldClient, d, d1, d2, Block.sand.blockID);
+        }
+        if (packet23vehiclespawn.type == 71) {
+            obj = new EntityFallingSand(worldClient, d, d1, d2, Block.gravel.blockID);
+        }
+        if (obj != null) {
+            obj.serverPosX = packet23vehiclespawn.xPosition;
+            obj.serverPosY = packet23vehiclespawn.yPosition;
+            obj.serverPosZ = packet23vehiclespawn.zPosition;
+            obj.rotationYaw = 0.0F;
+            obj.rotationPitch = 0.0F;
+            obj.field_620_ab = packet23vehiclespawn.entityId;
+            worldClient.func_712_a(packet23vehiclespawn.entityId, ((Entity) (obj)));
+        }
+    }
+
+    public void func_6498_a(Packet28 packet28) {
+        Entity entity = func_12246_a(packet28.field_6367_a);
+        if (entity == null) {
+            return;
+        } else {
+            entity.setVelocity((double) packet28.field_6366_b / 8000D, (double) packet28.field_6369_c / 8000D, (double) packet28.field_6368_d / 8000D);
+            return;
+        }
+    }
+
+    public void handleNamedEntitySpawn(Packet20NamedEntitySpawn packet20namedentityspawn) {
+        double d = (double) packet20namedentityspawn.xPosition / 32D;
+        double d1 = (double) packet20namedentityspawn.yPosition / 32D;
+        double d2 = (double) packet20namedentityspawn.zPosition / 32D;
+        float f = (float) (packet20namedentityspawn.rotation * 360) / 256F;
+        float f1 = (float) (packet20namedentityspawn.pitch * 360) / 256F;
+        EntityOtherPlayerMP entityotherplayermp = new EntityOtherPlayerMP(mc.theWorld, packet20namedentityspawn.name);
+        entityotherplayermp.serverPosX = packet20namedentityspawn.xPosition;
+        entityotherplayermp.serverPosY = packet20namedentityspawn.yPosition;
+        entityotherplayermp.serverPosZ = packet20namedentityspawn.zPosition;
+        int i = packet20namedentityspawn.currentItem;
+        if (i == 0) {
+            entityotherplayermp.inventory.mainInventory[entityotherplayermp.inventory.currentItem] = null;
+        } else {
+            entityotherplayermp.inventory.mainInventory[entityotherplayermp.inventory.currentItem] = new ItemStack(i);
+        }
+        entityotherplayermp.setPositionAndRotation(d, d1, d2, f, f1);
+        worldClient.func_712_a(packet20namedentityspawn.entityId, entityotherplayermp);
+    }
+
+    public void handleEntityTeleport(Packet34EntityTeleport packet34entityteleport) {
+        Entity entity = func_12246_a(packet34entityteleport.entityId);
+        if (entity == null) {
+            return;
+        } else {
+            entity.serverPosX = packet34entityteleport.xPosition;
+            entity.serverPosY = packet34entityteleport.yPosition;
+            entity.serverPosZ = packet34entityteleport.zPosition;
+            double d = (double) entity.serverPosX / 32D;
+            double d1 = (double) entity.serverPosY / 32D + 0.015625D;
+            double d2 = (double) entity.serverPosZ / 32D;
+            float f = (float) (packet34entityteleport.yaw * 360) / 256F;
+            float f1 = (float) (packet34entityteleport.pitch * 360) / 256F;
+            entity.setPositionAndRotation2(d, d1, d2, f, f1, 3);
+            return;
+        }
+    }
+
+    public void handleEntity(Packet30Entity packet30entity) {
+        Entity entity = func_12246_a(packet30entity.entityId);
+        if (entity == null) {
+            return;
+        } else {
+            entity.serverPosX += packet30entity.xPosition;
+            entity.serverPosY += packet30entity.yPosition;
+            entity.serverPosZ += packet30entity.zPosition;
+            double d = (double) entity.serverPosX / 32D;
+            double d1 = (double) entity.serverPosY / 32D + 0.015625D;
+            double d2 = (double) entity.serverPosZ / 32D;
+            float f = packet30entity.rotating ? (float) (packet30entity.yaw * 360) / 256F : entity.rotationYaw;
+            float f1 = packet30entity.rotating ? (float) (packet30entity.pitch * 360) / 256F : entity.rotationPitch;
+            entity.setPositionAndRotation2(d, d1, d2, f, f1, 3);
+            return;
+        }
+    }
+
+    public void handleDestroyEntity(Packet29DestroyEntity packet29destroyentity) {
+        worldClient.removeEntityFromWorld(packet29destroyentity.entityId);
+    }
+
+    public void handleFlying(Packet10Flying packet10flying) {
+        EntityPlayerSP entityplayersp = mc.thePlayer;
+        double d = ((EntityPlayer) (entityplayersp)).posX;
+        double d1 = ((EntityPlayer) (entityplayersp)).posY;
+        double d2 = ((EntityPlayer) (entityplayersp)).posZ;
+        float f = ((EntityPlayer) (entityplayersp)).rotationYaw;
+        float f1 = ((EntityPlayer) (entityplayersp)).rotationPitch;
+        if (packet10flying.moving) {
+            d = packet10flying.xPosition;
+            d1 = packet10flying.yPosition;
+            d2 = packet10flying.zPosition;
+        }
+        if (packet10flying.rotating) {
+            f = packet10flying.yaw;
+            f1 = packet10flying.pitch;
+        }
+        entityplayersp.field_9287_aY = 0.0F;
+        entityplayersp.motionX = entityplayersp.motionY = entityplayersp.motionZ = 0.0D;
+        entityplayersp.setPositionAndRotation(d, d1, d2, f, f1);
+        packet10flying.xPosition = ((EntityPlayer) (entityplayersp)).posX;
+        packet10flying.yPosition = ((EntityPlayer) (entityplayersp)).boundingBox.minY;
+        packet10flying.zPosition = ((EntityPlayer) (entityplayersp)).posZ;
+        packet10flying.stance = ((EntityPlayer) (entityplayersp)).posY;
+        netManager.addToSendQueue(packet10flying);
+        if (!field_1210_g) {
+            mc.thePlayer.prevPosX = mc.thePlayer.posX;
+            mc.thePlayer.prevPosY = mc.thePlayer.posY;
+            mc.thePlayer.prevPosZ = mc.thePlayer.posZ;
+            field_1210_g = true;
+            mc.displayGuiScreen(null);
+        }
+    }
+
+    public void handlePreChunk(Packet50PreChunk packet50prechunk) {
+        worldClient.func_713_a(packet50prechunk.xPosition, packet50prechunk.yPosition, packet50prechunk.mode);
+    }
+
+    public void handleMultiBlockChange(Packet52MultiBlockChange packet52multiblockchange) {
+        Chunk chunk = worldClient.getChunkFromChunkCoords(packet52multiblockchange.xPosition, packet52multiblockchange.zPosition);
+        int i = packet52multiblockchange.xPosition * 16;
+        int j = packet52multiblockchange.zPosition * 16;
+        for (int k = 0; k < packet52multiblockchange.size; k++) {
+            short word0 = packet52multiblockchange.coordinateArray[k];
+            int l = packet52multiblockchange.typeArray[k] & 0xff;
+            byte byte0 = packet52multiblockchange.metadataArray[k];
+            int i1 = word0 >> 12 & 0xf;
+            int j1 = word0 >> 8 & 0xf;
+            int k1 = word0 & 0xff;
+            chunk.setBlockIDWithMetadata(i1, k1, j1, l, byte0);
+            worldClient.func_711_c(i1 + i, k1, j1 + j, i1 + i, k1, j1 + j);
+            worldClient.func_701_b(i1 + i, k1, j1 + j, i1 + i, k1, j1 + j);
+        }
+
+    }
+
+    public void handleMapChunk(Packet51MapChunk packet51mapchunk) {
+        worldClient.func_711_c(packet51mapchunk.xPosition, packet51mapchunk.yPosition, packet51mapchunk.zPosition, (packet51mapchunk.xPosition + packet51mapchunk.xSize) - 1, (packet51mapchunk.yPosition + packet51mapchunk.ySize) - 1, (packet51mapchunk.zPosition + packet51mapchunk.zSize) - 1);
+        worldClient.func_693_a(packet51mapchunk.xPosition, packet51mapchunk.yPosition, packet51mapchunk.zPosition, packet51mapchunk.xSize, packet51mapchunk.ySize, packet51mapchunk.zSize, packet51mapchunk.chunk);
+    }
+
+    public void handleBlockChange(Packet53BlockChange packet53blockchange) {
+        worldClient.func_714_c(packet53blockchange.xPosition, packet53blockchange.yPosition, packet53blockchange.zPosition, packet53blockchange.type, packet53blockchange.metadata);
+    }
+
+    public void handleKickDisconnect(Packet255KickDisconnect packet255kickdisconnect) {
+        netManager.networkShutdown("disconnect.kicked", new Object[0]);
+        disconnected = true;
+        mc.func_6261_a(null);
+        mc.displayGuiScreen(new GuiConnectFailed("disconnect.disconnected", "disconnect.genericReason", new Object[]{
+                packet255kickdisconnect.reason
+        }));
+    }
+
+    public void handleErrorMessage(String s, Object aobj[]) {
+        if (disconnected) {
+            return;
+        } else {
+            disconnected = true;
+            mc.func_6261_a(null);
+            mc.displayGuiScreen(new GuiConnectFailed("disconnect.lost", s, aobj));
+            return;
+        }
+    }
+
+    public void addToSendQueue(Packet packet) {
+        if (disconnected) {
+            return;
+        } else {
+            netManager.addToSendQueue(packet);
+            return;
+        }
+    }
+
+    public void handleCollect(Packet22Collect packet22collect) {
+        Entity entity = func_12246_a(packet22collect.collectedEntityId);
+        Object obj = (EntityLiving) func_12246_a(packet22collect.collectorEntityId);
+        if (obj == null) {
+            obj = mc.thePlayer;
+        }
+        if (entity != null) {
+            worldClient.playSoundAtEntity(entity, "random.pop", 0.2F, ((rand.nextFloat() - rand.nextFloat()) * 0.7F + 1.0F) * 2.0F);
+            mc.effectRenderer.func_1192_a(new EntityPickupFX(mc.theWorld, entity, ((Entity) (obj)), -0.5F));
+            worldClient.removeEntityFromWorld(packet22collect.collectedEntityId);
+        }
+    }
+
+    public void handleChat(Packet3Chat packet3chat) {
+        String msg = packet3chat.message;
+        ChatReceivedEvent event = new ChatReceivedEvent(msg);
+        Ref.getEventManager().handleEvent(event);
+
+        mc.ingameGUI.addChatMessage(packet3chat.message);
+    }
+
+    public void handleArmAnimation(Packet18ArmAnimation packet18armanimation) {
+        Entity entity = func_12246_a(packet18armanimation.entityId);
+        if (entity == null) {
+            return;
+        }
+        if (packet18armanimation.animate == 1) {
+            EntityPlayer entityplayer = (EntityPlayer) entity;
+            entityplayer.swingItem();
+        } else if (packet18armanimation.animate == 100) {
+            entity.field_9300_bu = true;
+        } else if (packet18armanimation.animate == 101) {
+            entity.field_9300_bu = false;
+        } else if (packet18armanimation.animate == 102) {
+            entity.field_9299_bv = true;
+        } else if (packet18armanimation.animate == 103) {
+            entity.field_9299_bv = false;
+        } else if (packet18armanimation.animate == 104) {
+            entity.field_12240_bw = true;
+        } else if (packet18armanimation.animate == 105) {
+            entity.field_12240_bw = false;
+        } else if (packet18armanimation.animate == 2) {
+            entity.performHurtAnimation();
+        }
+    }
+
+    public void handleHandshake(Packet2Handshake packet2handshake) {
+        if (packet2handshake.username.equals("-")) {
+            addToSendQueue(new Packet1Login(mc.session.playerName, "Password", 8));
         } else {
             try {
-                URL var2 = new URL("http://www.minecraft.net/game/joinserver.jsp?user=" + this.mc.session.playerName + "&sessionId=" + this.mc.session.field_6543_c + "&serverId=" + var1.username);
-                BufferedReader var3 = new BufferedReader(new InputStreamReader(var2.openStream()));
-                String var4 = var3.readLine();
-                var3.close();
-                if(var4.equalsIgnoreCase("ok")) {
-                    this.addToSendQueue(new Packet1Login(this.mc.session.playerName, "Password", 8));
+                URL url = new URL((new StringBuilder()).append("http://www.minecraft.net/game/joinserver.jsp?user=").append(mc.session.playerName).append("&sessionId=").append(mc.session.field_6543_c).append("&serverId=").append(packet2handshake.username).toString());
+                BufferedReader bufferedreader = new BufferedReader(new InputStreamReader(url.openStream()));
+                String s = bufferedreader.readLine();
+                bufferedreader.close();
+                if (s.equalsIgnoreCase("ok")) {
+                    addToSendQueue(new Packet1Login(mc.session.playerName, "Password", 8));
                 } else {
-                    this.netManager.networkShutdown("disconnect.loginFailedInfo", new Object[]{var4});
+                    netManager.networkShutdown("disconnect.loginFailedInfo", new Object[]{
+                            s
+                    });
                 }
-            } catch (Exception var5) {
-                var5.printStackTrace();
-                this.netManager.networkShutdown("disconnect.genericReason", new Object[]{"Internal client error: " + var5.toString()});
+            } catch (Exception exception) {
+                exception.printStackTrace();
+                netManager.networkShutdown("disconnect.genericReason", new Object[]{
+                        (new StringBuilder()).append("Internal client error: ").append(exception.toString()).toString()
+                });
             }
         }
-
     }
 
     public void disconnect() {
-        this.disconnected = true;
-        this.netManager.networkShutdown("disconnect.closed", new Object[0]);
-    }
-
-    public void handleMobSpawn(Packet24MobSpawn var1) {
-        double var2 = (double)var1.xPosition / 32.0D;
-        double var4 = (double)var1.yPosition / 32.0D;
-        double var6 = (double)var1.zPosition / 32.0D;
-        float var8 = (float)(var1.yaw * 360) / 256.0F;
-        float var9 = (float)(var1.pitch * 360) / 256.0F;
-        EntityLiving var10 = (EntityLiving)EntityList.createEntity(var1.type, this.mc.theWorld);
-        var10.serverPosX = var1.xPosition;
-        var10.serverPosY = var1.yPosition;
-        var10.serverPosZ = var1.zPosition;
-        var10.field_620_ab = var1.entityId;
-        var10.setPositionAndRotation(var2, var4, var6, var8, var9);
-        var10.field_9343_G = true;
-        this.worldClient.func_712_a(var1.entityId, var10);
-    }
-
-    public void handleUpdateTime(Packet4UpdateTime var1) {
-        this.mc.theWorld.setWorldTime(var1.time);
-    }
-
-    public void handleSpawnPosition(Packet6SpawnPosition var1) {
-        this.worldClient.spawnX = var1.xPosition;
-        this.worldClient.spawnY = var1.yPosition;
-        this.worldClient.spawnZ = var1.zPosition;
-    }
-
-    public void func_6497_a(Packet39 var1) {
-        Object var2 = this.func_12246_a(var1.field_6365_a);
-        Entity var3 = this.func_12246_a(var1.field_6364_b);
-        if(var1.field_6365_a == this.mc.thePlayer.field_620_ab) {
-            var2 = this.mc.thePlayer;
-        }
-
-        if(var2 != null) {
-            ((Entity)var2).mountEntity(var3);
-        }
-    }
-
-    public void func_9447_a(Packet38 var1) {
-        Entity var2 = this.func_12246_a(var1.field_9274_a);
-        if(var2 != null) {
-            var2.func_9282_a(var1.field_9273_b);
-        }
-
-    }
-
-    private Entity func_12246_a(int var1) {
-        return (Entity)(var1 == this.mc.thePlayer.field_620_ab ? this.mc.thePlayer : this.worldClient.func_709_b(var1));
-    }
-
-    public void handleHealth(Packet8 var1) {
-        this.mc.thePlayer.setHealth(var1.healthMP);
-    }
-
-    public void func_9448_a(Packet9 var1) {
-        this.mc.respawn();
-    }
-
-    public void func_12245_a(Packet60 var1) {
-        Explosion var2 = new Explosion(this.mc.theWorld, (Entity)null, var1.field_12236_a, var1.field_12235_b, var1.field_12239_c, var1.field_12238_d);
-        var2.field_12251_g = var1.field_12237_e;
-        var2.func_12247_b();
-    }
-
-    public void func_20087_a(Packet100 var1) {
-        if(var1.field_20037_b == 0) {
-            InventoryBasic var2 = new InventoryBasic(var1.field_20040_c, var1.field_20039_d);
-            this.mc.thePlayer.displayGUIChest(var2);
-            this.mc.thePlayer.field_20068_h.unusedList = var1.field_20038_a;
-        } else if(var1.field_20037_b == 2) {
-            TileEntityFurnace var3 = new TileEntityFurnace();
-            this.mc.thePlayer.displayGUIFurnace(var3);
-            this.mc.thePlayer.field_20068_h.unusedList = var1.field_20038_a;
-        } else if(var1.field_20037_b == 1) {
-            EntityPlayerSP var4 = this.mc.thePlayer;
-            this.mc.thePlayer.displayWorkbenchGUI(MathHelper.floor_double(var4.posX), MathHelper.floor_double(var4.posY), MathHelper.floor_double(var4.posZ));
-            this.mc.thePlayer.field_20068_h.unusedList = var1.field_20038_a;
-        }
-
-    }
-
-    public void func_20088_a(Packet103 var1) {
-        if(var1.field_20042_a == -1) {
-            this.mc.thePlayer.inventory.func_20076_b(var1.field_20043_c);
-        } else if(var1.field_20042_a == 0) {
-            this.mc.thePlayer.field_20069_g.func_20119_a(var1.field_20041_b, var1.field_20043_c);
-        } else if(var1.field_20042_a == this.mc.thePlayer.field_20068_h.unusedList) {
-            this.mc.thePlayer.field_20068_h.func_20119_a(var1.field_20041_b, var1.field_20043_c);
-        }
-
-    }
-
-    public void func_20089_a(Packet106 var1) {
-        CraftingInventoryCB var2 = null;
-        if(var1.field_20029_a == 0) {
-            var2 = this.mc.thePlayer.field_20069_g;
-        } else if(var1.field_20029_a == this.mc.thePlayer.field_20068_h.unusedList) {
-            var2 = this.mc.thePlayer.field_20068_h;
-        }
-
-        if(var2 != null) {
-            if(var1.field_20030_c) {
-                var2.func_20113_a(var1.field_20028_b);
+        disconnected = true;
+        netManager.networkShutdown("disconnect.closed", new Object[0]);
+    }
+
+    public void handleMobSpawn(Packet24MobSpawn packet24mobspawn) {
+        double d = (double) packet24mobspawn.xPosition / 32D;
+        double d1 = (double) packet24mobspawn.yPosition / 32D;
+        double d2 = (double) packet24mobspawn.zPosition / 32D;
+        float f = (float) (packet24mobspawn.yaw * 360) / 256F;
+        float f1 = (float) (packet24mobspawn.pitch * 360) / 256F;
+        EntityLiving entityliving = (EntityLiving) EntityList.createEntity(packet24mobspawn.type, mc.theWorld);
+        entityliving.serverPosX = packet24mobspawn.xPosition;
+        entityliving.serverPosY = packet24mobspawn.yPosition;
+        entityliving.serverPosZ = packet24mobspawn.zPosition;
+        entityliving.field_620_ab = packet24mobspawn.entityId;
+        entityliving.setPositionAndRotation(d, d1, d2, f, f1);
+        entityliving.field_9343_G = true;
+        worldClient.func_712_a(packet24mobspawn.entityId, entityliving);
+    }
+
+    public void handleUpdateTime(Packet4UpdateTime packet4updatetime) {
+        PacketTimeUpdateEvent event = new PacketTimeUpdateEvent(packet4updatetime);
+        Ref.getEventManager().handleEvent(event);
+
+        if (event.isCancelled()) {
+            return;
+        }
+
+        mc.theWorld.setWorldTime(packet4updatetime.time);
+    }
+
+    public void handleSpawnPosition(Packet6SpawnPosition packet6spawnposition) {
+        worldClient.spawnX = packet6spawnposition.xPosition;
+        worldClient.spawnY = packet6spawnposition.yPosition;
+        worldClient.spawnZ = packet6spawnposition.zPosition;
+    }
+
+    public void func_6497_a(Packet39 packet39) {
+        Object obj = func_12246_a(packet39.field_6365_a);
+        Entity entity = func_12246_a(packet39.field_6364_b);
+        if (packet39.field_6365_a == mc.thePlayer.field_620_ab) {
+            obj = mc.thePlayer;
+        }
+        if (obj == null) {
+            return;
+        } else {
+            ((Entity) (obj)).mountEntity(entity);
+            return;
+        }
+    }
+
+    public void func_9447_a(Packet38 packet38) {
+        Entity entity = func_12246_a(packet38.field_9274_a);
+        if (entity != null) {
+            entity.func_9282_a(packet38.field_9273_b);
+        }
+    }
+
+    private Entity func_12246_a(int i) {
+        if (i == mc.thePlayer.field_620_ab) {
+            return mc.thePlayer;
+        } else {
+            return worldClient.func_709_b(i);
+        }
+    }
+
+    public void handleHealth(Packet8 packet8) {
+        mc.thePlayer.setHealth(packet8.healthMP);
+    }
+
+    public void func_9448_a(Packet9 packet9) {
+        mc.respawn();
+    }
+
+    public void func_12245_a(Packet60 packet60) {
+        Explosion explosion = new Explosion(mc.theWorld, null, packet60.field_12236_a, packet60.field_12235_b, packet60.field_12239_c, packet60.field_12238_d);
+        explosion.field_12251_g = packet60.field_12237_e;
+        explosion.func_12247_b();
+    }
+
+    public void func_20087_a(Packet100 packet100) {
+        if (packet100.field_20037_b == 0) {
+            InventoryBasic inventorybasic = new InventoryBasic(packet100.field_20040_c, packet100.field_20039_d);
+            mc.thePlayer.displayGUIChest(inventorybasic);
+            mc.thePlayer.field_20068_h.unusedList = packet100.field_20038_a;
+        } else if (packet100.field_20037_b == 2) {
+            TileEntityFurnace tileentityfurnace = new TileEntityFurnace();
+            mc.thePlayer.displayGUIFurnace(tileentityfurnace);
+            mc.thePlayer.field_20068_h.unusedList = packet100.field_20038_a;
+        } else if (packet100.field_20037_b == 1) {
+            EntityPlayerSP entityplayersp = mc.thePlayer;
+            mc.thePlayer.displayWorkbenchGUI(MathHelper.floor_double(((EntityPlayer) (entityplayersp)).posX), MathHelper.floor_double(((EntityPlayer) (entityplayersp)).posY), MathHelper.floor_double(((EntityPlayer) (entityplayersp)).posZ));
+            mc.thePlayer.field_20068_h.unusedList = packet100.field_20038_a;
+        }
+    }
+
+    public void func_20088_a(Packet103 packet103) {
+        if (packet103.field_20042_a == -1) {
+            mc.thePlayer.inventory.func_20076_b(packet103.field_20043_c);
+        } else if (packet103.field_20042_a == 0) {
+            mc.thePlayer.field_20069_g.func_20119_a(packet103.field_20041_b, packet103.field_20043_c);
+        } else if (packet103.field_20042_a == mc.thePlayer.field_20068_h.unusedList) {
+            mc.thePlayer.field_20068_h.func_20119_a(packet103.field_20041_b, packet103.field_20043_c);
+        }
+    }
+
+    public void func_20089_a(Packet106 packet106) {
+        CraftingInventoryCB craftinginventorycb = null;
+        if (packet106.field_20029_a == 0) {
+            craftinginventorycb = mc.thePlayer.field_20069_g;
+        } else if (packet106.field_20029_a == mc.thePlayer.field_20068_h.unusedList) {
+            craftinginventorycb = mc.thePlayer.field_20068_h;
+        }
+        if (craftinginventorycb != null) {
+            if (packet106.field_20030_c) {
+                craftinginventorycb.func_20113_a(packet106.field_20028_b);
             } else {
-                var2.func_20110_b(var1.field_20028_b);
-                this.addToSendQueue(new Packet106(var1.field_20029_a, var1.field_20028_b, true));
+                craftinginventorycb.func_20110_b(packet106.field_20028_b);
+                addToSendQueue(new Packet106(packet106.field_20029_a, packet106.field_20028_b, true));
             }
         }
-
     }
 
-    public void func_20094_a(Packet104 var1) {
-        if(var1.field_20036_a == 0) {
-            this.mc.thePlayer.field_20069_g.func_20115_a(var1.field_20035_b);
-        } else if(var1.field_20036_a == this.mc.thePlayer.field_20068_h.unusedList) {
-            this.mc.thePlayer.field_20068_h.func_20115_a(var1.field_20035_b);
+    public void func_20094_a(Packet104 packet104) {
+        if (packet104.field_20036_a == 0) {
+            mc.thePlayer.field_20069_g.func_20115_a(packet104.field_20035_b);
+        } else if (packet104.field_20036_a == mc.thePlayer.field_20068_h.unusedList) {
+            mc.thePlayer.field_20068_h.func_20115_a(packet104.field_20035_b);
         }
-
     }
 
-    public void func_20093_a(Packet130 var1) {
-        if(this.mc.theWorld.blockExists(var1.field_20020_a, var1.field_20019_b, var1.field_20022_c)) {
-            TileEntity var2 = this.mc.theWorld.getBlockTileEntity(var1.field_20020_a, var1.field_20019_b, var1.field_20022_c);
-            if(var2 instanceof TileEntitySign) {
-                TileEntitySign var3 = (TileEntitySign)var2;
-
-                for(int var4 = 0; var4 < 4; ++var4) {
-                    var3.signText[var4] = var1.field_20021_d[var4];
+    public void func_20093_a(Packet130 packet130) {
+        if (mc.theWorld.blockExists(packet130.field_20020_a, packet130.field_20019_b, packet130.field_20022_c)) {
+            TileEntity tileentity = mc.theWorld.getBlockTileEntity(packet130.field_20020_a, packet130.field_20019_b, packet130.field_20022_c);
+            if (tileentity instanceof TileEntitySign) {
+                TileEntitySign tileentitysign = (TileEntitySign) tileentity;
+                for (int i = 0; i < 4; i++) {
+                    tileentitysign.signText[i] = packet130.field_20021_d[i];
                 }
 
-                var3.onInventoryChanged();
+                tileentitysign.onInventoryChanged();
             }
         }
-
-    }
-
-    public void func_20090_a(Packet105 var1) {
-        this.func_4114_b(var1);
-        if(this.mc.thePlayer.field_20068_h != null && this.mc.thePlayer.field_20068_h.unusedList == var1.field_20032_a) {
-            this.mc.thePlayer.field_20068_h.func_20112_a(var1.field_20031_b, var1.field_20033_c);
-        }
-
-    }
-
-    public void handlePlayerInventory(Packet5PlayerInventory var1) {
-        Entity var2 = this.func_12246_a(var1.type);
-        if(var2 != null) {
-            var2.func_20045_c(var1.stacks, var1.field_20044_c);
-        }
-
-    }
-
-    public void func_20092_a(Packet101 var1) {
-        this.mc.thePlayer.func_20059_m();
+    }
+
+    public void func_20090_a(Packet105 packet105) {
+        func_4114_b(packet105);
+        if (mc.thePlayer.field_20068_h != null && mc.thePlayer.field_20068_h.unusedList == packet105.field_20032_a) {
+            mc.thePlayer.field_20068_h.func_20112_a(packet105.field_20031_b, packet105.field_20033_c);
+        }
+    }
+
+    public void handlePlayerInventory(Packet5PlayerInventory packet5playerinventory) {
+        Entity entity = func_12246_a(packet5playerinventory.type);
+        if (entity != null) {
+            entity.func_20045_c(packet5playerinventory.stacks, packet5playerinventory.field_20044_c);
+        }
+    }
+
+    public void func_20092_a(Packet101 packet101) {
+        mc.thePlayer.func_20059_m();
     }
 }
