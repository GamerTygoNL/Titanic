--- net/minecraft/src/EntityDiggingFX.java
+++ net/minecraft/src/EntityDiggingFX.java
@@ -1,25 +1,27 @@
 package net.minecraft.src;
 
 public class EntityDiggingFX extends EntityFX {
-    private Block field_4082_a;
-
-    public EntityDiggingFX(World var1, double var2, double var4, double var6, double var8, double var10, double var12, Block var14) {
-        super(var1, var2, var4, var6, var8, var10, var12);
-        this.field_4082_a = var14;
-        this.field_670_b = var14.blockIndexInTexture;
-        this.field_664_h = var14.field_357_bm;
-        this.particleRed = this.particleBlue = this.particleGreen = 0.6F;
-        this.field_665_g /= 2.0F;
+
+    private final Block field_4082_a;
+
+    public EntityDiggingFX(World world, double d, double d1, double d2,
+                           double d3, double d4, double d5, Block block) {
+        super(world, d, d1, d2, d3, d4, d5);
+        field_4082_a = block;
+        field_670_b = block.blockIndexInTexture;
+        field_664_h = block.field_357_bm;
+        particleRed = particleBlue = particleGreen = 0.6F;
+        field_665_g /= 2.0F;
     }
 
-    public EntityDiggingFX func_4041_a(int var1, int var2, int var3) {
-        if(this.field_4082_a == Block.grass) {
+    public EntityDiggingFX func_4041_a(int i, int j, int k) {
+        if (field_4082_a == Block.grass) {
             return this;
         } else {
-            int var4 = this.field_4082_a.colorMultiplier(this.worldObj, var1, var2, var3);
-            this.particleRed *= (float)(var4 >> 16 & 255) / 255.0F;
-            this.particleBlue *= (float)(var4 >> 8 & 255) / 255.0F;
-            this.particleGreen *= (float)(var4 & 255) / 255.0F;
+            int l = field_4082_a.colorMultiplier(worldObj, i, j, k);
+            particleRed *= (float) (l >> 16 & 0xff) / 255F;
+            particleBlue *= (float) (l >> 8 & 0xff) / 255F;
+            particleGreen *= (float) (l & 0xff) / 255F;
             return this;
         }
     }
@@ -28,20 +30,20 @@
         return 1;
     }
 
-    public void func_406_a(Tessellator var1, float var2, float var3, float var4, float var5, float var6, float var7) {
-        float var8 = ((float)(this.field_670_b % 16) + this.field_669_c / 4.0F) / 16.0F;
-        float var9 = var8 + 0.999F / 64.0F;
-        float var10 = ((float)(this.field_670_b / 16) + this.field_668_d / 4.0F) / 16.0F;
-        float var11 = var10 + 0.999F / 64.0F;
-        float var12 = 0.1F * this.field_665_g;
-        float var13 = (float)(this.prevPosX + (this.posX - this.prevPosX) * (double)var2 - field_660_l);
-        float var14 = (float)(this.prevPosY + (this.posY - this.prevPosY) * (double)var2 - field_659_m);
-        float var15 = (float)(this.prevPosZ + (this.posZ - this.prevPosZ) * (double)var2 - field_658_n);
-        float var16 = this.getEntityBrightness(var2);
-        var1.setColorOpaque_F(var16 * this.particleRed, var16 * this.particleBlue, var16 * this.particleGreen);
-        var1.addVertexWithUV((double)(var13 - var3 * var12 - var6 * var12), (double)(var14 - var4 * var12), (double)(var15 - var5 * var12 - var7 * var12), (double)var8, (double)var11);
-        var1.addVertexWithUV((double)(var13 - var3 * var12 + var6 * var12), (double)(var14 + var4 * var12), (double)(var15 - var5 * var12 + var7 * var12), (double)var8, (double)var10);
-        var1.addVertexWithUV((double)(var13 + var3 * var12 + var6 * var12), (double)(var14 + var4 * var12), (double)(var15 + var5 * var12 + var7 * var12), (double)var9, (double)var10);
-        var1.addVertexWithUV((double)(var13 + var3 * var12 - var6 * var12), (double)(var14 - var4 * var12), (double)(var15 + var5 * var12 - var7 * var12), (double)var9, (double)var11);
+    public void func_406_a(Tessellator tessellator, float f, float f1, float f2, float f3, float f4, float f5) {
+        float f6 = ((float) (field_670_b % 16) + field_669_c / 4F) / 16F;
+        float f7 = f6 + 0.01560938F;
+        float f8 = ((float) (field_670_b / 16) + field_668_d / 4F) / 16F;
+        float f9 = f8 + 0.01560938F;
+        float f10 = 0.1F * field_665_g;
+        float f11 = (float) ((prevPosX + (posX - prevPosX) * (double) f) - field_660_l);
+        float f12 = (float) ((prevPosY + (posY - prevPosY) * (double) f) - field_659_m);
+        float f13 = (float) ((prevPosZ + (posZ - prevPosZ) * (double) f) - field_658_n);
+        float f14 = getEntityBrightness(f);
+        tessellator.setColorOpaque_F(f14 * particleRed, f14 * particleBlue, f14 * particleGreen);
+        tessellator.addVertexWithUV(f11 - f1 * f10 - f4 * f10, f12 - f2 * f10, f13 - f3 * f10 - f5 * f10, f6, f9);
+        tessellator.addVertexWithUV((f11 - f1 * f10) + f4 * f10, f12 + f2 * f10, (f13 - f3 * f10) + f5 * f10, f6, f8);
+        tessellator.addVertexWithUV(f11 + f1 * f10 + f4 * f10, f12 + f2 * f10, f13 + f3 * f10 + f5 * f10, f7, f8);
+        tessellator.addVertexWithUV((f11 + f1 * f10) - f4 * f10, f12 - f2 * f10, (f13 + f3 * f10) - f5 * f10, f7, f9);
     }
 }
