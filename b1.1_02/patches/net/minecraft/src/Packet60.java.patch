--- net/minecraft/src/Packet60.java
+++ net/minecraft/src/Packet60.java
@@ -8,60 +8,61 @@
 import java.util.Set;
 
 public class Packet60 extends Packet {
+
     public double field_12236_a;
     public double field_12235_b;
     public double field_12239_c;
     public float field_12238_d;
     public Set field_12237_e;
 
-    public void readPacketData(DataInputStream var1) throws IOException {
-        this.field_12236_a = var1.readDouble();
-        this.field_12235_b = var1.readDouble();
-        this.field_12239_c = var1.readDouble();
-        this.field_12238_d = var1.readFloat();
-        int var2 = var1.readInt();
-        this.field_12237_e = new HashSet();
-        int var3 = (int)this.field_12236_a;
-        int var4 = (int)this.field_12235_b;
-        int var5 = (int)this.field_12239_c;
-
-        for(int var6 = 0; var6 < var2; ++var6) {
-            int var7 = var1.readByte() + var3;
-            int var8 = var1.readByte() + var4;
-            int var9 = var1.readByte() + var5;
-            this.field_12237_e.add(new ChunkPosition(var7, var8, var9));
-        }
-
-    }
-
-    public void writePacketData(DataOutputStream var1) throws IOException {
-        var1.writeDouble(this.field_12236_a);
-        var1.writeDouble(this.field_12235_b);
-        var1.writeDouble(this.field_12239_c);
-        var1.writeFloat(this.field_12238_d);
-        var1.writeInt(this.field_12237_e.size());
-        int var2 = (int)this.field_12236_a;
-        int var3 = (int)this.field_12235_b;
-        int var4 = (int)this.field_12239_c;
-        Iterator var5 = this.field_12237_e.iterator();
-
-        while(var5.hasNext()) {
-            ChunkPosition var6 = (ChunkPosition)var5.next();
-            int var7 = var6.x - var2;
-            int var8 = var6.y - var3;
-            int var9 = var6.z - var4;
-            var1.writeByte(var7);
-            var1.writeByte(var8);
-            var1.writeByte(var9);
-        }
-
-    }
-
-    public void processPacket(NetHandler var1) {
-        var1.func_12245_a(this);
+    public Packet60() {
+    }
+
+    public void readPacketData(DataInputStream datainputstream) throws IOException {
+        field_12236_a = datainputstream.readDouble();
+        field_12235_b = datainputstream.readDouble();
+        field_12239_c = datainputstream.readDouble();
+        field_12238_d = datainputstream.readFloat();
+        int i = datainputstream.readInt();
+        field_12237_e = new HashSet();
+        int j = (int) field_12236_a;
+        int k = (int) field_12235_b;
+        int l = (int) field_12239_c;
+        for (int i1 = 0; i1 < i; i1++) {
+            int j1 = datainputstream.readByte() + j;
+            int k1 = datainputstream.readByte() + k;
+            int l1 = datainputstream.readByte() + l;
+            field_12237_e.add(new ChunkPosition(j1, k1, l1));
+        }
+
+    }
+
+    public void writePacketData(DataOutputStream dataoutputstream) throws IOException {
+        dataoutputstream.writeDouble(field_12236_a);
+        dataoutputstream.writeDouble(field_12235_b);
+        dataoutputstream.writeDouble(field_12239_c);
+        dataoutputstream.writeFloat(field_12238_d);
+        dataoutputstream.writeInt(field_12237_e.size());
+        int i = (int) field_12236_a;
+        int j = (int) field_12235_b;
+        int k = (int) field_12239_c;
+        int j1;
+        for (Iterator iterator = field_12237_e.iterator(); iterator.hasNext(); dataoutputstream.writeByte(j1)) {
+            ChunkPosition chunkposition = (ChunkPosition) iterator.next();
+            int l = chunkposition.x - i;
+            int i1 = chunkposition.y - j;
+            j1 = chunkposition.z - k;
+            dataoutputstream.writeByte(l);
+            dataoutputstream.writeByte(i1);
+        }
+
+    }
+
+    public void processPacket(NetHandler nethandler) {
+        nethandler.func_12245_a(this);
     }
 
     public int getPacketSize() {
-        return 32 + this.field_12237_e.size() * 3;
+        return 32 + field_12237_e.size() * 3;
     }
 }
